   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"parser.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.copy_till_non_printable_char,"ax",%progbits
  16              		.align	1
  17              		.syntax unified
  18              		.thumb
  19              		.thumb_func
  20              		.fpu softvfp
  22              	copy_till_non_printable_char:
  23              	.LFB0:
  24              		.file 1 "../system/src/ve_direct_protocol/parser.c"
   1:../system/src/ve_direct_protocol/parser.c **** /*
   2:../system/src/ve_direct_protocol/parser.c ****  * parser.c
   3:../system/src/ve_direct_protocol/parser.c ****  *
   4:../system/src/ve_direct_protocol/parser.c ****  *  Created on: 10.03.2019
   5:../system/src/ve_direct_protocol/parser.c ****  *      Author: mateusz
   6:../system/src/ve_direct_protocol/parser.c ****  */
   7:../system/src/ve_direct_protocol/parser.c **** 
   8:../system/src/ve_direct_protocol/parser.c **** #include "./ve_direct_protocol/parser.h"
   9:../system/src/ve_direct_protocol/parser.c **** #include "./ve_direct_protocol/average_struct.h"
  10:../system/src/ve_direct_protocol/parser.c **** 
  11:../system/src/ve_direct_protocol/parser.c **** #include <string.h>
  12:../system/src/ve_direct_protocol/parser.c **** #include <stdlib.h>
  13:../system/src/ve_direct_protocol/parser.c **** 
  14:../system/src/ve_direct_protocol/parser.c **** #define CHECKSUM_NAME_FIELD_LN_TO_DATA 10
  15:../system/src/ve_direct_protocol/parser.c **** #define LOWEST_PRINTABLE_CHARACTER 33
  16:../system/src/ve_direct_protocol/parser.c **** #define HIGHEST_PRINTABLE_CHARACTER 126
  17:../system/src/ve_direct_protocol/parser.c **** 
  18:../system/src/ve_direct_protocol/parser.c **** #define VE_DIRECT_MESSAGES_TO_SKIP 2
  19:../system/src/ve_direct_protocol/parser.c **** 
  20:../system/src/ve_direct_protocol/parser.c **** #define is_non_printable_character() (*(input + i) < LOWEST_PRINTABLE_CHARACTER || *(input + i) > H
  21:../system/src/ve_direct_protocol/parser.c **** #define is_printable_character() (*(input + i) >= LOWEST_PRINTABLE_CHARACTER && *(input + i) <= HIG
  22:../system/src/ve_direct_protocol/parser.c **** 
  23:../system/src/ve_direct_protocol/parser.c **** uint8_t key[9];			// the static array to store a key fetched from input file
  24:../system/src/ve_direct_protocol/parser.c **** uint8_t value[12];
  25:../system/src/ve_direct_protocol/parser.c **** 
  26:../system/src/ve_direct_protocol/parser.c **** uint8_t skip_counter = 0;	// counter used to skip some of VE.Direct protocol messages to spread an 
  27:../system/src/ve_direct_protocol/parser.c **** 							// period of time
  28:../system/src/ve_direct_protocol/parser.c **** 
  29:../system/src/ve_direct_protocol/parser.c **** //ve_direct_average_struct ve_avg;
  30:../system/src/ve_direct_protocol/parser.c **** 
  31:../system/src/ve_direct_protocol/parser.c **** static int copy_till_non_printable_char(uint8_t* input, uint16_t* input_offset, uint16_t input_ln, 
  25              		.loc 1 31 0
  26              		.cfi_startproc
  27              		@ args = 4, pretend = 0, frame = 0
  28              		@ frame_needed = 0, uses_anonymous_args = 0
  29              		@ link register save eliminated.
  30              	.LVL0:
  31 0000 F0B4     		push	{r4, r5, r6, r7}
  32              		.cfi_def_cfa_offset 16
  33              		.cfi_offset 4, -16
  34              		.cfi_offset 5, -12
  35              		.cfi_offset 6, -8
  36              		.cfi_offset 7, -4
  37 0002 BDF810C0 		ldrh	ip, [sp, #16]
  38              	.LVL1:
  32:../system/src/ve_direct_protocol/parser.c **** 
  33:../system/src/ve_direct_protocol/parser.c **** 	uint16_t j = 0;
  34:../system/src/ve_direct_protocol/parser.c **** 
  35:../system/src/ve_direct_protocol/parser.c **** 	uint16_t i = 0;
  36:../system/src/ve_direct_protocol/parser.c **** 
  37:../system/src/ve_direct_protocol/parser.c **** 	for (i = *input_offset; i < input_ln; i++) {
  39              		.loc 1 37 0
  40 0006 0C88     		ldrh	r4, [r1]
  41              	.LVL2:
  33:../system/src/ve_direct_protocol/parser.c **** 
  42              		.loc 1 33 0
  43 0008 0026     		movs	r6, #0
  44              	.LVL3:
  45              	.L2:
  46              		.loc 1 37 0 discriminator 1
  47 000a 9442     		cmp	r4, r2
  48 000c 1FD2     		bcs	.L11
  38:../system/src/ve_direct_protocol/parser.c **** 
  39:../system/src/ve_direct_protocol/parser.c **** 		// if we reach any non-printable character
  40:../system/src/ve_direct_protocol/parser.c **** 		if (is_non_printable_character() || j > output_ln) {
  49              		.loc 1 40 0
  50 000e 075D     		ldrb	r7, [r0, r4]	@ zero_extendqisi2
  51 0010 A7F12105 		sub	r5, r7, #33
  52 0014 EDB2     		uxtb	r5, r5
  53 0016 5D2D     		cmp	r5, #93
  54 0018 07D8     		bhi	.L6
  55              		.loc 1 40 0 is_stmt 0 discriminator 1
  56 001a 6645     		cmp	r6, ip
  57 001c 05D8     		bhi	.L6
  41:../system/src/ve_direct_protocol/parser.c **** 
  42:../system/src/ve_direct_protocol/parser.c **** 			// stop copying and rewind to first printable character
  43:../system/src/ve_direct_protocol/parser.c **** 			do {
  44:../system/src/ve_direct_protocol/parser.c **** 				i++;
  45:../system/src/ve_direct_protocol/parser.c **** 			} while (is_non_printable_character() && i < input_ln);
  46:../system/src/ve_direct_protocol/parser.c **** 
  47:../system/src/ve_direct_protocol/parser.c **** 			// updating an offset to input buffer
  48:../system/src/ve_direct_protocol/parser.c **** 			*input_offset = i;
  49:../system/src/ve_direct_protocol/parser.c **** 
  50:../system/src/ve_direct_protocol/parser.c **** 			if (i > input_ln) {
  51:../system/src/ve_direct_protocol/parser.c **** 				return VE_DIRECT_STRING_END_REACH_TO_EARLY;
  52:../system/src/ve_direct_protocol/parser.c **** 			}
  53:../system/src/ve_direct_protocol/parser.c **** 			else {
  54:../system/src/ve_direct_protocol/parser.c **** 
  55:../system/src/ve_direct_protocol/parser.c **** 				// end exit from function
  56:../system/src/ve_direct_protocol/parser.c **** 				return 0;
  57:../system/src/ve_direct_protocol/parser.c **** 			}
  58:../system/src/ve_direct_protocol/parser.c **** 		}
  59:../system/src/ve_direct_protocol/parser.c **** 
  60:../system/src/ve_direct_protocol/parser.c **** 		output[j++] = input[i];
  58              		.loc 1 60 0 is_stmt 1 discriminator 2
  59 001e 751C     		adds	r5, r6, #1
  60              	.LVL4:
  61 0020 9F55     		strb	r7, [r3, r6]
  37:../system/src/ve_direct_protocol/parser.c **** 
  62              		.loc 1 37 0 discriminator 2
  63 0022 0134     		adds	r4, r4, #1
  64              	.LVL5:
  65 0024 A4B2     		uxth	r4, r4
  66              	.LVL6:
  67              		.loc 1 60 0 discriminator 2
  68 0026 AEB2     		uxth	r6, r5
  69 0028 EFE7     		b	.L2
  70              	.LVL7:
  71              	.L6:
  44:../system/src/ve_direct_protocol/parser.c **** 			} while (is_non_printable_character() && i < input_ln);
  72              		.loc 1 44 0 discriminator 2
  73 002a 0134     		adds	r4, r4, #1
  74              	.LVL8:
  75 002c A4B2     		uxth	r4, r4
  76              	.LVL9:
  45:../system/src/ve_direct_protocol/parser.c **** 
  77              		.loc 1 45 0 discriminator 2
  78 002e 035D     		ldrb	r3, [r0, r4]	@ zero_extendqisi2
  79 0030 213B     		subs	r3, r3, #33
  80 0032 DBB2     		uxtb	r3, r3
  81 0034 5D2B     		cmp	r3, #93
  82 0036 01D9     		bls	.L5
  45:../system/src/ve_direct_protocol/parser.c **** 
  83              		.loc 1 45 0 is_stmt 0 discriminator 1
  84 0038 A242     		cmp	r2, r4
  85 003a F6D8     		bhi	.L6
  86              	.L5:
  48:../system/src/ve_direct_protocol/parser.c **** 
  87              		.loc 1 48 0 is_stmt 1
  88 003c 0C80     		strh	r4, [r1]	@ movhi
  50:../system/src/ve_direct_protocol/parser.c **** 				return VE_DIRECT_STRING_END_REACH_TO_EARLY;
  89              		.loc 1 50 0
  90 003e A242     		cmp	r2, r4
  91 0040 02D3     		bcc	.L12
  56:../system/src/ve_direct_protocol/parser.c **** 			}
  92              		.loc 1 56 0
  93 0042 0020     		movs	r0, #0
  94              	.LVL10:
  95              	.L1:
  61:../system/src/ve_direct_protocol/parser.c **** 	}
  62:../system/src/ve_direct_protocol/parser.c **** 
  63:../system/src/ve_direct_protocol/parser.c **** 	*input_offset = i;
  64:../system/src/ve_direct_protocol/parser.c **** 
  65:../system/src/ve_direct_protocol/parser.c **** 	return 0;
  66:../system/src/ve_direct_protocol/parser.c **** }
  96              		.loc 1 66 0
  97 0044 F0BC     		pop	{r4, r5, r6, r7}
  98              		.cfi_remember_state
  99              		.cfi_restore 7
 100              		.cfi_restore 6
 101              		.cfi_restore 5
 102              		.cfi_restore 4
 103              		.cfi_def_cfa_offset 0
 104              	.LVL11:
 105 0046 7047     		bx	lr
 106              	.LVL12:
 107              	.L12:
 108              		.cfi_restore_state
  51:../system/src/ve_direct_protocol/parser.c **** 			}
 109              		.loc 1 51 0
 110 0048 6FF00100 		mvn	r0, #1
 111              	.LVL13:
 112 004c FAE7     		b	.L1
 113              	.LVL14:
 114              	.L11:
  63:../system/src/ve_direct_protocol/parser.c **** 
 115              		.loc 1 63 0
 116 004e 0C80     		strh	r4, [r1]	@ movhi
  65:../system/src/ve_direct_protocol/parser.c **** }
 117              		.loc 1 65 0
 118 0050 0020     		movs	r0, #0
 119              	.LVL15:
 120 0052 F7E7     		b	.L1
 121              		.cfi_endproc
 122              	.LFE0:
 124              		.section	.text.get_key_value_from_str,"ax",%progbits
 125              		.align	1
 126              		.syntax unified
 127              		.thumb
 128              		.thumb_func
 129              		.fpu softvfp
 131              	get_key_value_from_str:
 132              	.LFB1:
  67:../system/src/ve_direct_protocol/parser.c **** 
  68:../system/src/ve_direct_protocol/parser.c **** static ve_direct_key_values get_key_value_from_str(uint8_t* input) {
 133              		.loc 1 68 0
 134              		.cfi_startproc
 135              		@ args = 0, pretend = 0, frame = 0
 136              		@ frame_needed = 0, uses_anonymous_args = 0
 137              	.LVL16:
 138 0000 10B5     		push	{r4, lr}
 139              		.cfi_def_cfa_offset 8
 140              		.cfi_offset 4, -8
 141              		.cfi_offset 14, -4
 142 0002 0446     		mov	r4, r0
 143              	.LVL17:
  69:../system/src/ve_direct_protocol/parser.c **** 
  70:../system/src/ve_direct_protocol/parser.c **** 	const char *str = (const char*) input;
  71:../system/src/ve_direct_protocol/parser.c **** 
  72:../system/src/ve_direct_protocol/parser.c **** 	if (strcmp("PID", str) == 0) {
 144              		.loc 1 72 0
 145 0004 0146     		mov	r1, r0
 146 0006 4448     		ldr	r0, .L35
 147              	.LVL18:
 148 0008 FFF7FEFF 		bl	strcmp
 149              	.LVL19:
 150 000c 08B9     		cbnz	r0, .L34
  73:../system/src/ve_direct_protocol/parser.c **** 		return VE_PID;
 151              		.loc 1 73 0
 152 000e 0120     		movs	r0, #1
 153              	.L14:
  74:../system/src/ve_direct_protocol/parser.c **** 	}
  75:../system/src/ve_direct_protocol/parser.c **** 	if (strcmp("FW", str) == 0) {
  76:../system/src/ve_direct_protocol/parser.c **** 		return VE_FW;
  77:../system/src/ve_direct_protocol/parser.c **** 	}
  78:../system/src/ve_direct_protocol/parser.c **** 	if (strcmp("SER#", str) == 0) {
  79:../system/src/ve_direct_protocol/parser.c **** 		return VE_SERIAL;
  80:../system/src/ve_direct_protocol/parser.c **** 	}
  81:../system/src/ve_direct_protocol/parser.c **** 	if (strcmp("V", str) == 0) {
  82:../system/src/ve_direct_protocol/parser.c **** 		return VE_V;
  83:../system/src/ve_direct_protocol/parser.c **** 	}
  84:../system/src/ve_direct_protocol/parser.c **** 	if (strcmp("I", str) == 0) {
  85:../system/src/ve_direct_protocol/parser.c **** 		return VE_I;
  86:../system/src/ve_direct_protocol/parser.c **** 	}
  87:../system/src/ve_direct_protocol/parser.c **** 	if (strcmp("VPV", str) == 0) {
  88:../system/src/ve_direct_protocol/parser.c **** 		return VE_VPV;
  89:../system/src/ve_direct_protocol/parser.c **** 	}
  90:../system/src/ve_direct_protocol/parser.c **** 	if (strcmp("PPV", str) == 0) {
  91:../system/src/ve_direct_protocol/parser.c **** 		return VE_PPV;
  92:../system/src/ve_direct_protocol/parser.c **** 	}
  93:../system/src/ve_direct_protocol/parser.c **** 	if (strcmp("CS", str) == 0) {
  94:../system/src/ve_direct_protocol/parser.c **** 		return VE_CS;
  95:../system/src/ve_direct_protocol/parser.c **** 	}
  96:../system/src/ve_direct_protocol/parser.c **** 	if (strcmp("ERR", str) == 0) {
  97:../system/src/ve_direct_protocol/parser.c **** 		return VE_ERR;
  98:../system/src/ve_direct_protocol/parser.c **** 	}
  99:../system/src/ve_direct_protocol/parser.c **** 	if (strcmp("LOAD", str) == 0) {
 100:../system/src/ve_direct_protocol/parser.c **** 		return VE_LOAD;
 101:../system/src/ve_direct_protocol/parser.c **** 	}
 102:../system/src/ve_direct_protocol/parser.c **** 	if (strcmp("IL", str) == 0) {
 103:../system/src/ve_direct_protocol/parser.c **** 		return VE_IL;
 104:../system/src/ve_direct_protocol/parser.c **** 	}
 105:../system/src/ve_direct_protocol/parser.c **** 	if (strcmp("H19", str) == 0) {
 106:../system/src/ve_direct_protocol/parser.c **** 		return VE_H19;
 107:../system/src/ve_direct_protocol/parser.c **** 	}
 108:../system/src/ve_direct_protocol/parser.c **** 	if (strcmp("H20", str) == 0) {
 109:../system/src/ve_direct_protocol/parser.c **** 		return VE_H20;
 110:../system/src/ve_direct_protocol/parser.c **** 	}
 111:../system/src/ve_direct_protocol/parser.c **** 	if (strcmp("H21", str) == 0) {
 112:../system/src/ve_direct_protocol/parser.c **** 		return VE_H21;
 113:../system/src/ve_direct_protocol/parser.c **** 	}
 114:../system/src/ve_direct_protocol/parser.c **** 	if (strcmp("H22", str) == 0) {
 115:../system/src/ve_direct_protocol/parser.c **** 		return VE_H22;
 116:../system/src/ve_direct_protocol/parser.c **** 	}
 117:../system/src/ve_direct_protocol/parser.c **** 	if (strcmp("H23", str) == 0) {
 118:../system/src/ve_direct_protocol/parser.c **** 		return VE_H23;
 119:../system/src/ve_direct_protocol/parser.c **** 	}
 120:../system/src/ve_direct_protocol/parser.c **** 	if (strcmp("HSDS", str) == 0) {
 121:../system/src/ve_direct_protocol/parser.c **** 		return VE_HSDS;
 122:../system/src/ve_direct_protocol/parser.c **** 	}
 123:../system/src/ve_direct_protocol/parser.c **** 	if (strcmp("Checksum", str) == 0) {
 124:../system/src/ve_direct_protocol/parser.c **** 		return VE_CHECKSUM;
 125:../system/src/ve_direct_protocol/parser.c **** 	}
 126:../system/src/ve_direct_protocol/parser.c **** 
 127:../system/src/ve_direct_protocol/parser.c **** 	return VE_UNKNOWN;
 128:../system/src/ve_direct_protocol/parser.c **** }
 154              		.loc 1 128 0
 155 0010 10BD     		pop	{r4, pc}
 156              	.LVL20:
 157              	.L34:
  75:../system/src/ve_direct_protocol/parser.c **** 		return VE_FW;
 158              		.loc 1 75 0
 159 0012 2146     		mov	r1, r4
 160 0014 4148     		ldr	r0, .L35+4
 161 0016 FFF7FEFF 		bl	strcmp
 162              	.LVL21:
 163 001a 0028     		cmp	r0, #0
 164 001c 59D0     		beq	.L16
  78:../system/src/ve_direct_protocol/parser.c **** 		return VE_SERIAL;
 165              		.loc 1 78 0
 166 001e 2146     		mov	r1, r4
 167 0020 3F48     		ldr	r0, .L35+8
 168 0022 FFF7FEFF 		bl	strcmp
 169              	.LVL22:
 170 0026 0028     		cmp	r0, #0
 171 0028 55D0     		beq	.L17
  81:../system/src/ve_direct_protocol/parser.c **** 		return VE_V;
 172              		.loc 1 81 0
 173 002a 2146     		mov	r1, r4
 174 002c 3D48     		ldr	r0, .L35+12
 175 002e FFF7FEFF 		bl	strcmp
 176              	.LVL23:
 177 0032 0028     		cmp	r0, #0
 178 0034 51D0     		beq	.L18
  84:../system/src/ve_direct_protocol/parser.c **** 		return VE_I;
 179              		.loc 1 84 0
 180 0036 2146     		mov	r1, r4
 181 0038 3B48     		ldr	r0, .L35+16
 182 003a FFF7FEFF 		bl	strcmp
 183              	.LVL24:
 184 003e 0028     		cmp	r0, #0
 185 0040 4DD0     		beq	.L19
  87:../system/src/ve_direct_protocol/parser.c **** 		return VE_VPV;
 186              		.loc 1 87 0
 187 0042 2146     		mov	r1, r4
 188 0044 3948     		ldr	r0, .L35+20
 189 0046 FFF7FEFF 		bl	strcmp
 190              	.LVL25:
 191 004a 0028     		cmp	r0, #0
 192 004c 49D0     		beq	.L20
  90:../system/src/ve_direct_protocol/parser.c **** 		return VE_PPV;
 193              		.loc 1 90 0
 194 004e 2146     		mov	r1, r4
 195 0050 3748     		ldr	r0, .L35+24
 196 0052 FFF7FEFF 		bl	strcmp
 197              	.LVL26:
 198 0056 0028     		cmp	r0, #0
 199 0058 45D0     		beq	.L21
  93:../system/src/ve_direct_protocol/parser.c **** 		return VE_CS;
 200              		.loc 1 93 0
 201 005a 2146     		mov	r1, r4
 202 005c 3548     		ldr	r0, .L35+28
 203 005e FFF7FEFF 		bl	strcmp
 204              	.LVL27:
 205 0062 0028     		cmp	r0, #0
 206 0064 41D0     		beq	.L22
  96:../system/src/ve_direct_protocol/parser.c **** 		return VE_ERR;
 207              		.loc 1 96 0
 208 0066 2146     		mov	r1, r4
 209 0068 3348     		ldr	r0, .L35+32
 210 006a FFF7FEFF 		bl	strcmp
 211              	.LVL28:
 212 006e 0028     		cmp	r0, #0
 213 0070 3DD0     		beq	.L23
  99:../system/src/ve_direct_protocol/parser.c **** 		return VE_LOAD;
 214              		.loc 1 99 0
 215 0072 2146     		mov	r1, r4
 216 0074 3148     		ldr	r0, .L35+36
 217 0076 FFF7FEFF 		bl	strcmp
 218              	.LVL29:
 219 007a 0028     		cmp	r0, #0
 220 007c 39D0     		beq	.L24
 102:../system/src/ve_direct_protocol/parser.c **** 		return VE_IL;
 221              		.loc 1 102 0
 222 007e 2146     		mov	r1, r4
 223 0080 2F48     		ldr	r0, .L35+40
 224 0082 FFF7FEFF 		bl	strcmp
 225              	.LVL30:
 226 0086 B0B3     		cbz	r0, .L25
 105:../system/src/ve_direct_protocol/parser.c **** 		return VE_H19;
 227              		.loc 1 105 0
 228 0088 2146     		mov	r1, r4
 229 008a 2E48     		ldr	r0, .L35+44
 230 008c FFF7FEFF 		bl	strcmp
 231              	.LVL31:
 232 0090 98B3     		cbz	r0, .L26
 108:../system/src/ve_direct_protocol/parser.c **** 		return VE_H20;
 233              		.loc 1 108 0
 234 0092 2146     		mov	r1, r4
 235 0094 2C48     		ldr	r0, .L35+48
 236 0096 FFF7FEFF 		bl	strcmp
 237              	.LVL32:
 238 009a 80B3     		cbz	r0, .L27
 111:../system/src/ve_direct_protocol/parser.c **** 		return VE_H21;
 239              		.loc 1 111 0
 240 009c 2146     		mov	r1, r4
 241 009e 2B48     		ldr	r0, .L35+52
 242 00a0 FFF7FEFF 		bl	strcmp
 243              	.LVL33:
 244 00a4 68B3     		cbz	r0, .L28
 114:../system/src/ve_direct_protocol/parser.c **** 		return VE_H22;
 245              		.loc 1 114 0
 246 00a6 2146     		mov	r1, r4
 247 00a8 2948     		ldr	r0, .L35+56
 248 00aa FFF7FEFF 		bl	strcmp
 249              	.LVL34:
 250 00ae 50B3     		cbz	r0, .L29
 117:../system/src/ve_direct_protocol/parser.c **** 		return VE_H23;
 251              		.loc 1 117 0
 252 00b0 2146     		mov	r1, r4
 253 00b2 2848     		ldr	r0, .L35+60
 254 00b4 FFF7FEFF 		bl	strcmp
 255              	.LVL35:
 256 00b8 38B3     		cbz	r0, .L30
 120:../system/src/ve_direct_protocol/parser.c **** 		return VE_HSDS;
 257              		.loc 1 120 0
 258 00ba 2146     		mov	r1, r4
 259 00bc 2648     		ldr	r0, .L35+64
 260 00be FFF7FEFF 		bl	strcmp
 261              	.LVL36:
 262 00c2 20B3     		cbz	r0, .L31
 123:../system/src/ve_direct_protocol/parser.c **** 		return VE_CHECKSUM;
 263              		.loc 1 123 0
 264 00c4 2146     		mov	r1, r4
 265 00c6 2548     		ldr	r0, .L35+68
 266 00c8 FFF7FEFF 		bl	strcmp
 267              	.LVL37:
 268 00cc 08BB     		cbnz	r0, .L32
 124:../system/src/ve_direct_protocol/parser.c **** 	}
 269              		.loc 1 124 0
 270 00ce 1220     		movs	r0, #18
 271 00d0 9EE7     		b	.L14
 272              	.L16:
  76:../system/src/ve_direct_protocol/parser.c **** 	}
 273              		.loc 1 76 0
 274 00d2 0220     		movs	r0, #2
 275 00d4 9CE7     		b	.L14
 276              	.L17:
  79:../system/src/ve_direct_protocol/parser.c **** 	}
 277              		.loc 1 79 0
 278 00d6 0320     		movs	r0, #3
 279 00d8 9AE7     		b	.L14
 280              	.L18:
  82:../system/src/ve_direct_protocol/parser.c **** 	}
 281              		.loc 1 82 0
 282 00da 0420     		movs	r0, #4
 283 00dc 98E7     		b	.L14
 284              	.L19:
  85:../system/src/ve_direct_protocol/parser.c **** 	}
 285              		.loc 1 85 0
 286 00de 0520     		movs	r0, #5
 287 00e0 96E7     		b	.L14
 288              	.L20:
  88:../system/src/ve_direct_protocol/parser.c **** 	}
 289              		.loc 1 88 0
 290 00e2 0620     		movs	r0, #6
 291 00e4 94E7     		b	.L14
 292              	.L21:
  91:../system/src/ve_direct_protocol/parser.c **** 	}
 293              		.loc 1 91 0
 294 00e6 0720     		movs	r0, #7
 295 00e8 92E7     		b	.L14
 296              	.L22:
  94:../system/src/ve_direct_protocol/parser.c **** 	}
 297              		.loc 1 94 0
 298 00ea 0820     		movs	r0, #8
 299 00ec 90E7     		b	.L14
 300              	.L23:
  97:../system/src/ve_direct_protocol/parser.c **** 	}
 301              		.loc 1 97 0
 302 00ee 0920     		movs	r0, #9
 303 00f0 8EE7     		b	.L14
 304              	.L24:
 100:../system/src/ve_direct_protocol/parser.c **** 	}
 305              		.loc 1 100 0
 306 00f2 0A20     		movs	r0, #10
 307 00f4 8CE7     		b	.L14
 308              	.L25:
 103:../system/src/ve_direct_protocol/parser.c **** 	}
 309              		.loc 1 103 0
 310 00f6 0B20     		movs	r0, #11
 311 00f8 8AE7     		b	.L14
 312              	.L26:
 106:../system/src/ve_direct_protocol/parser.c **** 	}
 313              		.loc 1 106 0
 314 00fa 0C20     		movs	r0, #12
 315 00fc 88E7     		b	.L14
 316              	.L27:
 109:../system/src/ve_direct_protocol/parser.c **** 	}
 317              		.loc 1 109 0
 318 00fe 0D20     		movs	r0, #13
 319 0100 86E7     		b	.L14
 320              	.L28:
 112:../system/src/ve_direct_protocol/parser.c **** 	}
 321              		.loc 1 112 0
 322 0102 0E20     		movs	r0, #14
 323 0104 84E7     		b	.L14
 324              	.L29:
 115:../system/src/ve_direct_protocol/parser.c **** 	}
 325              		.loc 1 115 0
 326 0106 0F20     		movs	r0, #15
 327 0108 82E7     		b	.L14
 328              	.L30:
 118:../system/src/ve_direct_protocol/parser.c **** 	}
 329              		.loc 1 118 0
 330 010a 1020     		movs	r0, #16
 331 010c 80E7     		b	.L14
 332              	.L31:
 121:../system/src/ve_direct_protocol/parser.c **** 	}
 333              		.loc 1 121 0
 334 010e 1120     		movs	r0, #17
 335 0110 7EE7     		b	.L14
 336              	.L32:
 127:../system/src/ve_direct_protocol/parser.c **** }
 337              		.loc 1 127 0
 338 0112 0020     		movs	r0, #0
 339 0114 7CE7     		b	.L14
 340              	.L36:
 341 0116 00BF     		.align	2
 342              	.L35:
 343 0118 00000000 		.word	.LC0
 344 011c 04000000 		.word	.LC1
 345 0120 08000000 		.word	.LC2
 346 0124 10000000 		.word	.LC3
 347 0128 14000000 		.word	.LC4
 348 012c 18000000 		.word	.LC5
 349 0130 1C000000 		.word	.LC6
 350 0134 20000000 		.word	.LC7
 351 0138 24000000 		.word	.LC8
 352 013c 28000000 		.word	.LC9
 353 0140 30000000 		.word	.LC10
 354 0144 34000000 		.word	.LC11
 355 0148 38000000 		.word	.LC12
 356 014c 3C000000 		.word	.LC13
 357 0150 40000000 		.word	.LC14
 358 0154 44000000 		.word	.LC15
 359 0158 48000000 		.word	.LC16
 360 015c 50000000 		.word	.LC17
 361              		.cfi_endproc
 362              	.LFE1:
 364              		.section	.text.ve_direct_parser_init,"ax",%progbits
 365              		.align	1
 366              		.global	ve_direct_parser_init
 367              		.syntax unified
 368              		.thumb
 369              		.thumb_func
 370              		.fpu softvfp
 372              	ve_direct_parser_init:
 373              	.LFB2:
 129:../system/src/ve_direct_protocol/parser.c **** 
 130:../system/src/ve_direct_protocol/parser.c **** void ve_direct_parser_init(ve_direct_raw_struct* raw_struct, ve_direct_average_struct* avg_struct) 
 374              		.loc 1 130 0
 375              		.cfi_startproc
 376              		@ args = 0, pretend = 0, frame = 0
 377              		@ frame_needed = 0, uses_anonymous_args = 0
 378              	.LVL38:
 379 0000 10B5     		push	{r4, lr}
 380              		.cfi_def_cfa_offset 8
 381              		.cfi_offset 4, -8
 382              		.cfi_offset 14, -4
 383 0002 0C46     		mov	r4, r1
 131:../system/src/ve_direct_protocol/parser.c **** 	//uint16_t size = sizeof(ve_avg);
 132:../system/src/ve_direct_protocol/parser.c **** 
 133:../system/src/ve_direct_protocol/parser.c **** 	memset(raw_struct, 0x00, sizeof(ve_direct_raw_struct));
 384              		.loc 1 133 0
 385 0004 2422     		movs	r2, #36
 386 0006 0021     		movs	r1, #0
 387              	.LVL39:
 388 0008 FFF7FEFF 		bl	memset
 389              	.LVL40:
 134:../system/src/ve_direct_protocol/parser.c **** 	memset(avg_struct, 0x00, sizeof(ve_direct_average_struct));
 390              		.loc 1 134 0
 391 000c C822     		movs	r2, #200
 392 000e 0021     		movs	r1, #0
 393 0010 2046     		mov	r0, r4
 394 0012 FFF7FEFF 		bl	memset
 395              	.LVL41:
 135:../system/src/ve_direct_protocol/parser.c **** }
 396              		.loc 1 135 0
 397 0016 10BD     		pop	{r4, pc}
 398              		.cfi_endproc
 399              	.LFE2:
 401              		.section	.text.ve_direct_cut_to_checksum,"ax",%progbits
 402              		.align	1
 403              		.global	ve_direct_cut_to_checksum
 404              		.syntax unified
 405              		.thumb
 406              		.thumb_func
 407              		.fpu softvfp
 409              	ve_direct_cut_to_checksum:
 410              	.LFB3:
 136:../system/src/ve_direct_protocol/parser.c **** 
 137:../system/src/ve_direct_protocol/parser.c **** 
 138:../system/src/ve_direct_protocol/parser.c **** void ve_direct_cut_to_checksum(uint8_t* input, uint16_t input_ln,
 139:../system/src/ve_direct_protocol/parser.c **** 		uint16_t* target_ln) {
 411              		.loc 1 139 0
 412              		.cfi_startproc
 413              		@ args = 0, pretend = 0, frame = 0
 414              		@ frame_needed = 0, uses_anonymous_args = 0
 415              		@ link register save eliminated.
 416              	.LVL42:
 417 0000 70B4     		push	{r4, r5, r6}
 418              		.cfi_def_cfa_offset 12
 419              		.cfi_offset 4, -12
 420              		.cfi_offset 5, -8
 421              		.cfi_offset 6, -4
 422              	.LVL43:
 140:../system/src/ve_direct_protocol/parser.c **** 
 141:../system/src/ve_direct_protocol/parser.c **** 	uint16_t i = 0;
 423              		.loc 1 141 0
 424 0002 0023     		movs	r3, #0
 142:../system/src/ve_direct_protocol/parser.c **** 	uint16_t checksum_start = 0;
 143:../system/src/ve_direct_protocol/parser.c **** 
 144:../system/src/ve_direct_protocol/parser.c **** 	for (; i < input_ln - 1; i++) {
 425              		.loc 1 144 0
 426 0004 01E0     		b	.L40
 427              	.LVL44:
 428              	.L41:
 429 0006 0133     		adds	r3, r3, #1
 430              	.LVL45:
 431 0008 9BB2     		uxth	r3, r3
 432              	.LVL46:
 433              	.L40:
 434              		.loc 1 144 0 is_stmt 0 discriminator 1
 435 000a 1E46     		mov	r6, r3
 436 000c 4C1E     		subs	r4, r1, #1
 437 000e A342     		cmp	r3, r4
 438 0010 07DA     		bge	.L47
 145:../system/src/ve_direct_protocol/parser.c **** 		if (*(input + i) == 'C' && *(input + i + 1) == 'h') {
 439              		.loc 1 145 0 is_stmt 1
 440 0012 C55C     		ldrb	r5, [r0, r3]	@ zero_extendqisi2
 441 0014 432D     		cmp	r5, #67
 442 0016 F6D1     		bne	.L41
 443              		.loc 1 145 0 is_stmt 0 discriminator 1
 444 0018 5D1C     		adds	r5, r3, #1
 445 001a 455D     		ldrb	r5, [r0, r5]	@ zero_extendqisi2
 446 001c 682D     		cmp	r5, #104
 447 001e F2D1     		bne	.L41
 448 0020 00E0     		b	.L42
 449              	.L47:
 142:../system/src/ve_direct_protocol/parser.c **** 	uint16_t checksum_start = 0;
 450              		.loc 1 142 0 is_stmt 1
 451 0022 0023     		movs	r3, #0
 452              	.LVL47:
 453              	.L42:
 146:../system/src/ve_direct_protocol/parser.c **** 			checksum_start = i;
 147:../system/src/ve_direct_protocol/parser.c **** 			break;
 148:../system/src/ve_direct_protocol/parser.c **** 		}
 149:../system/src/ve_direct_protocol/parser.c **** 	}
 150:../system/src/ve_direct_protocol/parser.c **** 
 151:../system/src/ve_direct_protocol/parser.c **** 	if (i >= input_ln - 1) {
 454              		.loc 1 151 0
 455 0024 A642     		cmp	r6, r4
 456 0026 03DA     		bge	.L48
 152:../system/src/ve_direct_protocol/parser.c **** 		*target_ln = 1;
 153:../system/src/ve_direct_protocol/parser.c **** 		return;
 154:../system/src/ve_direct_protocol/parser.c **** 	}
 155:../system/src/ve_direct_protocol/parser.c **** 
 156:../system/src/ve_direct_protocol/parser.c **** 	*target_ln = checksum_start + CHECKSUM_NAME_FIELD_LN_TO_DATA;
 457              		.loc 1 156 0
 458 0028 0A33     		adds	r3, r3, #10
 459              	.LVL48:
 460 002a 1380     		strh	r3, [r2]	@ movhi
 461              	.L39:
 157:../system/src/ve_direct_protocol/parser.c **** 
 158:../system/src/ve_direct_protocol/parser.c **** }
 462              		.loc 1 158 0
 463 002c 70BC     		pop	{r4, r5, r6}
 464              		.cfi_remember_state
 465              		.cfi_restore 6
 466              		.cfi_restore 5
 467              		.cfi_restore 4
 468              		.cfi_def_cfa_offset 0
 469 002e 7047     		bx	lr
 470              	.LVL49:
 471              	.L48:
 472              		.cfi_restore_state
 152:../system/src/ve_direct_protocol/parser.c **** 		*target_ln = 1;
 473              		.loc 1 152 0
 474 0030 0123     		movs	r3, #1
 475              	.LVL50:
 476 0032 1380     		strh	r3, [r2]	@ movhi
 153:../system/src/ve_direct_protocol/parser.c **** 	}
 477              		.loc 1 153 0
 478 0034 FAE7     		b	.L39
 479              		.cfi_endproc
 480              	.LFE3:
 482              		.section	.text.ve_direct_validate_checksum,"ax",%progbits
 483              		.align	1
 484              		.global	ve_direct_validate_checksum
 485              		.syntax unified
 486              		.thumb
 487              		.thumb_func
 488              		.fpu softvfp
 490              	ve_direct_validate_checksum:
 491              	.LFB4:
 159:../system/src/ve_direct_protocol/parser.c **** 
 160:../system/src/ve_direct_protocol/parser.c **** void ve_direct_validate_checksum(uint8_t* input, uint16_t input_ln, uint8_t* valid) {
 492              		.loc 1 160 0
 493              		.cfi_startproc
 494              		@ args = 0, pretend = 0, frame = 0
 495              		@ frame_needed = 0, uses_anonymous_args = 0
 496              		@ link register save eliminated.
 497              	.LVL51:
 161:../system/src/ve_direct_protocol/parser.c **** 	uint8_t sum = 0;
 162:../system/src/ve_direct_protocol/parser.c **** 
 163:../system/src/ve_direct_protocol/parser.c **** 	int i = 0;
 164:../system/src/ve_direct_protocol/parser.c **** 
 165:../system/src/ve_direct_protocol/parser.c **** 	if (input_ln < 10) {
 498              		.loc 1 165 0
 499 0000 0929     		cmp	r1, #9
 500 0002 03D9     		bls	.L61
 160:../system/src/ve_direct_protocol/parser.c **** 	uint8_t sum = 0;
 501              		.loc 1 160 0
 502 0004 F0B4     		push	{r4, r5, r6, r7}
 503              		.cfi_def_cfa_offset 16
 504              		.cfi_offset 4, -16
 505              		.cfi_offset 5, -12
 506              		.cfi_offset 6, -8
 507              		.cfi_offset 7, -4
 163:../system/src/ve_direct_protocol/parser.c **** 
 508              		.loc 1 163 0
 509 0006 0023     		movs	r3, #0
 161:../system/src/ve_direct_protocol/parser.c **** 	uint8_t sum = 0;
 510              		.loc 1 161 0
 511 0008 1C46     		mov	r4, r3
 512 000a 0DE0     		b	.L50
 513              	.L61:
 514              		.cfi_def_cfa_offset 0
 515              		.cfi_restore 4
 516              		.cfi_restore 5
 517              		.cfi_restore 6
 518              		.cfi_restore 7
 166:../system/src/ve_direct_protocol/parser.c **** 		*valid = 0;
 519              		.loc 1 166 0
 520 000c 0023     		movs	r3, #0
 521 000e 1370     		strb	r3, [r2]
 522 0010 7047     		bx	lr
 523              	.LVL52:
 524              	.L64:
 525              		.cfi_def_cfa_offset 16
 526              		.cfi_offset 4, -16
 527              		.cfi_offset 5, -12
 528              		.cfi_offset 6, -8
 529              		.cfi_offset 7, -4
 167:../system/src/ve_direct_protocol/parser.c **** 		return;
 168:../system/src/ve_direct_protocol/parser.c **** 	}
 169:../system/src/ve_direct_protocol/parser.c **** 
 170:../system/src/ve_direct_protocol/parser.c **** 	for (; i < input_ln; i++) {
 171:../system/src/ve_direct_protocol/parser.c **** 
 172:../system/src/ve_direct_protocol/parser.c **** 		// workaround of the problem with loosing \n or \r characters
 173:../system/src/ve_direct_protocol/parser.c **** 		// don't ask why and what this crap is all about. i had no time
 174:../system/src/ve_direct_protocol/parser.c **** 		// to debug the connection between the controller and pv charging regulator
 175:../system/src/ve_direct_protocol/parser.c **** 
 176:../system/src/ve_direct_protocol/parser.c **** 		sum += *(input + i);
 177:../system/src/ve_direct_protocol/parser.c **** 
 178:../system/src/ve_direct_protocol/parser.c **** 		if (i > 0) {
 179:../system/src/ve_direct_protocol/parser.c **** 
 180:../system/src/ve_direct_protocol/parser.c **** 			// if \n is the current character check if the previous one was \r
 181:../system/src/ve_direct_protocol/parser.c **** 			if (*(input + i) == '\n' && *(input + i - 1) != '\r') {
 530              		.loc 1 181 0 discriminator 1
 531 0012 5F1E     		subs	r7, r3, #1
 532 0014 C75D     		ldrb	r7, [r0, r7]	@ zero_extendqisi2
 533 0016 0D2F     		cmp	r7, #13
 534 0018 10D0     		beq	.L53
 182:../system/src/ve_direct_protocol/parser.c **** 				// if not assume that it was received and add it to the checksum
 183:../system/src/ve_direct_protocol/parser.c **** 				sum += '\r';
 535              		.loc 1 183 0
 536 001a 0D34     		adds	r4, r4, #13
 537              	.LVL53:
 538 001c E4B2     		uxtb	r4, r4
 539              	.LVL54:
 184:../system/src/ve_direct_protocol/parser.c **** 
 185:../system/src/ve_direct_protocol/parser.c **** 				// proceed to next character
 186:../system/src/ve_direct_protocol/parser.c **** 				continue;
 540              		.loc 1 186 0
 541 001e 02E0     		b	.L54
 542              	.L52:
 187:../system/src/ve_direct_protocol/parser.c **** 			}
 188:../system/src/ve_direct_protocol/parser.c **** 
 189:../system/src/ve_direct_protocol/parser.c **** 			// if \r is the current character but the next one isn't \n
 190:../system/src/ve_direct_protocol/parser.c **** 			if (*(input + i) == '\r' && *(input + i + 1) != '\n') {
 191:../system/src/ve_direct_protocol/parser.c **** 				// if not assume that it was received and add it to the checksum
 192:../system/src/ve_direct_protocol/parser.c **** 				sum += '\n';
 193:../system/src/ve_direct_protocol/parser.c **** 
 194:../system/src/ve_direct_protocol/parser.c **** 				// proceed to next character
 195:../system/src/ve_direct_protocol/parser.c **** 				continue;
 196:../system/src/ve_direct_protocol/parser.c **** 			}
 197:../system/src/ve_direct_protocol/parser.c **** 
 198:../system/src/ve_direct_protocol/parser.c **** 		}
 199:../system/src/ve_direct_protocol/parser.c **** 		else {
 200:../system/src/ve_direct_protocol/parser.c **** 
 201:../system/src/ve_direct_protocol/parser.c **** 			// the next part of the stupid workaround
 202:../system/src/ve_direct_protocol/parser.c **** 			if ((*input) == '\n') {
 543              		.loc 1 202 0
 544 0020 0578     		ldrb	r5, [r0]	@ zero_extendqisi2
 545 0022 0A2D     		cmp	r5, #10
 546 0024 13D0     		beq	.L62
 547              	.L54:
 170:../system/src/ve_direct_protocol/parser.c **** 
 548              		.loc 1 170 0
 549 0026 0133     		adds	r3, r3, #1
 550              	.LVL55:
 551              	.L50:
 170:../system/src/ve_direct_protocol/parser.c **** 
 552              		.loc 1 170 0 is_stmt 0 discriminator 1
 553 0028 9942     		cmp	r1, r3
 554 002a 13DD     		ble	.L63
 176:../system/src/ve_direct_protocol/parser.c **** 
 555              		.loc 1 176 0 is_stmt 1
 556 002c 1E46     		mov	r6, r3
 557 002e C55C     		ldrb	r5, [r0, r3]	@ zero_extendqisi2
 558 0030 2C44     		add	r4, r4, r5
 559              	.LVL56:
 560 0032 E4B2     		uxtb	r4, r4
 561              	.LVL57:
 178:../system/src/ve_direct_protocol/parser.c **** 
 562              		.loc 1 178 0
 563 0034 002B     		cmp	r3, #0
 564 0036 F3DD     		ble	.L52
 181:../system/src/ve_direct_protocol/parser.c **** 				// if not assume that it was received and add it to the checksum
 565              		.loc 1 181 0
 566 0038 0A2D     		cmp	r5, #10
 567 003a EAD0     		beq	.L64
 568              	.L53:
 190:../system/src/ve_direct_protocol/parser.c **** 				// if not assume that it was received and add it to the checksum
 569              		.loc 1 190 0
 570 003c 0D2D     		cmp	r5, #13
 571 003e F2D1     		bne	.L54
 190:../system/src/ve_direct_protocol/parser.c **** 				// if not assume that it was received and add it to the checksum
 572              		.loc 1 190 0 is_stmt 0 discriminator 1
 573 0040 0136     		adds	r6, r6, #1
 574 0042 855D     		ldrb	r5, [r0, r6]	@ zero_extendqisi2
 575 0044 0A2D     		cmp	r5, #10
 576 0046 EED0     		beq	.L54
 192:../system/src/ve_direct_protocol/parser.c **** 
 577              		.loc 1 192 0 is_stmt 1
 578 0048 0A34     		adds	r4, r4, #10
 579              	.LVL58:
 580 004a E4B2     		uxtb	r4, r4
 581              	.LVL59:
 195:../system/src/ve_direct_protocol/parser.c **** 			}
 582              		.loc 1 195 0
 583 004c EBE7     		b	.L54
 584              	.L62:
 203:../system/src/ve_direct_protocol/parser.c **** 				sum += '\r';
 585              		.loc 1 203 0
 586 004e 0D34     		adds	r4, r4, #13
 587              	.LVL60:
 588 0050 E4B2     		uxtb	r4, r4
 589              	.LVL61:
 590 0052 E8E7     		b	.L54
 591              	.L63:
 204:../system/src/ve_direct_protocol/parser.c **** 			}
 205:../system/src/ve_direct_protocol/parser.c **** 		}
 206:../system/src/ve_direct_protocol/parser.c **** 
 207:../system/src/ve_direct_protocol/parser.c **** 	}
 208:../system/src/ve_direct_protocol/parser.c **** 
 209:../system/src/ve_direct_protocol/parser.c **** 	sum %= 0xFF;
 592              		.loc 1 209 0
 593 0054 084B     		ldr	r3, .L66
 594              	.LVL62:
 595 0056 A3FB0413 		umull	r1, r3, r3, r4
 596              	.LVL63:
 597 005a DB09     		lsrs	r3, r3, #7
 598 005c 1902     		lsls	r1, r3, #8
 599 005e CB1A     		subs	r3, r1, r3
 600 0060 E41A     		subs	r4, r4, r3
 601              	.LVL64:
 210:../system/src/ve_direct_protocol/parser.c **** 
 211:../system/src/ve_direct_protocol/parser.c **** 	if (sum == 0)
 602              		.loc 1 211 0
 603 0062 14F0FF0F 		tst	r4, #255
 604 0066 03D0     		beq	.L65
 212:../system/src/ve_direct_protocol/parser.c **** 		*valid = 1;
 213:../system/src/ve_direct_protocol/parser.c **** 	else
 214:../system/src/ve_direct_protocol/parser.c **** 		*valid = 0;
 605              		.loc 1 214 0
 606 0068 0023     		movs	r3, #0
 607 006a 1370     		strb	r3, [r2]
 608              	.L49:
 215:../system/src/ve_direct_protocol/parser.c **** 
 216:../system/src/ve_direct_protocol/parser.c **** 	return;
 217:../system/src/ve_direct_protocol/parser.c **** }
 609              		.loc 1 217 0
 610 006c F0BC     		pop	{r4, r5, r6, r7}
 611              		.cfi_remember_state
 612              		.cfi_restore 7
 613              		.cfi_restore 6
 614              		.cfi_restore 5
 615              		.cfi_restore 4
 616              		.cfi_def_cfa_offset 0
 617              	.LVL65:
 618 006e 7047     		bx	lr
 619              	.LVL66:
 620              	.L65:
 621              		.cfi_restore_state
 212:../system/src/ve_direct_protocol/parser.c **** 		*valid = 1;
 622              		.loc 1 212 0
 623 0070 0123     		movs	r3, #1
 624 0072 1370     		strb	r3, [r2]
 625 0074 FAE7     		b	.L49
 626              	.L67:
 627 0076 00BF     		.align	2
 628              	.L66:
 629 0078 81808080 		.word	-2139062143
 630              		.cfi_endproc
 631              	.LFE4:
 633              		.section	.text.ve_direct_parse_to_raw_struct,"ax",%progbits
 634              		.align	1
 635              		.global	ve_direct_parse_to_raw_struct
 636              		.syntax unified
 637              		.thumb
 638              		.thumb_func
 639              		.fpu softvfp
 641              	ve_direct_parse_to_raw_struct:
 642              	.LFB5:
 218:../system/src/ve_direct_protocol/parser.c **** 
 219:../system/src/ve_direct_protocol/parser.c **** 
 220:../system/src/ve_direct_protocol/parser.c **** 
 221:../system/src/ve_direct_protocol/parser.c **** int ve_direct_parse_to_raw_struct(uint8_t* input, uint16_t input_ln, ve_direct_raw_struct* out) {
 643              		.loc 1 221 0
 644              		.cfi_startproc
 645              		@ args = 0, pretend = 0, frame = 8
 646              		@ frame_needed = 0, uses_anonymous_args = 0
 647              	.LVL67:
 648 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 649              		.cfi_def_cfa_offset 20
 650              		.cfi_offset 4, -20
 651              		.cfi_offset 5, -16
 652              		.cfi_offset 6, -12
 653              		.cfi_offset 7, -8
 654              		.cfi_offset 14, -4
 655 0002 85B0     		sub	sp, sp, #20
 656              		.cfi_def_cfa_offset 40
 222:../system/src/ve_direct_protocol/parser.c **** 
 223:../system/src/ve_direct_protocol/parser.c **** 	// local var to iterate throught
 224:../system/src/ve_direct_protocol/parser.c **** 	uint16_t i = 0;
 657              		.loc 1 224 0
 658 0004 0023     		movs	r3, #0
 659 0006 ADF80E30 		strh	r3, [sp, #14]	@ movhi
 660              	.LVL68:
 661              	.L69:
 225:../system/src/ve_direct_protocol/parser.c **** 
 226:../system/src/ve_direct_protocol/parser.c **** 	// value used to store return value from
 227:../system/src/ve_direct_protocol/parser.c **** 	int32_t ret_val = 0;
 228:../system/src/ve_direct_protocol/parser.c **** 
 229:../system/src/ve_direct_protocol/parser.c **** 	// local variable for parsing a key value to something easly processed
 230:../system/src/ve_direct_protocol/parser.c **** 	ve_direct_key_values key_enum;
 231:../system/src/ve_direct_protocol/parser.c **** 
 232:../system/src/ve_direct_protocol/parser.c **** 	// the same but for values
 233:../system/src/ve_direct_protocol/parser.c **** 	char* pointer_val = (char*) value;
 234:../system/src/ve_direct_protocol/parser.c **** 
 235:../system/src/ve_direct_protocol/parser.c **** 	// rewind to first printable chcaracter
 236:../system/src/ve_direct_protocol/parser.c **** 	while (is_non_printable_character()) {
 662              		.loc 1 236 0
 663 000a BDF80E30 		ldrh	r3, [sp, #14]
 664 000e C45C     		ldrb	r4, [r0, r3]	@ zero_extendqisi2
 665 0010 213C     		subs	r4, r4, #33
 666 0012 E4B2     		uxtb	r4, r4
 667 0014 5D2C     		cmp	r4, #93
 668 0016 09D9     		bls	.L120
 237:../system/src/ve_direct_protocol/parser.c **** 		i++;
 669              		.loc 1 237 0
 670 0018 0133     		adds	r3, r3, #1
 671 001a 9BB2     		uxth	r3, r3
 672 001c ADF80E30 		strh	r3, [sp, #14]	@ movhi
 238:../system/src/ve_direct_protocol/parser.c **** 
 239:../system/src/ve_direct_protocol/parser.c **** 		// if we reach an end of the string but no printable character has been spotted
 240:../system/src/ve_direct_protocol/parser.c **** 		if (i >= input_ln)
 673              		.loc 1 240 0
 674 0020 8B42     		cmp	r3, r1
 675 0022 F2D3     		bcc	.L69
 241:../system/src/ve_direct_protocol/parser.c **** 			return VE_DIRECT_INVALID_INP_STR;
 676              		.loc 1 241 0
 677 0024 4FF0FF30 		mov	r0, #-1
 678              	.LVL69:
 679              	.L68:
 242:../system/src/ve_direct_protocol/parser.c **** 	}
 243:../system/src/ve_direct_protocol/parser.c **** 
 244:../system/src/ve_direct_protocol/parser.c **** 	// loop from the first printable character till the end of input buffer
 245:../system/src/ve_direct_protocol/parser.c **** 	for (; i < input_ln;) {
 246:../system/src/ve_direct_protocol/parser.c **** 
 247:../system/src/ve_direct_protocol/parser.c **** 		memset(key, 0x00, 9);
 248:../system/src/ve_direct_protocol/parser.c **** 		memset(value, 0x00, 12);
 249:../system/src/ve_direct_protocol/parser.c **** 
 250:../system/src/ve_direct_protocol/parser.c **** 		// start copying a key of this entry
 251:../system/src/ve_direct_protocol/parser.c **** 		ret_val = copy_till_non_printable_char(input, &i, input_ln, key, sizeof(key));
 252:../system/src/ve_direct_protocol/parser.c **** 
 253:../system/src/ve_direct_protocol/parser.c **** 		// check if data were copied correctly
 254:../system/src/ve_direct_protocol/parser.c ****  		if (ret_val == VE_DIRECT_STRING_END_REACH_TO_EARLY)
 255:../system/src/ve_direct_protocol/parser.c **** 			return VE_DIRECT_INVALID_INP_STR;
 256:../system/src/ve_direct_protocol/parser.c **** 
 257:../system/src/ve_direct_protocol/parser.c **** 		key_enum = get_key_value_from_str(key);
 258:../system/src/ve_direct_protocol/parser.c **** 
 259:../system/src/ve_direct_protocol/parser.c **** 
 260:../system/src/ve_direct_protocol/parser.c **** 		if (key_enum == VE_CHECKSUM) {
 261:../system/src/ve_direct_protocol/parser.c **** 			// the checksum need to be treated separately, because it consist non-printable chracers
 262:../system/src/ve_direct_protocol/parser.c **** 			out->checksum  = *(input + i - 1);
 263:../system/src/ve_direct_protocol/parser.c **** 		}
 264:../system/src/ve_direct_protocol/parser.c **** 		else {
 265:../system/src/ve_direct_protocol/parser.c **** 			// start copying a value of this entry
 266:../system/src/ve_direct_protocol/parser.c **** 			ret_val = copy_till_non_printable_char(input, &i, input_ln, value, sizeof(value));
 267:../system/src/ve_direct_protocol/parser.c **** 
 268:../system/src/ve_direct_protocol/parser.c **** 			// in case than value wasn't copiedo correctly
 269:../system/src/ve_direct_protocol/parser.c **** 			if (ret_val == VE_DIRECT_STRING_END_REACH_TO_EARLY)
 270:../system/src/ve_direct_protocol/parser.c **** 				return VE_DIRECT_INVALID_INP_STR;
 271:../system/src/ve_direct_protocol/parser.c **** 		}
 272:../system/src/ve_direct_protocol/parser.c **** 
 273:../system/src/ve_direct_protocol/parser.c **** 		switch (key_enum) {
 274:../system/src/ve_direct_protocol/parser.c **** 			case VE_CHECKSUM:
 275:../system/src/ve_direct_protocol/parser.c **** 				// the checksum is a little bit different because it can consist non-printable characters
 276:../system/src/ve_direct_protocol/parser.c **** 				break;
 277:../system/src/ve_direct_protocol/parser.c **** 			case VE_CS: {
 278:../system/src/ve_direct_protocol/parser.c **** 				switch (value[0]) {
 279:../system/src/ve_direct_protocol/parser.c **** 				case '0' : out->system_state = STATE_OFF; break;
 280:../system/src/ve_direct_protocol/parser.c **** 				case '1' : out->system_state = STATE_LOW_PWR; break;
 281:../system/src/ve_direct_protocol/parser.c **** 				case '2' : out->system_state = STATE_FAULT; break;
 282:../system/src/ve_direct_protocol/parser.c **** 				case '3' : out->system_state = STATE_BULK; break;
 283:../system/src/ve_direct_protocol/parser.c **** 				case '4' : out->system_state = STATE_ABSORPTION; break;
 284:../system/src/ve_direct_protocol/parser.c **** 				case '5' : out->system_state = STATE_FLOAT; break;
 285:../system/src/ve_direct_protocol/parser.c **** 				default: out->system_state = STATE_UNINITIALIZED; break;
 286:../system/src/ve_direct_protocol/parser.c **** 				}
 287:../system/src/ve_direct_protocol/parser.c **** 				break;
 288:../system/src/ve_direct_protocol/parser.c **** 			}
 289:../system/src/ve_direct_protocol/parser.c **** 			case VE_ERR:
 290:../system/src/ve_direct_protocol/parser.c **** 				if		(strcmp(pointer_val, "0") == 0) 	out->error_reason = ERR_OK;
 291:../system/src/ve_direct_protocol/parser.c **** 				else if (strcmp(pointer_val, "2") == 0)		out->error_reason = ERR_EXCESIVE_BAT_VOLTAGE;
 292:../system/src/ve_direct_protocol/parser.c **** 				else if (strcmp(pointer_val, "17") == 0) 	out->error_reason = ERR_CHGR_TEMP_TOO_HIGH;
 293:../system/src/ve_direct_protocol/parser.c **** 				else if (strcmp(pointer_val, "18") == 0)	out->error_reason = ERR_CHGR_EXCESIVE_CURR;
 294:../system/src/ve_direct_protocol/parser.c **** 				else if (strcmp(pointer_val, "19") == 0)	out->error_reason = ERR_CHGR_CURR_REVERSED;
 295:../system/src/ve_direct_protocol/parser.c **** 				else if (strcmp(pointer_val, "20") == 0)	out->error_reason = ERR_BULK_TIME_EXCEED;
 296:../system/src/ve_direct_protocol/parser.c **** 				else if (strcmp(pointer_val, "21") == 0)	out->error_reason = ERR_CURRENT_SENSE_FAIL;
 297:../system/src/ve_direct_protocol/parser.c **** 				else if (strcmp(pointer_val, "26") == 0)	out->error_reason = ERR_EXCESIVE_TERMINAL_TEMP;
 298:../system/src/ve_direct_protocol/parser.c **** 				else if (strcmp(pointer_val, "33") == 0)	out->error_reason = ERR_EXCESIVE_PV_VOLTAGE;
 299:../system/src/ve_direct_protocol/parser.c **** 				else if (strcmp(pointer_val, "34") == 0)	out->error_reason = ERR_EXCESIVE_PV_CURRENT;
 300:../system/src/ve_direct_protocol/parser.c **** 				else if (strcmp(pointer_val, "38") == 0)	out->error_reason = ERR_INPUT_SHUTDOWN;
 301:../system/src/ve_direct_protocol/parser.c **** 				else if (strcmp(pointer_val, "116") == 0)	out->error_reason = ERR_TUNES_LOST;
 302:../system/src/ve_direct_protocol/parser.c **** 				else out->error_reason = ERR_UNINITIALIZED;
 303:../system/src/ve_direct_protocol/parser.c **** 				break;
 304:../system/src/ve_direct_protocol/parser.c **** 			case VE_FW:
 305:../system/src/ve_direct_protocol/parser.c **** 				strcpy(out->fw_version, pointer_val);
 306:../system/src/ve_direct_protocol/parser.c **** 				break;
 307:../system/src/ve_direct_protocol/parser.c **** 			case VE_H19:
 308:../system/src/ve_direct_protocol/parser.c **** 				out->energy_gathered_total = strtol(pointer_val, NULL, 10);
 309:../system/src/ve_direct_protocol/parser.c **** 				break;
 310:../system/src/ve_direct_protocol/parser.c **** 			case VE_H20:
 311:../system/src/ve_direct_protocol/parser.c **** 				out->energy_gathered_today = strtol(pointer_val, NULL, 10);
 312:../system/src/ve_direct_protocol/parser.c **** 				break;
 313:../system/src/ve_direct_protocol/parser.c **** 			case VE_H21:
 314:../system/src/ve_direct_protocol/parser.c **** 				out->maximum_power_today = strtol(pointer_val, NULL, 10);
 315:../system/src/ve_direct_protocol/parser.c **** 				break;
 316:../system/src/ve_direct_protocol/parser.c **** 			case VE_H22:
 317:../system/src/ve_direct_protocol/parser.c **** 				out->energy_gathered_yesterday = strtol(pointer_val, NULL, 10);
 318:../system/src/ve_direct_protocol/parser.c **** 				break;
 319:../system/src/ve_direct_protocol/parser.c **** 			case VE_H23:
 320:../system/src/ve_direct_protocol/parser.c **** 				out->maximum_power_yesterday = strtol(pointer_val, NULL, 10);
 321:../system/src/ve_direct_protocol/parser.c **** 				break;
 322:../system/src/ve_direct_protocol/parser.c **** 			case VE_HSDS:
 323:../system/src/ve_direct_protocol/parser.c **** 				out->day_seq_number = strtol(pointer_val, NULL, 10);
 324:../system/src/ve_direct_protocol/parser.c **** 				break;
 325:../system/src/ve_direct_protocol/parser.c **** 			case VE_I:
 326:../system/src/ve_direct_protocol/parser.c **** 				out->battery_current = strtol(pointer_val, NULL, 10);
 327:../system/src/ve_direct_protocol/parser.c **** 				break;
 328:../system/src/ve_direct_protocol/parser.c **** 			case VE_IL:
 329:../system/src/ve_direct_protocol/parser.c **** 				out->load_current = strtol(pointer_val, NULL, 10);
 330:../system/src/ve_direct_protocol/parser.c **** 				break;
 331:../system/src/ve_direct_protocol/parser.c **** 			case VE_LOAD:
 332:../system/src/ve_direct_protocol/parser.c **** 				if (strcmp(pointer_val, "ON") == 0) out->is_load_on = 1;
 333:../system/src/ve_direct_protocol/parser.c **** 				else out->is_load_on = 0;
 334:../system/src/ve_direct_protocol/parser.c **** 				break;
 335:../system/src/ve_direct_protocol/parser.c **** 			case VE_PID:
 336:../system/src/ve_direct_protocol/parser.c **** 				out->pid = strtol(pointer_val, NULL, 16);
 337:../system/src/ve_direct_protocol/parser.c **** 				break;
 338:../system/src/ve_direct_protocol/parser.c **** 			case VE_PPV:
 339:../system/src/ve_direct_protocol/parser.c **** 				out->pv_power = strtol(pointer_val, NULL, 10);
 340:../system/src/ve_direct_protocol/parser.c **** 				break;
 341:../system/src/ve_direct_protocol/parser.c **** 			case VE_SERIAL:
 342:../system/src/ve_direct_protocol/parser.c **** 				break;
 343:../system/src/ve_direct_protocol/parser.c **** 			case VE_V:
 344:../system/src/ve_direct_protocol/parser.c **** 				out->battery_voltage = strtol(pointer_val, NULL, 10);
 345:../system/src/ve_direct_protocol/parser.c **** 				break;
 346:../system/src/ve_direct_protocol/parser.c **** 			case VE_VPV:
 347:../system/src/ve_direct_protocol/parser.c **** 				out->pv_voltage = strtol(pointer_val, NULL, 10);
 348:../system/src/ve_direct_protocol/parser.c **** 				break;
 349:../system/src/ve_direct_protocol/parser.c **** 			default:
 350:../system/src/ve_direct_protocol/parser.c **** 				break;
 351:../system/src/ve_direct_protocol/parser.c **** 		}
 352:../system/src/ve_direct_protocol/parser.c **** 
 353:../system/src/ve_direct_protocol/parser.c **** 	}
 354:../system/src/ve_direct_protocol/parser.c **** 
 355:../system/src/ve_direct_protocol/parser.c **** 	return 0;
 356:../system/src/ve_direct_protocol/parser.c **** 
 357:../system/src/ve_direct_protocol/parser.c **** }
 680              		.loc 1 357 0
 681 0028 05B0     		add	sp, sp, #20
 682              		.cfi_remember_state
 683              		.cfi_def_cfa_offset 20
 684              		@ sp needed
 685 002a F0BD     		pop	{r4, r5, r6, r7, pc}
 686              	.LVL70:
 687              	.L120:
 688              		.cfi_restore_state
 689 002c 1746     		mov	r7, r2
 690 002e 0D46     		mov	r5, r1
 691 0030 0646     		mov	r6, r0
 692 0032 95E0     		b	.L75
 693              	.LVL71:
 694              	.L73:
 266:../system/src/ve_direct_protocol/parser.c **** 
 695              		.loc 1 266 0
 696 0034 0C23     		movs	r3, #12
 697 0036 0093     		str	r3, [sp]
 698 0038 A44B     		ldr	r3, .L122
 699 003a 2A46     		mov	r2, r5
 700 003c 0DF10E01 		add	r1, sp, #14
 701 0040 3046     		mov	r0, r6
 702              	.LVL72:
 703 0042 FFF7FEFF 		bl	copy_till_non_printable_char
 704              	.LVL73:
 269:../system/src/ve_direct_protocol/parser.c **** 				return VE_DIRECT_INVALID_INP_STR;
 705              		.loc 1 269 0
 706 0046 10F1020F 		cmn	r0, #2
 707 004a 40F0B280 		bne	.L74
 270:../system/src/ve_direct_protocol/parser.c **** 		}
 708              		.loc 1 270 0
 709 004e 4FF0FF30 		mov	r0, #-1
 710              	.LVL74:
 711 0052 E9E7     		b	.L68
 712              	.L83:
 278:../system/src/ve_direct_protocol/parser.c **** 				case '0' : out->system_state = STATE_OFF; break;
 713              		.loc 1 278 0
 714 0054 9D4B     		ldr	r3, .L122
 715 0056 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 716 0058 303B     		subs	r3, r3, #48
 717 005a 052B     		cmp	r3, #5
 718 005c 16D8     		bhi	.L93
 719 005e DFE803F0 		tbb	[pc, r3]
 720              	.L95:
 721 0062 03       		.byte	(.L94-.L95)/2
 722 0063 06       		.byte	(.L96-.L95)/2
 723 0064 09       		.byte	(.L97-.L95)/2
 724 0065 0C       		.byte	(.L98-.L95)/2
 725 0066 0F       		.byte	(.L99-.L95)/2
 726 0067 12       		.byte	(.L100-.L95)/2
 727              		.p2align 1
 728              	.L94:
 279:../system/src/ve_direct_protocol/parser.c **** 				case '1' : out->system_state = STATE_LOW_PWR; break;
 729              		.loc 1 279 0
 730 0068 0023     		movs	r3, #0
 731 006a 7B74     		strb	r3, [r7, #17]
 732 006c 78E0     		b	.L75
 733              	.L96:
 280:../system/src/ve_direct_protocol/parser.c **** 				case '2' : out->system_state = STATE_FAULT; break;
 734              		.loc 1 280 0
 735 006e 0123     		movs	r3, #1
 736 0070 7B74     		strb	r3, [r7, #17]
 737 0072 75E0     		b	.L75
 738              	.L97:
 281:../system/src/ve_direct_protocol/parser.c **** 				case '3' : out->system_state = STATE_BULK; break;
 739              		.loc 1 281 0
 740 0074 0223     		movs	r3, #2
 741 0076 7B74     		strb	r3, [r7, #17]
 742 0078 72E0     		b	.L75
 743              	.L98:
 282:../system/src/ve_direct_protocol/parser.c **** 				case '4' : out->system_state = STATE_ABSORPTION; break;
 744              		.loc 1 282 0
 745 007a 0323     		movs	r3, #3
 746 007c 7B74     		strb	r3, [r7, #17]
 747 007e 6FE0     		b	.L75
 748              	.L99:
 283:../system/src/ve_direct_protocol/parser.c **** 				case '5' : out->system_state = STATE_FLOAT; break;
 749              		.loc 1 283 0
 750 0080 0423     		movs	r3, #4
 751 0082 7B74     		strb	r3, [r7, #17]
 752 0084 6CE0     		b	.L75
 753              	.L100:
 284:../system/src/ve_direct_protocol/parser.c **** 				default: out->system_state = STATE_UNINITIALIZED; break;
 754              		.loc 1 284 0
 755 0086 0523     		movs	r3, #5
 756 0088 7B74     		strb	r3, [r7, #17]
 757 008a 69E0     		b	.L75
 758              	.L93:
 285:../system/src/ve_direct_protocol/parser.c **** 				}
 759              		.loc 1 285 0
 760 008c FF23     		movs	r3, #255
 761 008e 7B74     		strb	r3, [r7, #17]
 762 0090 66E0     		b	.L75
 763              	.L84:
 290:../system/src/ve_direct_protocol/parser.c **** 				else if (strcmp(pointer_val, "2") == 0)		out->error_reason = ERR_EXCESIVE_BAT_VOLTAGE;
 764              		.loc 1 290 0
 765 0092 8F49     		ldr	r1, .L122+4
 766 0094 8D48     		ldr	r0, .L122
 767 0096 FFF7FEFF 		bl	strcmp
 768              	.LVL75:
 769 009a 10B9     		cbnz	r0, .L102
 290:../system/src/ve_direct_protocol/parser.c **** 				else if (strcmp(pointer_val, "2") == 0)		out->error_reason = ERR_EXCESIVE_BAT_VOLTAGE;
 770              		.loc 1 290 0 is_stmt 0 discriminator 1
 771 009c 0023     		movs	r3, #0
 772 009e BB74     		strb	r3, [r7, #18]
 773 00a0 5EE0     		b	.L75
 774              	.L102:
 291:../system/src/ve_direct_protocol/parser.c **** 				else if (strcmp(pointer_val, "17") == 0) 	out->error_reason = ERR_CHGR_TEMP_TOO_HIGH;
 775              		.loc 1 291 0 is_stmt 1
 776 00a2 8C49     		ldr	r1, .L122+8
 777 00a4 8948     		ldr	r0, .L122
 778 00a6 FFF7FEFF 		bl	strcmp
 779              	.LVL76:
 780 00aa 10B9     		cbnz	r0, .L103
 291:../system/src/ve_direct_protocol/parser.c **** 				else if (strcmp(pointer_val, "17") == 0) 	out->error_reason = ERR_CHGR_TEMP_TOO_HIGH;
 781              		.loc 1 291 0 is_stmt 0 discriminator 1
 782 00ac 0223     		movs	r3, #2
 783 00ae BB74     		strb	r3, [r7, #18]
 784 00b0 56E0     		b	.L75
 785              	.L103:
 292:../system/src/ve_direct_protocol/parser.c **** 				else if (strcmp(pointer_val, "18") == 0)	out->error_reason = ERR_CHGR_EXCESIVE_CURR;
 786              		.loc 1 292 0 is_stmt 1
 787 00b2 8949     		ldr	r1, .L122+12
 788 00b4 8548     		ldr	r0, .L122
 789 00b6 FFF7FEFF 		bl	strcmp
 790              	.LVL77:
 791 00ba 10B9     		cbnz	r0, .L104
 292:../system/src/ve_direct_protocol/parser.c **** 				else if (strcmp(pointer_val, "18") == 0)	out->error_reason = ERR_CHGR_EXCESIVE_CURR;
 792              		.loc 1 292 0 is_stmt 0 discriminator 1
 793 00bc 1123     		movs	r3, #17
 794 00be BB74     		strb	r3, [r7, #18]
 795 00c0 4EE0     		b	.L75
 796              	.L104:
 293:../system/src/ve_direct_protocol/parser.c **** 				else if (strcmp(pointer_val, "19") == 0)	out->error_reason = ERR_CHGR_CURR_REVERSED;
 797              		.loc 1 293 0 is_stmt 1
 798 00c2 8649     		ldr	r1, .L122+16
 799 00c4 8148     		ldr	r0, .L122
 800 00c6 FFF7FEFF 		bl	strcmp
 801              	.LVL78:
 802 00ca 10B9     		cbnz	r0, .L105
 293:../system/src/ve_direct_protocol/parser.c **** 				else if (strcmp(pointer_val, "19") == 0)	out->error_reason = ERR_CHGR_CURR_REVERSED;
 803              		.loc 1 293 0 is_stmt 0 discriminator 1
 804 00cc 1223     		movs	r3, #18
 805 00ce BB74     		strb	r3, [r7, #18]
 806 00d0 46E0     		b	.L75
 807              	.L105:
 294:../system/src/ve_direct_protocol/parser.c **** 				else if (strcmp(pointer_val, "20") == 0)	out->error_reason = ERR_BULK_TIME_EXCEED;
 808              		.loc 1 294 0 is_stmt 1
 809 00d2 8349     		ldr	r1, .L122+20
 810 00d4 7D48     		ldr	r0, .L122
 811 00d6 FFF7FEFF 		bl	strcmp
 812              	.LVL79:
 813 00da 10B9     		cbnz	r0, .L106
 294:../system/src/ve_direct_protocol/parser.c **** 				else if (strcmp(pointer_val, "20") == 0)	out->error_reason = ERR_BULK_TIME_EXCEED;
 814              		.loc 1 294 0 is_stmt 0 discriminator 1
 815 00dc 1323     		movs	r3, #19
 816 00de BB74     		strb	r3, [r7, #18]
 817 00e0 3EE0     		b	.L75
 818              	.L106:
 295:../system/src/ve_direct_protocol/parser.c **** 				else if (strcmp(pointer_val, "21") == 0)	out->error_reason = ERR_CURRENT_SENSE_FAIL;
 819              		.loc 1 295 0 is_stmt 1
 820 00e2 8049     		ldr	r1, .L122+24
 821 00e4 7948     		ldr	r0, .L122
 822 00e6 FFF7FEFF 		bl	strcmp
 823              	.LVL80:
 824 00ea 10B9     		cbnz	r0, .L107
 295:../system/src/ve_direct_protocol/parser.c **** 				else if (strcmp(pointer_val, "21") == 0)	out->error_reason = ERR_CURRENT_SENSE_FAIL;
 825              		.loc 1 295 0 is_stmt 0 discriminator 1
 826 00ec 1423     		movs	r3, #20
 827 00ee BB74     		strb	r3, [r7, #18]
 828 00f0 36E0     		b	.L75
 829              	.L107:
 296:../system/src/ve_direct_protocol/parser.c **** 				else if (strcmp(pointer_val, "26") == 0)	out->error_reason = ERR_EXCESIVE_TERMINAL_TEMP;
 830              		.loc 1 296 0 is_stmt 1
 831 00f2 7D49     		ldr	r1, .L122+28
 832 00f4 7548     		ldr	r0, .L122
 833 00f6 FFF7FEFF 		bl	strcmp
 834              	.LVL81:
 835 00fa 10B9     		cbnz	r0, .L108
 296:../system/src/ve_direct_protocol/parser.c **** 				else if (strcmp(pointer_val, "26") == 0)	out->error_reason = ERR_EXCESIVE_TERMINAL_TEMP;
 836              		.loc 1 296 0 is_stmt 0 discriminator 1
 837 00fc 1523     		movs	r3, #21
 838 00fe BB74     		strb	r3, [r7, #18]
 839 0100 2EE0     		b	.L75
 840              	.L108:
 297:../system/src/ve_direct_protocol/parser.c **** 				else if (strcmp(pointer_val, "33") == 0)	out->error_reason = ERR_EXCESIVE_PV_VOLTAGE;
 841              		.loc 1 297 0 is_stmt 1
 842 0102 7A49     		ldr	r1, .L122+32
 843 0104 7148     		ldr	r0, .L122
 844 0106 FFF7FEFF 		bl	strcmp
 845              	.LVL82:
 846 010a 10B9     		cbnz	r0, .L109
 297:../system/src/ve_direct_protocol/parser.c **** 				else if (strcmp(pointer_val, "33") == 0)	out->error_reason = ERR_EXCESIVE_PV_VOLTAGE;
 847              		.loc 1 297 0 is_stmt 0 discriminator 1
 848 010c 1A23     		movs	r3, #26
 849 010e BB74     		strb	r3, [r7, #18]
 850 0110 26E0     		b	.L75
 851              	.L109:
 298:../system/src/ve_direct_protocol/parser.c **** 				else if (strcmp(pointer_val, "34") == 0)	out->error_reason = ERR_EXCESIVE_PV_CURRENT;
 852              		.loc 1 298 0 is_stmt 1
 853 0112 7749     		ldr	r1, .L122+36
 854 0114 6D48     		ldr	r0, .L122
 855 0116 FFF7FEFF 		bl	strcmp
 856              	.LVL83:
 857 011a 10B9     		cbnz	r0, .L110
 298:../system/src/ve_direct_protocol/parser.c **** 				else if (strcmp(pointer_val, "34") == 0)	out->error_reason = ERR_EXCESIVE_PV_CURRENT;
 858              		.loc 1 298 0 is_stmt 0 discriminator 1
 859 011c 2123     		movs	r3, #33
 860 011e BB74     		strb	r3, [r7, #18]
 861 0120 1EE0     		b	.L75
 862              	.L110:
 299:../system/src/ve_direct_protocol/parser.c **** 				else if (strcmp(pointer_val, "38") == 0)	out->error_reason = ERR_INPUT_SHUTDOWN;
 863              		.loc 1 299 0 is_stmt 1
 864 0122 7449     		ldr	r1, .L122+40
 865 0124 6948     		ldr	r0, .L122
 866 0126 FFF7FEFF 		bl	strcmp
 867              	.LVL84:
 868 012a 10B9     		cbnz	r0, .L111
 299:../system/src/ve_direct_protocol/parser.c **** 				else if (strcmp(pointer_val, "38") == 0)	out->error_reason = ERR_INPUT_SHUTDOWN;
 869              		.loc 1 299 0 is_stmt 0 discriminator 1
 870 012c 2223     		movs	r3, #34
 871 012e BB74     		strb	r3, [r7, #18]
 872 0130 16E0     		b	.L75
 873              	.L111:
 300:../system/src/ve_direct_protocol/parser.c **** 				else if (strcmp(pointer_val, "116") == 0)	out->error_reason = ERR_TUNES_LOST;
 874              		.loc 1 300 0 is_stmt 1
 875 0132 7149     		ldr	r1, .L122+44
 876 0134 6548     		ldr	r0, .L122
 877 0136 FFF7FEFF 		bl	strcmp
 878              	.LVL85:
 879 013a 10B9     		cbnz	r0, .L112
 300:../system/src/ve_direct_protocol/parser.c **** 				else if (strcmp(pointer_val, "116") == 0)	out->error_reason = ERR_TUNES_LOST;
 880              		.loc 1 300 0 is_stmt 0 discriminator 1
 881 013c 2623     		movs	r3, #38
 882 013e BB74     		strb	r3, [r7, #18]
 883 0140 0EE0     		b	.L75
 884              	.L112:
 301:../system/src/ve_direct_protocol/parser.c **** 				else out->error_reason = ERR_UNINITIALIZED;
 885              		.loc 1 301 0 is_stmt 1
 886 0142 6E49     		ldr	r1, .L122+48
 887 0144 6148     		ldr	r0, .L122
 888 0146 FFF7FEFF 		bl	strcmp
 889              	.LVL86:
 890 014a 10B9     		cbnz	r0, .L113
 301:../system/src/ve_direct_protocol/parser.c **** 				else out->error_reason = ERR_UNINITIALIZED;
 891              		.loc 1 301 0 is_stmt 0 discriminator 1
 892 014c 7423     		movs	r3, #116
 893 014e BB74     		strb	r3, [r7, #18]
 894 0150 06E0     		b	.L75
 895              	.L113:
 302:../system/src/ve_direct_protocol/parser.c **** 				break;
 896              		.loc 1 302 0 is_stmt 1
 897 0152 FF23     		movs	r3, #255
 898 0154 BB74     		strb	r3, [r7, #18]
 899 0156 03E0     		b	.L75
 900              	.L78:
 305:../system/src/ve_direct_protocol/parser.c **** 				break;
 901              		.loc 1 305 0
 902 0158 5C49     		ldr	r1, .L122
 903 015a B81C     		adds	r0, r7, #2
 904 015c FFF7FEFF 		bl	strcpy
 905              	.LVL87:
 906              	.L75:
 245:../system/src/ve_direct_protocol/parser.c **** 
 907              		.loc 1 245 0
 908 0160 BDF80E30 		ldrh	r3, [sp, #14]
 909 0164 AB42     		cmp	r3, r5
 910 0166 80F0AC80 		bcs	.L121
 247:../system/src/ve_direct_protocol/parser.c **** 		memset(value, 0x00, 12);
 911              		.loc 1 247 0
 912 016a 654C     		ldr	r4, .L122+52
 913 016c 0922     		movs	r2, #9
 914 016e 0021     		movs	r1, #0
 915 0170 2046     		mov	r0, r4
 916 0172 FFF7FEFF 		bl	memset
 917              	.LVL88:
 248:../system/src/ve_direct_protocol/parser.c **** 
 918              		.loc 1 248 0
 919 0176 0C22     		movs	r2, #12
 920 0178 0021     		movs	r1, #0
 921 017a 5448     		ldr	r0, .L122
 922 017c FFF7FEFF 		bl	memset
 923              	.LVL89:
 251:../system/src/ve_direct_protocol/parser.c **** 
 924              		.loc 1 251 0
 925 0180 0923     		movs	r3, #9
 926 0182 0093     		str	r3, [sp]
 927 0184 2346     		mov	r3, r4
 928 0186 2A46     		mov	r2, r5
 929 0188 0DF10E01 		add	r1, sp, #14
 930 018c 3046     		mov	r0, r6
 931 018e FFF7FEFF 		bl	copy_till_non_printable_char
 932              	.LVL90:
 254:../system/src/ve_direct_protocol/parser.c **** 			return VE_DIRECT_INVALID_INP_STR;
 933              		.loc 1 254 0
 934 0192 10F1020F 		cmn	r0, #2
 935 0196 00F09680 		beq	.L117
 257:../system/src/ve_direct_protocol/parser.c **** 
 936              		.loc 1 257 0
 937 019a 2046     		mov	r0, r4
 938              	.LVL91:
 939 019c FFF7FEFF 		bl	get_key_value_from_str
 940              	.LVL92:
 941 01a0 0446     		mov	r4, r0
 942              	.LVL93:
 260:../system/src/ve_direct_protocol/parser.c **** 			// the checksum need to be treated separately, because it consist non-printable chracers
 943              		.loc 1 260 0
 944 01a2 1228     		cmp	r0, #18
 945 01a4 7FF446AF 		bne	.L73
 262:../system/src/ve_direct_protocol/parser.c **** 		}
 946              		.loc 1 262 0
 947 01a8 BDF80E30 		ldrh	r3, [sp, #14]
 948 01ac 013B     		subs	r3, r3, #1
 949 01ae F35C     		ldrb	r3, [r6, r3]	@ zero_extendqisi2
 950 01b0 7B84     		strh	r3, [r7, #34]	@ movhi
 951              	.LVL94:
 952              	.L74:
 273:../system/src/ve_direct_protocol/parser.c **** 			case VE_CHECKSUM:
 953              		.loc 1 273 0
 954 01b2 013C     		subs	r4, r4, #1
 955 01b4 102C     		cmp	r4, #16
 956 01b6 D3D8     		bhi	.L75
 957 01b8 01A3     		adr	r3, .L77
 958 01ba 53F824F0 		ldr	pc, [r3, r4, lsl #2]
 959 01be 00BF     		.p2align 2
 960              	.L77:
 961 01c0 8B020000 		.word	.L76+1
 962 01c4 59010000 		.word	.L78+1
 963 01c8 61010000 		.word	.L75+1
 964 01cc A7020000 		.word	.L79+1
 965 01d0 59020000 		.word	.L80+1
 966 01d4 B5020000 		.word	.L81+1
 967 01d8 99020000 		.word	.L82+1
 968 01dc 55000000 		.word	.L83+1
 969 01e0 93000000 		.word	.L84+1
 970 01e4 75020000 		.word	.L85+1
 971 01e8 67020000 		.word	.L86+1
 972 01ec 05020000 		.word	.L87+1
 973 01f0 13020000 		.word	.L88+1
 974 01f4 21020000 		.word	.L89+1
 975 01f8 2F020000 		.word	.L90+1
 976 01fc 3D020000 		.word	.L91+1
 977 0200 4B020000 		.word	.L92+1
 978              		.p2align 1
 979              	.L87:
 308:../system/src/ve_direct_protocol/parser.c **** 				break;
 980              		.loc 1 308 0
 981 0204 0A22     		movs	r2, #10
 982 0206 0021     		movs	r1, #0
 983 0208 3048     		ldr	r0, .L122
 984 020a FFF7FEFF 		bl	strtol
 985              	.LVL95:
 986 020e F882     		strh	r0, [r7, #22]	@ movhi
 309:../system/src/ve_direct_protocol/parser.c **** 			case VE_H20:
 987              		.loc 1 309 0
 988 0210 A6E7     		b	.L75
 989              	.L88:
 311:../system/src/ve_direct_protocol/parser.c **** 				break;
 990              		.loc 1 311 0
 991 0212 0A22     		movs	r2, #10
 992 0214 0021     		movs	r1, #0
 993 0216 2D48     		ldr	r0, .L122
 994 0218 FFF7FEFF 		bl	strtol
 995              	.LVL96:
 996 021c 3883     		strh	r0, [r7, #24]	@ movhi
 312:../system/src/ve_direct_protocol/parser.c **** 			case VE_H21:
 997              		.loc 1 312 0
 998 021e 9FE7     		b	.L75
 999              	.L89:
 314:../system/src/ve_direct_protocol/parser.c **** 				break;
 1000              		.loc 1 314 0
 1001 0220 0A22     		movs	r2, #10
 1002 0222 0021     		movs	r1, #0
 1003 0224 2948     		ldr	r0, .L122
 1004 0226 FFF7FEFF 		bl	strtol
 1005              	.LVL97:
 1006 022a 7883     		strh	r0, [r7, #26]	@ movhi
 315:../system/src/ve_direct_protocol/parser.c **** 			case VE_H22:
 1007              		.loc 1 315 0
 1008 022c 98E7     		b	.L75
 1009              	.L90:
 317:../system/src/ve_direct_protocol/parser.c **** 				break;
 1010              		.loc 1 317 0
 1011 022e 0A22     		movs	r2, #10
 1012 0230 0021     		movs	r1, #0
 1013 0232 2648     		ldr	r0, .L122
 1014 0234 FFF7FEFF 		bl	strtol
 1015              	.LVL98:
 1016 0238 B883     		strh	r0, [r7, #28]	@ movhi
 318:../system/src/ve_direct_protocol/parser.c **** 			case VE_H23:
 1017              		.loc 1 318 0
 1018 023a 91E7     		b	.L75
 1019              	.L91:
 320:../system/src/ve_direct_protocol/parser.c **** 				break;
 1020              		.loc 1 320 0
 1021 023c 0A22     		movs	r2, #10
 1022 023e 0021     		movs	r1, #0
 1023 0240 2248     		ldr	r0, .L122
 1024 0242 FFF7FEFF 		bl	strtol
 1025              	.LVL99:
 1026 0246 F883     		strh	r0, [r7, #30]	@ movhi
 321:../system/src/ve_direct_protocol/parser.c **** 			case VE_HSDS:
 1027              		.loc 1 321 0
 1028 0248 8AE7     		b	.L75
 1029              	.L92:
 323:../system/src/ve_direct_protocol/parser.c **** 				break;
 1030              		.loc 1 323 0
 1031 024a 0A22     		movs	r2, #10
 1032 024c 0021     		movs	r1, #0
 1033 024e 1F48     		ldr	r0, .L122
 1034 0250 FFF7FEFF 		bl	strtol
 1035              	.LVL100:
 1036 0254 3884     		strh	r0, [r7, #32]	@ movhi
 324:../system/src/ve_direct_protocol/parser.c **** 			case VE_I:
 1037              		.loc 1 324 0
 1038 0256 83E7     		b	.L75
 1039              	.L80:
 326:../system/src/ve_direct_protocol/parser.c **** 				break;
 1040              		.loc 1 326 0
 1041 0258 0A22     		movs	r2, #10
 1042 025a 0021     		movs	r1, #0
 1043 025c 1B48     		ldr	r0, .L122
 1044 025e FFF7FEFF 		bl	strtol
 1045              	.LVL101:
 1046 0262 B881     		strh	r0, [r7, #12]	@ movhi
 327:../system/src/ve_direct_protocol/parser.c **** 			case VE_IL:
 1047              		.loc 1 327 0
 1048 0264 7CE7     		b	.L75
 1049              	.L86:
 329:../system/src/ve_direct_protocol/parser.c **** 				break;
 1050              		.loc 1 329 0
 1051 0266 0A22     		movs	r2, #10
 1052 0268 0021     		movs	r1, #0
 1053 026a 1848     		ldr	r0, .L122
 1054 026c FFF7FEFF 		bl	strtol
 1055              	.LVL102:
 1056 0270 B882     		strh	r0, [r7, #20]	@ movhi
 330:../system/src/ve_direct_protocol/parser.c **** 			case VE_LOAD:
 1057              		.loc 1 330 0
 1058 0272 75E7     		b	.L75
 1059              	.L85:
 332:../system/src/ve_direct_protocol/parser.c **** 				else out->is_load_on = 0;
 1060              		.loc 1 332 0
 1061 0274 2349     		ldr	r1, .L122+56
 1062 0276 1548     		ldr	r0, .L122
 1063 0278 FFF7FEFF 		bl	strcmp
 1064              	.LVL103:
 1065 027c 10B9     		cbnz	r0, .L114
 332:../system/src/ve_direct_protocol/parser.c **** 				else out->is_load_on = 0;
 1066              		.loc 1 332 0 is_stmt 0 discriminator 1
 1067 027e 0123     		movs	r3, #1
 1068 0280 FB74     		strb	r3, [r7, #19]
 1069 0282 6DE7     		b	.L75
 1070              	.L114:
 333:../system/src/ve_direct_protocol/parser.c **** 				break;
 1071              		.loc 1 333 0 is_stmt 1
 1072 0284 0023     		movs	r3, #0
 1073 0286 FB74     		strb	r3, [r7, #19]
 1074 0288 6AE7     		b	.L75
 1075              	.L76:
 336:../system/src/ve_direct_protocol/parser.c **** 				break;
 1076              		.loc 1 336 0
 1077 028a 1022     		movs	r2, #16
 1078 028c 0021     		movs	r1, #0
 1079 028e 0F48     		ldr	r0, .L122
 1080 0290 FFF7FEFF 		bl	strtol
 1081              	.LVL104:
 1082 0294 3880     		strh	r0, [r7]	@ movhi
 337:../system/src/ve_direct_protocol/parser.c **** 			case VE_PPV:
 1083              		.loc 1 337 0
 1084 0296 63E7     		b	.L75
 1085              	.L82:
 339:../system/src/ve_direct_protocol/parser.c **** 				break;
 1086              		.loc 1 339 0
 1087 0298 0A22     		movs	r2, #10
 1088 029a 0021     		movs	r1, #0
 1089 029c 0B48     		ldr	r0, .L122
 1090 029e FFF7FEFF 		bl	strtol
 1091              	.LVL105:
 1092 02a2 3874     		strb	r0, [r7, #16]
 340:../system/src/ve_direct_protocol/parser.c **** 			case VE_SERIAL:
 1093              		.loc 1 340 0
 1094 02a4 5CE7     		b	.L75
 1095              	.L79:
 344:../system/src/ve_direct_protocol/parser.c **** 				break;
 1096              		.loc 1 344 0
 1097 02a6 0A22     		movs	r2, #10
 1098 02a8 0021     		movs	r1, #0
 1099 02aa 0848     		ldr	r0, .L122
 1100 02ac FFF7FEFF 		bl	strtol
 1101              	.LVL106:
 1102 02b0 7881     		strh	r0, [r7, #10]	@ movhi
 345:../system/src/ve_direct_protocol/parser.c **** 			case VE_VPV:
 1103              		.loc 1 345 0
 1104 02b2 55E7     		b	.L75
 1105              	.L81:
 347:../system/src/ve_direct_protocol/parser.c **** 				break;
 1106              		.loc 1 347 0
 1107 02b4 0A22     		movs	r2, #10
 1108 02b6 0021     		movs	r1, #0
 1109 02b8 0448     		ldr	r0, .L122
 1110 02ba FFF7FEFF 		bl	strtol
 1111              	.LVL107:
 1112 02be F881     		strh	r0, [r7, #14]	@ movhi
 348:../system/src/ve_direct_protocol/parser.c **** 			default:
 1113              		.loc 1 348 0
 1114 02c0 4EE7     		b	.L75
 1115              	.L121:
 355:../system/src/ve_direct_protocol/parser.c **** 
 1116              		.loc 1 355 0
 1117 02c2 0020     		movs	r0, #0
 1118 02c4 B0E6     		b	.L68
 1119              	.LVL108:
 1120              	.L117:
 255:../system/src/ve_direct_protocol/parser.c **** 
 1121              		.loc 1 255 0
 1122 02c6 4FF0FF30 		mov	r0, #-1
 1123              	.LVL109:
 1124 02ca ADE6     		b	.L68
 1125              	.L123:
 1126              		.align	2
 1127              	.L122:
 1128 02cc 00000000 		.word	value
 1129 02d0 00000000 		.word	.LC18
 1130 02d4 04000000 		.word	.LC19
 1131 02d8 08000000 		.word	.LC20
 1132 02dc 0C000000 		.word	.LC21
 1133 02e0 10000000 		.word	.LC22
 1134 02e4 14000000 		.word	.LC23
 1135 02e8 18000000 		.word	.LC24
 1136 02ec 1C000000 		.word	.LC25
 1137 02f0 20000000 		.word	.LC26
 1138 02f4 24000000 		.word	.LC27
 1139 02f8 28000000 		.word	.LC28
 1140 02fc 2C000000 		.word	.LC29
 1141 0300 00000000 		.word	key
 1142 0304 30000000 		.word	.LC30
 1143              		.cfi_endproc
 1144              	.LFE5:
 1146              		.section	.text.ve_direct_add_to_average,"ax",%progbits
 1147              		.align	1
 1148              		.global	ve_direct_add_to_average
 1149              		.syntax unified
 1150              		.thumb
 1151              		.thumb_func
 1152              		.fpu softvfp
 1154              	ve_direct_add_to_average:
 1155              	.LFB6:
 358:../system/src/ve_direct_protocol/parser.c **** 
 359:../system/src/ve_direct_protocol/parser.c **** void ve_direct_add_to_average(ve_direct_raw_struct* in, ve_direct_average_struct* avg_struct) {
 1156              		.loc 1 359 0
 1157              		.cfi_startproc
 1158              		@ args = 0, pretend = 0, frame = 0
 1159              		@ frame_needed = 0, uses_anonymous_args = 0
 1160              		@ link register save eliminated.
 1161              	.LVL110:
 1162 0000 10B4     		push	{r4}
 1163              		.cfi_def_cfa_offset 4
 1164              		.cfi_offset 4, -4
 360:../system/src/ve_direct_protocol/parser.c **** 
 361:../system/src/ve_direct_protocol/parser.c **** 	if (skip_counter++ < VE_DIRECT_MESSAGES_TO_SKIP) {
 1165              		.loc 1 361 0
 1166 0002 1D4A     		ldr	r2, .L129
 1167 0004 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 1168 0006 5C1C     		adds	r4, r3, #1
 1169 0008 1470     		strb	r4, [r2]
 1170 000a 012B     		cmp	r3, #1
 1171 000c 31D9     		bls	.L124
 362:../system/src/ve_direct_protocol/parser.c **** 		return;
 363:../system/src/ve_direct_protocol/parser.c **** 	}
 364:../system/src/ve_direct_protocol/parser.c **** 	else {
 365:../system/src/ve_direct_protocol/parser.c **** 		skip_counter = 0;
 1172              		.loc 1 365 0
 1173 000e 1346     		mov	r3, r2
 1174 0010 0022     		movs	r2, #0
 1175 0012 1A70     		strb	r2, [r3]
 366:../system/src/ve_direct_protocol/parser.c **** 	}
 367:../system/src/ve_direct_protocol/parser.c **** 
 368:../system/src/ve_direct_protocol/parser.c **** 	uint16_t it = avg_struct->current_pointer;
 1176              		.loc 1 368 0
 1177 0014 B1F8C030 		ldrh	r3, [r1, #192]	@ unaligned
 1178              	.LVL111:
 369:../system/src/ve_direct_protocol/parser.c **** 
 370:../system/src/ve_direct_protocol/parser.c **** 	avg_struct->battery_current[it] = in->battery_current;
 1179              		.loc 1 370 0
 1180 0018 B0F90C20 		ldrsh	r2, [r0, #12]
 1181 001c 21F81320 		strh	r2, [r1, r3, lsl #1]	@ unaligned
 1182              	.LVL112:
 371:../system/src/ve_direct_protocol/parser.c **** 	avg_struct->battery_voltage[it] = in->battery_voltage;
 1183              		.loc 1 371 0
 1184 0020 03F11802 		add	r2, r3, #24
 1185 0024 4489     		ldrh	r4, [r0, #10]
 1186 0026 21F81240 		strh	r4, [r1, r2, lsl #1]	@ unaligned
 372:../system/src/ve_direct_protocol/parser.c **** 	avg_struct->load_current[it] = in->load_current;
 1187              		.loc 1 372 0
 1188 002a 03F14802 		add	r2, r3, #72
 1189 002e 848A     		ldrh	r4, [r0, #20]
 1190 0030 21F81240 		strh	r4, [r1, r2, lsl #1]	@ unaligned
 373:../system/src/ve_direct_protocol/parser.c **** 	avg_struct->pv_voltage[it] = in->pv_voltage;
 1191              		.loc 1 373 0
 1192 0034 03F13002 		add	r2, r3, #48
 1193 0038 C489     		ldrh	r4, [r0, #14]
 1194 003a 21F81240 		strh	r4, [r1, r2, lsl #1]	@ unaligned
 374:../system/src/ve_direct_protocol/parser.c **** 
 375:../system/src/ve_direct_protocol/parser.c **** 	it++;
 1195              		.loc 1 375 0
 1196 003e 0133     		adds	r3, r3, #1
 1197 0040 9BB2     		uxth	r3, r3
 1198              	.LVL113:
 376:../system/src/ve_direct_protocol/parser.c **** 
 377:../system/src/ve_direct_protocol/parser.c **** 	if (it > VE_DIRECT_AVERAGE_LEN - 1) {
 1199              		.loc 1 377 0
 1200 0042 172B     		cmp	r3, #23
 1201 0044 03D9     		bls	.L126
 1202              	.LVL114:
 378:../system/src/ve_direct_protocol/parser.c **** 		it = 0;
 379:../system/src/ve_direct_protocol/parser.c **** 		avg_struct->full_buffer = 1;
 1203              		.loc 1 379 0
 1204 0046 0123     		movs	r3, #1
 1205 0048 81F8C230 		strb	r3, [r1, #194]
 378:../system/src/ve_direct_protocol/parser.c **** 		it = 0;
 1206              		.loc 1 378 0
 1207 004c 0023     		movs	r3, #0
 1208              	.LVL115:
 1209              	.L126:
 380:../system/src/ve_direct_protocol/parser.c **** 	}
 381:../system/src/ve_direct_protocol/parser.c **** 	else {
 382:../system/src/ve_direct_protocol/parser.c **** 		;
 383:../system/src/ve_direct_protocol/parser.c **** 	}
 384:../system/src/ve_direct_protocol/parser.c **** 
 385:../system/src/ve_direct_protocol/parser.c **** 	avg_struct->current_pointer = it;
 1210              		.loc 1 385 0
 1211 004e A1F8C030 		strh	r3, [r1, #192]	@ unaligned
 386:../system/src/ve_direct_protocol/parser.c **** 
 387:../system/src/ve_direct_protocol/parser.c **** 	if (in->battery_current < avg_struct->min_battery_current) {
 1212              		.loc 1 387 0
 1213 0052 B0F90C30 		ldrsh	r3, [r0, #12]
 1214              	.LVL116:
 1215 0056 B1F9C420 		ldrsh	r2, [r1, #196]	@ unaligned
 1216 005a 9342     		cmp	r3, r2
 1217 005c 01DA     		bge	.L127
 388:../system/src/ve_direct_protocol/parser.c **** 		avg_struct->min_battery_current = in->battery_current;
 1218              		.loc 1 388 0
 1219 005e A1F8C430 		strh	r3, [r1, #196]	@ unaligned
 1220              	.L127:
 389:../system/src/ve_direct_protocol/parser.c **** 	}
 390:../system/src/ve_direct_protocol/parser.c **** 
 391:../system/src/ve_direct_protocol/parser.c **** 	if (in->battery_current > avg_struct->max_battery_current) {
 1221              		.loc 1 391 0
 1222 0062 B0F90C30 		ldrsh	r3, [r0, #12]
 1223 0066 B1F9C620 		ldrsh	r2, [r1, #198]	@ unaligned
 1224 006a 9342     		cmp	r3, r2
 1225 006c 01DD     		ble	.L124
 392:../system/src/ve_direct_protocol/parser.c **** 		avg_struct->max_battery_current = in->battery_current;
 1226              		.loc 1 392 0
 1227 006e A1F8C630 		strh	r3, [r1, #198]	@ unaligned
 1228              	.L124:
 393:../system/src/ve_direct_protocol/parser.c **** 	}
 394:../system/src/ve_direct_protocol/parser.c **** 
 395:../system/src/ve_direct_protocol/parser.c **** 	return;
 396:../system/src/ve_direct_protocol/parser.c **** 
 397:../system/src/ve_direct_protocol/parser.c **** }
 1229              		.loc 1 397 0
 1230 0072 10BC     		pop	{r4}
 1231              		.cfi_restore 4
 1232              		.cfi_def_cfa_offset 0
 1233 0074 7047     		bx	lr
 1234              	.L130:
 1235 0076 00BF     		.align	2
 1236              	.L129:
 1237 0078 00000000 		.word	.LANCHOR0
 1238              		.cfi_endproc
 1239              	.LFE6:
 1241              		.section	.text.ve_direct_get_averages,"ax",%progbits
 1242              		.align	1
 1243              		.global	ve_direct_get_averages
 1244              		.syntax unified
 1245              		.thumb
 1246              		.thumb_func
 1247              		.fpu softvfp
 1249              	ve_direct_get_averages:
 1250              	.LFB7:
 398:../system/src/ve_direct_protocol/parser.c **** 
 399:../system/src/ve_direct_protocol/parser.c **** void ve_direct_get_averages(ve_direct_average_struct* avg_struct, int16_t* battery_current, uint16_
 400:../system/src/ve_direct_protocol/parser.c **** 		uint16_t* pv_voltage, uint16_t* load_current) {
 1251              		.loc 1 400 0
 1252              		.cfi_startproc
 1253              		@ args = 4, pretend = 0, frame = 0
 1254              		@ frame_needed = 0, uses_anonymous_args = 0
 1255              	.LVL117:
 1256 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1257              		.cfi_def_cfa_offset 20
 1258              		.cfi_offset 4, -20
 1259              		.cfi_offset 5, -16
 1260              		.cfi_offset 6, -12
 1261              		.cfi_offset 7, -8
 1262              		.cfi_offset 14, -4
 401:../system/src/ve_direct_protocol/parser.c **** 
 402:../system/src/ve_direct_protocol/parser.c **** 	if (avg_struct->full_buffer != 1)
 1263              		.loc 1 402 0
 1264 0002 90F8C240 		ldrb	r4, [r0, #194]	@ zero_extendqisi2
 1265 0006 012C     		cmp	r4, #1
 1266 0008 00D0     		beq	.L136
 1267              	.LVL118:
 1268              	.L131:
 403:../system/src/ve_direct_protocol/parser.c **** 		return;
 404:../system/src/ve_direct_protocol/parser.c **** 
 405:../system/src/ve_direct_protocol/parser.c **** 	int32_t battery_current_avg = 0;
 406:../system/src/ve_direct_protocol/parser.c **** 	uint32_t battery_voltage_avg = 0;
 407:../system/src/ve_direct_protocol/parser.c **** 	uint32_t pv_voltage_avg = 0;
 408:../system/src/ve_direct_protocol/parser.c **** 	uint32_t load_current_avg = 0;
 409:../system/src/ve_direct_protocol/parser.c **** 
 410:../system/src/ve_direct_protocol/parser.c **** 	for (int i = 0; i < VE_DIRECT_AVERAGE_LEN; i++) {
 411:../system/src/ve_direct_protocol/parser.c **** 		battery_current_avg += avg_struct->battery_current[i];
 412:../system/src/ve_direct_protocol/parser.c **** 		battery_voltage_avg += avg_struct->battery_voltage[i];
 413:../system/src/ve_direct_protocol/parser.c **** 		pv_voltage_avg += avg_struct->pv_voltage[i];
 414:../system/src/ve_direct_protocol/parser.c **** 		load_current_avg += avg_struct->load_current[i];
 415:../system/src/ve_direct_protocol/parser.c **** 	}
 416:../system/src/ve_direct_protocol/parser.c **** 
 417:../system/src/ve_direct_protocol/parser.c **** 	*battery_current = battery_current_avg / VE_DIRECT_AVERAGE_LEN;
 418:../system/src/ve_direct_protocol/parser.c **** 	*battery_voltage = battery_voltage_avg / VE_DIRECT_AVERAGE_LEN;
 419:../system/src/ve_direct_protocol/parser.c **** 	*pv_voltage = pv_voltage_avg / VE_DIRECT_AVERAGE_LEN;
 420:../system/src/ve_direct_protocol/parser.c **** 	*load_current = load_current_avg / VE_DIRECT_AVERAGE_LEN;
 421:../system/src/ve_direct_protocol/parser.c **** }
 1269              		.loc 1 421 0
 1270 000a F0BD     		pop	{r4, r5, r6, r7, pc}
 1271              	.LVL119:
 1272              	.L136:
 1273              	.LBB2:
 410:../system/src/ve_direct_protocol/parser.c **** 		battery_current_avg += avg_struct->battery_current[i];
 1274              		.loc 1 410 0
 1275 000c 0024     		movs	r4, #0
 1276              	.LBE2:
 408:../system/src/ve_direct_protocol/parser.c **** 
 1277              		.loc 1 408 0
 1278 000e 2646     		mov	r6, r4
 407:../system/src/ve_direct_protocol/parser.c **** 	uint32_t load_current_avg = 0;
 1279              		.loc 1 407 0
 1280 0010 2746     		mov	r7, r4
 406:../system/src/ve_direct_protocol/parser.c **** 	uint32_t pv_voltage_avg = 0;
 1281              		.loc 1 406 0
 1282 0012 A446     		mov	ip, r4
 405:../system/src/ve_direct_protocol/parser.c **** 	uint32_t battery_voltage_avg = 0;
 1283              		.loc 1 405 0
 1284 0014 2546     		mov	r5, r4
 1285 0016 12E0     		b	.L133
 1286              	.LVL120:
 1287              	.L134:
 1288              	.LBB3:
 411:../system/src/ve_direct_protocol/parser.c **** 		battery_voltage_avg += avg_struct->battery_voltage[i];
 1289              		.loc 1 411 0 discriminator 3
 1290 0018 30F914E0 		ldrsh	lr, [r0, r4, lsl #1]	@ unaligned
 1291 001c 7544     		add	r5, r5, lr
 1292              	.LVL121:
 412:../system/src/ve_direct_protocol/parser.c **** 		pv_voltage_avg += avg_struct->pv_voltage[i];
 1293              		.loc 1 412 0 discriminator 3
 1294 001e 04F1180E 		add	lr, r4, #24
 1295 0022 30F81EE0 		ldrh	lr, [r0, lr, lsl #1]	@ unaligned
 1296 0026 F444     		add	ip, ip, lr
 1297              	.LVL122:
 413:../system/src/ve_direct_protocol/parser.c **** 		load_current_avg += avg_struct->load_current[i];
 1298              		.loc 1 413 0 discriminator 3
 1299 0028 04F1300E 		add	lr, r4, #48
 1300 002c 30F81EE0 		ldrh	lr, [r0, lr, lsl #1]	@ unaligned
 1301 0030 7744     		add	r7, r7, lr
 1302              	.LVL123:
 414:../system/src/ve_direct_protocol/parser.c **** 	}
 1303              		.loc 1 414 0 discriminator 3
 1304 0032 04F1480E 		add	lr, r4, #72
 1305 0036 30F81EE0 		ldrh	lr, [r0, lr, lsl #1]	@ unaligned
 1306 003a 7644     		add	r6, r6, lr
 1307              	.LVL124:
 410:../system/src/ve_direct_protocol/parser.c **** 		battery_current_avg += avg_struct->battery_current[i];
 1308              		.loc 1 410 0 discriminator 3
 1309 003c 0134     		adds	r4, r4, #1
 1310              	.LVL125:
 1311              	.L133:
 410:../system/src/ve_direct_protocol/parser.c **** 		battery_current_avg += avg_struct->battery_current[i];
 1312              		.loc 1 410 0 is_stmt 0 discriminator 1
 1313 003e 172C     		cmp	r4, #23
 1314 0040 EADD     		ble	.L134
 1315              	.LBE3:
 417:../system/src/ve_direct_protocol/parser.c **** 	*battery_voltage = battery_voltage_avg / VE_DIRECT_AVERAGE_LEN;
 1316              		.loc 1 417 0 is_stmt 1
 1317 0042 0C48     		ldr	r0, .L137
 1318              	.LVL126:
 1319 0044 80FB0540 		smull	r4, r0, r0, r5
 1320              	.LVL127:
 1321 0048 ED17     		asrs	r5, r5, #31
 1322              	.LVL128:
 1323 004a C5EBA005 		rsb	r5, r5, r0, asr #2
 1324 004e 0D80     		strh	r5, [r1]	@ movhi
 418:../system/src/ve_direct_protocol/parser.c **** 	*pv_voltage = pv_voltage_avg / VE_DIRECT_AVERAGE_LEN;
 1325              		.loc 1 418 0
 1326 0050 0949     		ldr	r1, .L137+4
 1327              	.LVL129:
 1328 0052 A1FB0C0C 		umull	r0, ip, r1, ip
 1329              	.LVL130:
 1330 0056 4FEA1C1C 		lsr	ip, ip, #4
 1331 005a A2F800C0 		strh	ip, [r2]	@ movhi
 419:../system/src/ve_direct_protocol/parser.c **** 	*load_current = load_current_avg / VE_DIRECT_AVERAGE_LEN;
 1332              		.loc 1 419 0
 1333 005e A1FB0727 		umull	r2, r7, r1, r7
 1334              	.LVL131:
 1335 0062 3F09     		lsrs	r7, r7, #4
 1336 0064 1F80     		strh	r7, [r3]	@ movhi
 420:../system/src/ve_direct_protocol/parser.c **** }
 1337              		.loc 1 420 0
 1338 0066 A1FB0636 		umull	r3, r6, r1, r6
 1339              	.LVL132:
 1340 006a 3609     		lsrs	r6, r6, #4
 1341 006c 059B     		ldr	r3, [sp, #20]
 1342 006e 1E80     		strh	r6, [r3]	@ movhi
 1343 0070 CBE7     		b	.L131
 1344              	.L138:
 1345 0072 00BF     		.align	2
 1346              	.L137:
 1347 0074 ABAAAA2A 		.word	715827883
 1348 0078 ABAAAAAA 		.word	-1431655765
 1349              		.cfi_endproc
 1350              	.LFE7:
 1352              		.section	.text.ve_direct_set_sys_voltage,"ax",%progbits
 1353              		.align	1
 1354              		.global	ve_direct_set_sys_voltage
 1355              		.syntax unified
 1356              		.thumb
 1357              		.thumb_func
 1358              		.fpu softvfp
 1360              	ve_direct_set_sys_voltage:
 1361              	.LFB8:
 422:../system/src/ve_direct_protocol/parser.c **** 
 423:../system/src/ve_direct_protocol/parser.c **** void ve_direct_set_sys_voltage(ve_direct_raw_struct* in, uint8_t* sys_voltage) {
 1362              		.loc 1 423 0
 1363              		.cfi_startproc
 1364              		@ args = 0, pretend = 0, frame = 0
 1365              		@ frame_needed = 0, uses_anonymous_args = 0
 1366              		@ link register save eliminated.
 1367              	.LVL133:
 424:../system/src/ve_direct_protocol/parser.c **** 
 425:../system/src/ve_direct_protocol/parser.c **** }
 1368              		.loc 1 425 0
 1369 0000 7047     		bx	lr
 1370              		.cfi_endproc
 1371              	.LFE8:
 1373              		.section	.text.ve_direct_store_errors,"ax",%progbits
 1374              		.align	1
 1375              		.global	ve_direct_store_errors
 1376              		.syntax unified
 1377              		.thumb
 1378              		.thumb_func
 1379              		.fpu softvfp
 1381              	ve_direct_store_errors:
 1382              	.LFB9:
 426:../system/src/ve_direct_protocol/parser.c **** 
 427:../system/src/ve_direct_protocol/parser.c **** void ve_direct_store_errors(ve_direct_raw_struct* input, ve_direct_error_reason* err_reason) {
 1383              		.loc 1 427 0
 1384              		.cfi_startproc
 1385              		@ args = 0, pretend = 0, frame = 0
 1386              		@ frame_needed = 0, uses_anonymous_args = 0
 1387              		@ link register save eliminated.
 1388              	.LVL134:
 428:../system/src/ve_direct_protocol/parser.c **** 	if (input->error_reason != ERR_OK) {
 1389              		.loc 1 428 0
 1390 0000 90F91230 		ldrsb	r3, [r0, #18]
 1391 0004 33B9     		cbnz	r3, .L143
 429:../system/src/ve_direct_protocol/parser.c **** 		*err_reason = input->error_reason;
 430:../system/src/ve_direct_protocol/parser.c **** 	}
 431:../system/src/ve_direct_protocol/parser.c **** 	else {
 432:../system/src/ve_direct_protocol/parser.c **** 		if (*err_reason == ERR_UNINITIALIZED || *err_reason == ERR_OK) {
 1392              		.loc 1 432 0
 1393 0006 91F90030 		ldrsb	r3, [r1]
 1394 000a 0133     		adds	r3, r3, #1
 1395 000c DBB2     		uxtb	r3, r3
 1396 000e 012B     		cmp	r3, #1
 1397 0010 02D9     		bls	.L144
 1398              	.L140:
 433:../system/src/ve_direct_protocol/parser.c **** 			*err_reason = ERR_OK;
 434:../system/src/ve_direct_protocol/parser.c **** 		}
 435:../system/src/ve_direct_protocol/parser.c **** 	}
 436:../system/src/ve_direct_protocol/parser.c **** 
 437:../system/src/ve_direct_protocol/parser.c **** }
 1399              		.loc 1 437 0
 1400 0012 7047     		bx	lr
 1401              	.L143:
 429:../system/src/ve_direct_protocol/parser.c **** 		*err_reason = input->error_reason;
 1402              		.loc 1 429 0
 1403 0014 0B70     		strb	r3, [r1]
 1404 0016 7047     		bx	lr
 1405              	.L144:
 433:../system/src/ve_direct_protocol/parser.c **** 			*err_reason = ERR_OK;
 1406              		.loc 1 433 0
 1407 0018 0023     		movs	r3, #0
 1408 001a 0B70     		strb	r3, [r1]
 1409              		.loc 1 437 0
 1410 001c F9E7     		b	.L140
 1411              		.cfi_endproc
 1412              	.LFE9:
 1414              		.section	.text.ve_direct_error_to_string,"ax",%progbits
 1415              		.align	1
 1416              		.global	ve_direct_error_to_string
 1417              		.syntax unified
 1418              		.thumb
 1419              		.thumb_func
 1420              		.fpu softvfp
 1422              	ve_direct_error_to_string:
 1423              	.LFB10:
 438:../system/src/ve_direct_protocol/parser.c **** 
 439:../system/src/ve_direct_protocol/parser.c **** void ve_direct_error_to_string(ve_direct_error_reason input, char* output, int8_t output_ln) {
 1424              		.loc 1 439 0
 1425              		.cfi_startproc
 1426              		@ args = 0, pretend = 0, frame = 0
 1427              		@ frame_needed = 0, uses_anonymous_args = 0
 1428              	.LVL135:
 1429 0000 70B5     		push	{r4, r5, r6, lr}
 1430              		.cfi_def_cfa_offset 16
 1431              		.cfi_offset 4, -16
 1432              		.cfi_offset 5, -12
 1433              		.cfi_offset 6, -8
 1434              		.cfi_offset 14, -4
 1435 0002 0446     		mov	r4, r0
 1436 0004 0D46     		mov	r5, r1
 1437 0006 1646     		mov	r6, r2
 440:../system/src/ve_direct_protocol/parser.c **** 	memset(output, 0x00, output_ln);
 1438              		.loc 1 440 0
 1439 0008 0021     		movs	r1, #0
 1440              	.LVL136:
 1441 000a 2846     		mov	r0, r5
 1442              	.LVL137:
 1443 000c FFF7FEFF 		bl	memset
 1444              	.LVL138:
 441:../system/src/ve_direct_protocol/parser.c **** 
 442:../system/src/ve_direct_protocol/parser.c **** 	switch(input) {
 1445              		.loc 1 442 0
 1446 0010 601C     		adds	r0, r4, #1
 1447 0012 7528     		cmp	r0, #117
 1448 0014 41D8     		bhi	.L145
 1449 0016 DFE800F0 		tbb	[pc, r0]
 1450              	.L148:
 1451 001a 3B       		.byte	(.L147-.L148)/2
 1452 001b 41       		.byte	(.L149-.L148)/2
 1453 001c 40       		.byte	(.L145-.L148)/2
 1454 001d 47       		.byte	(.L150-.L148)/2
 1455 001e 40       		.byte	(.L145-.L148)/2
 1456 001f 40       		.byte	(.L145-.L148)/2
 1457 0020 40       		.byte	(.L145-.L148)/2
 1458 0021 40       		.byte	(.L145-.L148)/2
 1459 0022 40       		.byte	(.L145-.L148)/2
 1460 0023 40       		.byte	(.L145-.L148)/2
 1461 0024 40       		.byte	(.L145-.L148)/2
 1462 0025 40       		.byte	(.L145-.L148)/2
 1463 0026 40       		.byte	(.L145-.L148)/2
 1464 0027 40       		.byte	(.L145-.L148)/2
 1465 0028 40       		.byte	(.L145-.L148)/2
 1466 0029 40       		.byte	(.L145-.L148)/2
 1467 002a 40       		.byte	(.L145-.L148)/2
 1468 002b 40       		.byte	(.L145-.L148)/2
 1469 002c 4D       		.byte	(.L151-.L148)/2
 1470 002d 53       		.byte	(.L152-.L148)/2
 1471 002e 59       		.byte	(.L153-.L148)/2
 1472 002f 5F       		.byte	(.L154-.L148)/2
 1473 0030 65       		.byte	(.L155-.L148)/2
 1474 0031 40       		.byte	(.L145-.L148)/2
 1475 0032 40       		.byte	(.L145-.L148)/2
 1476 0033 40       		.byte	(.L145-.L148)/2
 1477 0034 40       		.byte	(.L145-.L148)/2
 1478 0035 6B       		.byte	(.L156-.L148)/2
 1479 0036 40       		.byte	(.L145-.L148)/2
 1480 0037 40       		.byte	(.L145-.L148)/2
 1481 0038 40       		.byte	(.L145-.L148)/2
 1482 0039 40       		.byte	(.L145-.L148)/2
 1483 003a 40       		.byte	(.L145-.L148)/2
 1484 003b 40       		.byte	(.L145-.L148)/2
 1485 003c 71       		.byte	(.L157-.L148)/2
 1486 003d 77       		.byte	(.L158-.L148)/2
 1487 003e 40       		.byte	(.L145-.L148)/2
 1488 003f 40       		.byte	(.L145-.L148)/2
 1489 0040 40       		.byte	(.L145-.L148)/2
 1490 0041 7D       		.byte	(.L159-.L148)/2
 1491 0042 40       		.byte	(.L145-.L148)/2
 1492 0043 40       		.byte	(.L145-.L148)/2
 1493 0044 40       		.byte	(.L145-.L148)/2
 1494 0045 40       		.byte	(.L145-.L148)/2
 1495 0046 40       		.byte	(.L145-.L148)/2
 1496 0047 40       		.byte	(.L145-.L148)/2
 1497 0048 40       		.byte	(.L145-.L148)/2
 1498 0049 40       		.byte	(.L145-.L148)/2
 1499 004a 40       		.byte	(.L145-.L148)/2
 1500 004b 40       		.byte	(.L145-.L148)/2
 1501 004c 40       		.byte	(.L145-.L148)/2
 1502 004d 40       		.byte	(.L145-.L148)/2
 1503 004e 40       		.byte	(.L145-.L148)/2
 1504 004f 40       		.byte	(.L145-.L148)/2
 1505 0050 40       		.byte	(.L145-.L148)/2
 1506 0051 40       		.byte	(.L145-.L148)/2
 1507 0052 40       		.byte	(.L145-.L148)/2
 1508 0053 40       		.byte	(.L145-.L148)/2
 1509 0054 40       		.byte	(.L145-.L148)/2
 1510 0055 40       		.byte	(.L145-.L148)/2
 1511 0056 40       		.byte	(.L145-.L148)/2
 1512 0057 40       		.byte	(.L145-.L148)/2
 1513 0058 40       		.byte	(.L145-.L148)/2
 1514 0059 40       		.byte	(.L145-.L148)/2
 1515 005a 40       		.byte	(.L145-.L148)/2
 1516 005b 40       		.byte	(.L145-.L148)/2
 1517 005c 40       		.byte	(.L145-.L148)/2
 1518 005d 40       		.byte	(.L145-.L148)/2
 1519 005e 40       		.byte	(.L145-.L148)/2
 1520 005f 40       		.byte	(.L145-.L148)/2
 1521 0060 40       		.byte	(.L145-.L148)/2
 1522 0061 40       		.byte	(.L145-.L148)/2
 1523 0062 40       		.byte	(.L145-.L148)/2
 1524 0063 40       		.byte	(.L145-.L148)/2
 1525 0064 40       		.byte	(.L145-.L148)/2
 1526 0065 40       		.byte	(.L145-.L148)/2
 1527 0066 40       		.byte	(.L145-.L148)/2
 1528 0067 40       		.byte	(.L145-.L148)/2
 1529 0068 40       		.byte	(.L145-.L148)/2
 1530 0069 40       		.byte	(.L145-.L148)/2
 1531 006a 40       		.byte	(.L145-.L148)/2
 1532 006b 40       		.byte	(.L145-.L148)/2
 1533 006c 40       		.byte	(.L145-.L148)/2
 1534 006d 40       		.byte	(.L145-.L148)/2
 1535 006e 40       		.byte	(.L145-.L148)/2
 1536 006f 40       		.byte	(.L145-.L148)/2
 1537 0070 40       		.byte	(.L145-.L148)/2
 1538 0071 40       		.byte	(.L145-.L148)/2
 1539 0072 40       		.byte	(.L145-.L148)/2
 1540 0073 40       		.byte	(.L145-.L148)/2
 1541 0074 40       		.byte	(.L145-.L148)/2
 1542 0075 40       		.byte	(.L145-.L148)/2
 1543 0076 40       		.byte	(.L145-.L148)/2
 1544 0077 40       		.byte	(.L145-.L148)/2
 1545 0078 40       		.byte	(.L145-.L148)/2
 1546 0079 40       		.byte	(.L145-.L148)/2
 1547 007a 40       		.byte	(.L145-.L148)/2
 1548 007b 40       		.byte	(.L145-.L148)/2
 1549 007c 40       		.byte	(.L145-.L148)/2
 1550 007d 40       		.byte	(.L145-.L148)/2
 1551 007e 40       		.byte	(.L145-.L148)/2
 1552 007f 40       		.byte	(.L145-.L148)/2
 1553 0080 40       		.byte	(.L145-.L148)/2
 1554 0081 40       		.byte	(.L145-.L148)/2
 1555 0082 40       		.byte	(.L145-.L148)/2
 1556 0083 40       		.byte	(.L145-.L148)/2
 1557 0084 40       		.byte	(.L145-.L148)/2
 1558 0085 40       		.byte	(.L145-.L148)/2
 1559 0086 40       		.byte	(.L145-.L148)/2
 1560 0087 40       		.byte	(.L145-.L148)/2
 1561 0088 40       		.byte	(.L145-.L148)/2
 1562 0089 40       		.byte	(.L145-.L148)/2
 1563 008a 40       		.byte	(.L145-.L148)/2
 1564 008b 40       		.byte	(.L145-.L148)/2
 1565 008c 40       		.byte	(.L145-.L148)/2
 1566 008d 40       		.byte	(.L145-.L148)/2
 1567 008e 40       		.byte	(.L145-.L148)/2
 1568 008f 83       		.byte	(.L160-.L148)/2
 1569              		.p2align 1
 1570              	.L147:
 1571              	.LBB4:
 443:../system/src/ve_direct_protocol/parser.c **** 		case ERR_UNINITIALIZED: snprintf(output, output_ln, "ERR_UNINITIALIZED"); break;
 1572              		.loc 1 443 0
 1573 0090 264A     		ldr	r2, .L162
 1574 0092 3146     		mov	r1, r6
 1575 0094 2846     		mov	r0, r5
 1576 0096 FFF7FEFF 		bl	snprintf
 1577              	.LVL139:
 1578              	.L145:
 1579              	.LBE4:
 444:../system/src/ve_direct_protocol/parser.c **** 		case ERR_OK: snprintf(output, output_ln, "ERR_OK"); break;
 445:../system/src/ve_direct_protocol/parser.c **** 		case ERR_EXCESIVE_BAT_VOLTAGE: snprintf(output, output_ln, "ERR_EXCESIVE_BAT_VOLTAGE"); break;
 446:../system/src/ve_direct_protocol/parser.c **** 		case ERR_CHGR_TEMP_TOO_HIGH: snprintf(output, output_ln, "ERR_CHGR_TEMP_TOO_HIGH"); break;
 447:../system/src/ve_direct_protocol/parser.c **** 		case ERR_CHGR_EXCESIVE_CURR: snprintf(output, output_ln, "ERR_CHGR_EXCESIVE_CURR"); break;
 448:../system/src/ve_direct_protocol/parser.c **** 		case ERR_CHGR_CURR_REVERSED: snprintf(output, output_ln, "ERR_CHGR_CURR_REVERSED"); break;
 449:../system/src/ve_direct_protocol/parser.c **** 		case ERR_BULK_TIME_EXCEED: snprintf(output, output_ln, "ERR_BULK_TIME_EXCEED"); break;
 450:../system/src/ve_direct_protocol/parser.c **** 		case ERR_CURRENT_SENSE_FAIL: snprintf(output, output_ln, "ERR_CURRENT_SENSE_FAIL"); break;
 451:../system/src/ve_direct_protocol/parser.c **** 		case ERR_EXCESIVE_TERMINAL_TEMP:  snprintf(output, output_ln, "ERR_EXCESIVE_TERMINAL_TEMP"); brea
 452:../system/src/ve_direct_protocol/parser.c **** 		case ERR_EXCESIVE_PV_VOLTAGE: snprintf(output, output_ln, "ERR_EXCESIVE_PV_VOLTAGE"); break;
 453:../system/src/ve_direct_protocol/parser.c **** 		case ERR_EXCESIVE_PV_CURRENT: snprintf(output, output_ln, "ERR_EXCESIVE_PV_CURRENT"); break;
 454:../system/src/ve_direct_protocol/parser.c **** 		case ERR_INPUT_SHUTDOWN: snprintf(output, output_ln, "ERR_INPUT_SHUTDOWN"); break;
 455:../system/src/ve_direct_protocol/parser.c **** 		case ERR_TUNES_LOST: snprintf(output, output_ln, "ERR_TUNES_LOST"); break;
 456:../system/src/ve_direct_protocol/parser.c **** 	}
 457:../system/src/ve_direct_protocol/parser.c **** }
 1580              		.loc 1 457 0
 1581 009a 70BD     		pop	{r4, r5, r6, pc}
 1582              	.LVL140:
 1583              	.L149:
 1584              	.LBB5:
 444:../system/src/ve_direct_protocol/parser.c **** 		case ERR_OK: snprintf(output, output_ln, "ERR_OK"); break;
 1585              		.loc 1 444 0
 1586 009c 244A     		ldr	r2, .L162+4
 1587 009e 3146     		mov	r1, r6
 1588 00a0 2846     		mov	r0, r5
 1589 00a2 FFF7FEFF 		bl	snprintf
 1590              	.LVL141:
 1591 00a6 F8E7     		b	.L145
 1592              	.L150:
 445:../system/src/ve_direct_protocol/parser.c **** 		case ERR_CHGR_TEMP_TOO_HIGH: snprintf(output, output_ln, "ERR_CHGR_TEMP_TOO_HIGH"); break;
 1593              		.loc 1 445 0
 1594 00a8 224A     		ldr	r2, .L162+8
 1595 00aa 3146     		mov	r1, r6
 1596 00ac 2846     		mov	r0, r5
 1597 00ae FFF7FEFF 		bl	snprintf
 1598              	.LVL142:
 1599 00b2 F2E7     		b	.L145
 1600              	.L151:
 446:../system/src/ve_direct_protocol/parser.c **** 		case ERR_CHGR_EXCESIVE_CURR: snprintf(output, output_ln, "ERR_CHGR_EXCESIVE_CURR"); break;
 1601              		.loc 1 446 0
 1602 00b4 204A     		ldr	r2, .L162+12
 1603 00b6 3146     		mov	r1, r6
 1604 00b8 2846     		mov	r0, r5
 1605 00ba FFF7FEFF 		bl	snprintf
 1606              	.LVL143:
 1607 00be ECE7     		b	.L145
 1608              	.L152:
 447:../system/src/ve_direct_protocol/parser.c **** 		case ERR_CHGR_CURR_REVERSED: snprintf(output, output_ln, "ERR_CHGR_CURR_REVERSED"); break;
 1609              		.loc 1 447 0
 1610 00c0 1E4A     		ldr	r2, .L162+16
 1611 00c2 3146     		mov	r1, r6
 1612 00c4 2846     		mov	r0, r5
 1613 00c6 FFF7FEFF 		bl	snprintf
 1614              	.LVL144:
 1615 00ca E6E7     		b	.L145
 1616              	.L153:
 448:../system/src/ve_direct_protocol/parser.c **** 		case ERR_BULK_TIME_EXCEED: snprintf(output, output_ln, "ERR_BULK_TIME_EXCEED"); break;
 1617              		.loc 1 448 0
 1618 00cc 1C4A     		ldr	r2, .L162+20
 1619 00ce 3146     		mov	r1, r6
 1620 00d0 2846     		mov	r0, r5
 1621 00d2 FFF7FEFF 		bl	snprintf
 1622              	.LVL145:
 1623 00d6 E0E7     		b	.L145
 1624              	.L154:
 449:../system/src/ve_direct_protocol/parser.c **** 		case ERR_CURRENT_SENSE_FAIL: snprintf(output, output_ln, "ERR_CURRENT_SENSE_FAIL"); break;
 1625              		.loc 1 449 0
 1626 00d8 1A4A     		ldr	r2, .L162+24
 1627 00da 3146     		mov	r1, r6
 1628 00dc 2846     		mov	r0, r5
 1629 00de FFF7FEFF 		bl	snprintf
 1630              	.LVL146:
 1631 00e2 DAE7     		b	.L145
 1632              	.L155:
 450:../system/src/ve_direct_protocol/parser.c **** 		case ERR_EXCESIVE_TERMINAL_TEMP:  snprintf(output, output_ln, "ERR_EXCESIVE_TERMINAL_TEMP"); brea
 1633              		.loc 1 450 0
 1634 00e4 184A     		ldr	r2, .L162+28
 1635 00e6 3146     		mov	r1, r6
 1636 00e8 2846     		mov	r0, r5
 1637 00ea FFF7FEFF 		bl	snprintf
 1638              	.LVL147:
 1639 00ee D4E7     		b	.L145
 1640              	.L156:
 451:../system/src/ve_direct_protocol/parser.c **** 		case ERR_EXCESIVE_PV_VOLTAGE: snprintf(output, output_ln, "ERR_EXCESIVE_PV_VOLTAGE"); break;
 1641              		.loc 1 451 0
 1642 00f0 164A     		ldr	r2, .L162+32
 1643 00f2 3146     		mov	r1, r6
 1644 00f4 2846     		mov	r0, r5
 1645 00f6 FFF7FEFF 		bl	snprintf
 1646              	.LVL148:
 1647 00fa CEE7     		b	.L145
 1648              	.L157:
 452:../system/src/ve_direct_protocol/parser.c **** 		case ERR_EXCESIVE_PV_CURRENT: snprintf(output, output_ln, "ERR_EXCESIVE_PV_CURRENT"); break;
 1649              		.loc 1 452 0
 1650 00fc 144A     		ldr	r2, .L162+36
 1651 00fe 3146     		mov	r1, r6
 1652 0100 2846     		mov	r0, r5
 1653 0102 FFF7FEFF 		bl	snprintf
 1654              	.LVL149:
 1655 0106 C8E7     		b	.L145
 1656              	.L158:
 453:../system/src/ve_direct_protocol/parser.c **** 		case ERR_INPUT_SHUTDOWN: snprintf(output, output_ln, "ERR_INPUT_SHUTDOWN"); break;
 1657              		.loc 1 453 0
 1658 0108 124A     		ldr	r2, .L162+40
 1659 010a 3146     		mov	r1, r6
 1660 010c 2846     		mov	r0, r5
 1661 010e FFF7FEFF 		bl	snprintf
 1662              	.LVL150:
 1663 0112 C2E7     		b	.L145
 1664              	.L159:
 454:../system/src/ve_direct_protocol/parser.c **** 		case ERR_TUNES_LOST: snprintf(output, output_ln, "ERR_TUNES_LOST"); break;
 1665              		.loc 1 454 0
 1666 0114 104A     		ldr	r2, .L162+44
 1667 0116 3146     		mov	r1, r6
 1668 0118 2846     		mov	r0, r5
 1669 011a FFF7FEFF 		bl	snprintf
 1670              	.LVL151:
 1671 011e BCE7     		b	.L145
 1672              	.L160:
 455:../system/src/ve_direct_protocol/parser.c **** 	}
 1673              		.loc 1 455 0
 1674 0120 0E4A     		ldr	r2, .L162+48
 1675 0122 3146     		mov	r1, r6
 1676 0124 2846     		mov	r0, r5
 1677 0126 FFF7FEFF 		bl	snprintf
 1678              	.LVL152:
 1679              	.LBE5:
 1680              		.loc 1 457 0
 1681 012a B6E7     		b	.L145
 1682              	.L163:
 1683              		.align	2
 1684              	.L162:
 1685 012c 00000000 		.word	.LC31
 1686 0130 14000000 		.word	.LC32
 1687 0134 1C000000 		.word	.LC33
 1688 0138 38000000 		.word	.LC34
 1689 013c 50000000 		.word	.LC35
 1690 0140 68000000 		.word	.LC36
 1691 0144 80000000 		.word	.LC37
 1692 0148 98000000 		.word	.LC38
 1693 014c B0000000 		.word	.LC39
 1694 0150 CC000000 		.word	.LC40
 1695 0154 E4000000 		.word	.LC41
 1696 0158 FC000000 		.word	.LC42
 1697 015c 10010000 		.word	.LC43
 1698              		.cfi_endproc
 1699              	.LFE10:
 1701              		.section	.text.ve_direct_state_to_string,"ax",%progbits
 1702              		.align	1
 1703              		.global	ve_direct_state_to_string
 1704              		.syntax unified
 1705              		.thumb
 1706              		.thumb_func
 1707              		.fpu softvfp
 1709              	ve_direct_state_to_string:
 1710              	.LFB11:
 458:../system/src/ve_direct_protocol/parser.c **** 
 459:../system/src/ve_direct_protocol/parser.c **** void ve_direct_state_to_string(ve_direct_system_state input, char* output, int8_t output_ln) {
 1711              		.loc 1 459 0
 1712              		.cfi_startproc
 1713              		@ args = 0, pretend = 0, frame = 0
 1714              		@ frame_needed = 0, uses_anonymous_args = 0
 1715              	.LVL153:
 1716 0000 70B5     		push	{r4, r5, r6, lr}
 1717              		.cfi_def_cfa_offset 16
 1718              		.cfi_offset 4, -16
 1719              		.cfi_offset 5, -12
 1720              		.cfi_offset 6, -8
 1721              		.cfi_offset 14, -4
 1722 0002 0446     		mov	r4, r0
 1723 0004 0D46     		mov	r5, r1
 1724 0006 1646     		mov	r6, r2
 460:../system/src/ve_direct_protocol/parser.c **** 	memset(output, 0x00, output_ln);
 1725              		.loc 1 460 0
 1726 0008 0021     		movs	r1, #0
 1727              	.LVL154:
 1728 000a 2846     		mov	r0, r5
 1729              	.LVL155:
 1730 000c FFF7FEFF 		bl	memset
 1731              	.LVL156:
 461:../system/src/ve_direct_protocol/parser.c **** 
 462:../system/src/ve_direct_protocol/parser.c **** 	switch(input) {
 1732              		.loc 1 462 0
 1733 0010 601C     		adds	r0, r4, #1
 1734 0012 0A28     		cmp	r0, #10
 1735 0014 0CD8     		bhi	.L164
 1736 0016 DFE800F0 		tbb	[pc, r0]
 1737              	.L167:
 1738 001a 06       		.byte	(.L166-.L167)/2
 1739 001b 0C       		.byte	(.L168-.L167)/2
 1740 001c 12       		.byte	(.L169-.L167)/2
 1741 001d 18       		.byte	(.L170-.L167)/2
 1742 001e 1E       		.byte	(.L171-.L167)/2
 1743 001f 24       		.byte	(.L172-.L167)/2
 1744 0020 2A       		.byte	(.L173-.L167)/2
 1745 0021 0B       		.byte	(.L164-.L167)/2
 1746 0022 0B       		.byte	(.L164-.L167)/2
 1747 0023 0B       		.byte	(.L164-.L167)/2
 1748 0024 30       		.byte	(.L174-.L167)/2
 1749 0025 00       		.p2align 1
 1750              	.L166:
 1751              	.LBB6:
 463:../system/src/ve_direct_protocol/parser.c **** 		case STATE_UNINITIALIZED: snprintf(output, output_ln, "STATE_UNINITIALIZED"); break;
 1752              		.loc 1 463 0
 1753 0026 184A     		ldr	r2, .L176
 1754 0028 3146     		mov	r1, r6
 1755 002a 2846     		mov	r0, r5
 1756 002c FFF7FEFF 		bl	snprintf
 1757              	.LVL157:
 1758              	.L164:
 1759              	.LBE6:
 464:../system/src/ve_direct_protocol/parser.c **** 		case STATE_OFF: snprintf(output, output_ln, "STATE_OFF"); break;
 465:../system/src/ve_direct_protocol/parser.c **** 		case STATE_LOW_PWR: snprintf(output, output_ln, "STATE_LOW_PWR"); break;
 466:../system/src/ve_direct_protocol/parser.c **** 		case STATE_FAULT: snprintf(output, output_ln, "STATE_FAULT"); break;
 467:../system/src/ve_direct_protocol/parser.c **** 		case STATE_BULK: snprintf(output, output_ln, "STATE_BULK"); break;
 468:../system/src/ve_direct_protocol/parser.c **** 		case STATE_ABSORPTION: snprintf(output, output_ln, "STATE_ABSORPTION"); break;
 469:../system/src/ve_direct_protocol/parser.c **** 		case STATE_FLOAT: snprintf(output, output_ln, "STATE_FLOAT"); break;
 470:../system/src/ve_direct_protocol/parser.c **** 		case STATE_INVERTING:  snprintf(output, output_ln, "STATE_INVERTING"); break;
 471:../system/src/ve_direct_protocol/parser.c **** 	}
 472:../system/src/ve_direct_protocol/parser.c **** }
 1760              		.loc 1 472 0
 1761 0030 70BD     		pop	{r4, r5, r6, pc}
 1762              	.LVL158:
 1763              	.L168:
 1764              	.LBB7:
 464:../system/src/ve_direct_protocol/parser.c **** 		case STATE_OFF: snprintf(output, output_ln, "STATE_OFF"); break;
 1765              		.loc 1 464 0
 1766 0032 164A     		ldr	r2, .L176+4
 1767 0034 3146     		mov	r1, r6
 1768 0036 2846     		mov	r0, r5
 1769 0038 FFF7FEFF 		bl	snprintf
 1770              	.LVL159:
 1771 003c F8E7     		b	.L164
 1772              	.L169:
 465:../system/src/ve_direct_protocol/parser.c **** 		case STATE_FAULT: snprintf(output, output_ln, "STATE_FAULT"); break;
 1773              		.loc 1 465 0
 1774 003e 144A     		ldr	r2, .L176+8
 1775 0040 3146     		mov	r1, r6
 1776 0042 2846     		mov	r0, r5
 1777 0044 FFF7FEFF 		bl	snprintf
 1778              	.LVL160:
 1779 0048 F2E7     		b	.L164
 1780              	.L170:
 466:../system/src/ve_direct_protocol/parser.c **** 		case STATE_BULK: snprintf(output, output_ln, "STATE_BULK"); break;
 1781              		.loc 1 466 0
 1782 004a 124A     		ldr	r2, .L176+12
 1783 004c 3146     		mov	r1, r6
 1784 004e 2846     		mov	r0, r5
 1785 0050 FFF7FEFF 		bl	snprintf
 1786              	.LVL161:
 1787 0054 ECE7     		b	.L164
 1788              	.L171:
 467:../system/src/ve_direct_protocol/parser.c **** 		case STATE_ABSORPTION: snprintf(output, output_ln, "STATE_ABSORPTION"); break;
 1789              		.loc 1 467 0
 1790 0056 104A     		ldr	r2, .L176+16
 1791 0058 3146     		mov	r1, r6
 1792 005a 2846     		mov	r0, r5
 1793 005c FFF7FEFF 		bl	snprintf
 1794              	.LVL162:
 1795 0060 E6E7     		b	.L164
 1796              	.L172:
 468:../system/src/ve_direct_protocol/parser.c **** 		case STATE_FLOAT: snprintf(output, output_ln, "STATE_FLOAT"); break;
 1797              		.loc 1 468 0
 1798 0062 0E4A     		ldr	r2, .L176+20
 1799 0064 3146     		mov	r1, r6
 1800 0066 2846     		mov	r0, r5
 1801 0068 FFF7FEFF 		bl	snprintf
 1802              	.LVL163:
 1803 006c E0E7     		b	.L164
 1804              	.L173:
 469:../system/src/ve_direct_protocol/parser.c **** 		case STATE_INVERTING:  snprintf(output, output_ln, "STATE_INVERTING"); break;
 1805              		.loc 1 469 0
 1806 006e 0C4A     		ldr	r2, .L176+24
 1807 0070 3146     		mov	r1, r6
 1808 0072 2846     		mov	r0, r5
 1809 0074 FFF7FEFF 		bl	snprintf
 1810              	.LVL164:
 1811 0078 DAE7     		b	.L164
 1812              	.L174:
 470:../system/src/ve_direct_protocol/parser.c **** 	}
 1813              		.loc 1 470 0
 1814 007a 0A4A     		ldr	r2, .L176+28
 1815 007c 3146     		mov	r1, r6
 1816 007e 2846     		mov	r0, r5
 1817 0080 FFF7FEFF 		bl	snprintf
 1818              	.LVL165:
 1819              	.LBE7:
 1820              		.loc 1 472 0
 1821 0084 D4E7     		b	.L164
 1822              	.L177:
 1823 0086 00BF     		.align	2
 1824              	.L176:
 1825 0088 00000000 		.word	.LC44
 1826 008c 14000000 		.word	.LC45
 1827 0090 20000000 		.word	.LC46
 1828 0094 30000000 		.word	.LC47
 1829 0098 3C000000 		.word	.LC48
 1830 009c 48000000 		.word	.LC49
 1831 00a0 5C000000 		.word	.LC50
 1832 00a4 68000000 		.word	.LC51
 1833              		.cfi_endproc
 1834              	.LFE11:
 1836              		.global	skip_counter
 1837              		.comm	value,12,4
 1838              		.comm	key,9,4
 1839              		.section	.bss.skip_counter,"aw",%nobits
 1840              		.set	.LANCHOR0,. + 0
 1843              	skip_counter:
 1844 0000 00       		.space	1
 1845              		.section	.rodata.get_key_value_from_str.str1.4,"aMS",%progbits,1
 1846              		.align	2
 1847              	.LC0:
 1848 0000 50494400 		.ascii	"PID\000"
 1849              	.LC1:
 1850 0004 465700   		.ascii	"FW\000"
 1851 0007 00       		.space	1
 1852              	.LC2:
 1853 0008 53455223 		.ascii	"SER#\000"
 1853      00
 1854 000d 000000   		.space	3
 1855              	.LC3:
 1856 0010 5600     		.ascii	"V\000"
 1857 0012 0000     		.space	2
 1858              	.LC4:
 1859 0014 4900     		.ascii	"I\000"
 1860 0016 0000     		.space	2
 1861              	.LC5:
 1862 0018 56505600 		.ascii	"VPV\000"
 1863              	.LC6:
 1864 001c 50505600 		.ascii	"PPV\000"
 1865              	.LC7:
 1866 0020 435300   		.ascii	"CS\000"
 1867 0023 00       		.space	1
 1868              	.LC8:
 1869 0024 45525200 		.ascii	"ERR\000"
 1870              	.LC9:
 1871 0028 4C4F4144 		.ascii	"LOAD\000"
 1871      00
 1872 002d 000000   		.space	3
 1873              	.LC10:
 1874 0030 494C00   		.ascii	"IL\000"
 1875 0033 00       		.space	1
 1876              	.LC11:
 1877 0034 48313900 		.ascii	"H19\000"
 1878              	.LC12:
 1879 0038 48323000 		.ascii	"H20\000"
 1880              	.LC13:
 1881 003c 48323100 		.ascii	"H21\000"
 1882              	.LC14:
 1883 0040 48323200 		.ascii	"H22\000"
 1884              	.LC15:
 1885 0044 48323300 		.ascii	"H23\000"
 1886              	.LC16:
 1887 0048 48534453 		.ascii	"HSDS\000"
 1887      00
 1888 004d 000000   		.space	3
 1889              	.LC17:
 1890 0050 43686563 		.ascii	"Checksum\000"
 1890      6B73756D 
 1890      00
 1891              		.section	.rodata.ve_direct_error_to_string.str1.4,"aMS",%progbits,1
 1892              		.align	2
 1893              	.LC31:
 1894 0000 4552525F 		.ascii	"ERR_UNINITIALIZED\000"
 1894      554E494E 
 1894      49544941 
 1894      4C495A45 
 1894      4400
 1895 0012 0000     		.space	2
 1896              	.LC32:
 1897 0014 4552525F 		.ascii	"ERR_OK\000"
 1897      4F4B00
 1898 001b 00       		.space	1
 1899              	.LC33:
 1900 001c 4552525F 		.ascii	"ERR_EXCESIVE_BAT_VOLTAGE\000"
 1900      45584345 
 1900      53495645 
 1900      5F424154 
 1900      5F564F4C 
 1901 0035 000000   		.space	3
 1902              	.LC34:
 1903 0038 4552525F 		.ascii	"ERR_CHGR_TEMP_TOO_HIGH\000"
 1903      43484752 
 1903      5F54454D 
 1903      505F544F 
 1903      4F5F4849 
 1904 004f 00       		.space	1
 1905              	.LC35:
 1906 0050 4552525F 		.ascii	"ERR_CHGR_EXCESIVE_CURR\000"
 1906      43484752 
 1906      5F455843 
 1906      45534956 
 1906      455F4355 
 1907 0067 00       		.space	1
 1908              	.LC36:
 1909 0068 4552525F 		.ascii	"ERR_CHGR_CURR_REVERSED\000"
 1909      43484752 
 1909      5F435552 
 1909      525F5245 
 1909      56455253 
 1910 007f 00       		.space	1
 1911              	.LC37:
 1912 0080 4552525F 		.ascii	"ERR_BULK_TIME_EXCEED\000"
 1912      42554C4B 
 1912      5F54494D 
 1912      455F4558 
 1912      43454544 
 1913 0095 000000   		.space	3
 1914              	.LC38:
 1915 0098 4552525F 		.ascii	"ERR_CURRENT_SENSE_FAIL\000"
 1915      43555252 
 1915      454E545F 
 1915      53454E53 
 1915      455F4641 
 1916 00af 00       		.space	1
 1917              	.LC39:
 1918 00b0 4552525F 		.ascii	"ERR_EXCESIVE_TERMINAL_TEMP\000"
 1918      45584345 
 1918      53495645 
 1918      5F544552 
 1918      4D494E41 
 1919 00cb 00       		.space	1
 1920              	.LC40:
 1921 00cc 4552525F 		.ascii	"ERR_EXCESIVE_PV_VOLTAGE\000"
 1921      45584345 
 1921      53495645 
 1921      5F50565F 
 1921      564F4C54 
 1922              	.LC41:
 1923 00e4 4552525F 		.ascii	"ERR_EXCESIVE_PV_CURRENT\000"
 1923      45584345 
 1923      53495645 
 1923      5F50565F 
 1923      43555252 
 1924              	.LC42:
 1925 00fc 4552525F 		.ascii	"ERR_INPUT_SHUTDOWN\000"
 1925      494E5055 
 1925      545F5348 
 1925      5554444F 
 1925      574E00
 1926 010f 00       		.space	1
 1927              	.LC43:
 1928 0110 4552525F 		.ascii	"ERR_TUNES_LOST\000"
 1928      54554E45 
 1928      535F4C4F 
 1928      535400
 1929              		.section	.rodata.ve_direct_parse_to_raw_struct.str1.4,"aMS",%progbits,1
 1930              		.align	2
 1931              	.LC18:
 1932 0000 3000     		.ascii	"0\000"
 1933 0002 0000     		.space	2
 1934              	.LC19:
 1935 0004 3200     		.ascii	"2\000"
 1936 0006 0000     		.space	2
 1937              	.LC20:
 1938 0008 313700   		.ascii	"17\000"
 1939 000b 00       		.space	1
 1940              	.LC21:
 1941 000c 313800   		.ascii	"18\000"
 1942 000f 00       		.space	1
 1943              	.LC22:
 1944 0010 313900   		.ascii	"19\000"
 1945 0013 00       		.space	1
 1946              	.LC23:
 1947 0014 323000   		.ascii	"20\000"
 1948 0017 00       		.space	1
 1949              	.LC24:
 1950 0018 323100   		.ascii	"21\000"
 1951 001b 00       		.space	1
 1952              	.LC25:
 1953 001c 323600   		.ascii	"26\000"
 1954 001f 00       		.space	1
 1955              	.LC26:
 1956 0020 333300   		.ascii	"33\000"
 1957 0023 00       		.space	1
 1958              	.LC27:
 1959 0024 333400   		.ascii	"34\000"
 1960 0027 00       		.space	1
 1961              	.LC28:
 1962 0028 333800   		.ascii	"38\000"
 1963 002b 00       		.space	1
 1964              	.LC29:
 1965 002c 31313600 		.ascii	"116\000"
 1966              	.LC30:
 1967 0030 4F4E00   		.ascii	"ON\000"
 1968              		.section	.rodata.ve_direct_state_to_string.str1.4,"aMS",%progbits,1
 1969              		.align	2
 1970              	.LC44:
 1971 0000 53544154 		.ascii	"STATE_UNINITIALIZED\000"
 1971      455F554E 
 1971      494E4954 
 1971      49414C49 
 1971      5A454400 
 1972              	.LC45:
 1973 0014 53544154 		.ascii	"STATE_OFF\000"
 1973      455F4F46 
 1973      4600
 1974 001e 0000     		.space	2
 1975              	.LC46:
 1976 0020 53544154 		.ascii	"STATE_LOW_PWR\000"
 1976      455F4C4F 
 1976      575F5057 
 1976      5200
 1977 002e 0000     		.space	2
 1978              	.LC47:
 1979 0030 53544154 		.ascii	"STATE_FAULT\000"
 1979      455F4641 
 1979      554C5400 
 1980              	.LC48:
 1981 003c 53544154 		.ascii	"STATE_BULK\000"
 1981      455F4255 
 1981      4C4B00
 1982 0047 00       		.space	1
 1983              	.LC49:
 1984 0048 53544154 		.ascii	"STATE_ABSORPTION\000"
 1984      455F4142 
 1984      534F5250 
 1984      54494F4E 
 1984      00
 1985 0059 000000   		.space	3
 1986              	.LC50:
 1987 005c 53544154 		.ascii	"STATE_FLOAT\000"
 1987      455F464C 
 1987      4F415400 
 1988              	.LC51:
 1989 0068 53544154 		.ascii	"STATE_INVERTING\000"
 1989      455F494E 
 1989      56455254 
 1989      494E4700 
 1990              		.text
 1991              	.Letext0:
 1992              		.file 2 "/usr/local/bin/gcc-arm-none-eabi-7-2018-q2-update/lib/gcc/arm-none-eabi/7.3.1/include/std
 1993              		.file 3 "../system/include/./ve_direct_protocol/raw_struct.h"
 1994              		.file 4 "../system/include/./ve_direct_protocol/average_struct.h"
 1995              		.file 5 "/usr/local/bin/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/lock.h"
 1996              		.file 6 "/usr/local/bin/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/_types.h"
 1997              		.file 7 "/usr/local/bin/gcc-arm-none-eabi-7-2018-q2-update/lib/gcc/arm-none-eabi/7.3.1/include/std
 1998              		.file 8 "/usr/local/bin/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/reent.h"
 1999              		.file 9 "/usr/local/bin/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/stdlib.h"
 2000              		.file 10 "/usr/local/bin/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/string.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 parser.c
     /tmp/cc5TvZOT.s:16     .text.copy_till_non_printable_char:0000000000000000 $t
     /tmp/cc5TvZOT.s:22     .text.copy_till_non_printable_char:0000000000000000 copy_till_non_printable_char
     /tmp/cc5TvZOT.s:125    .text.get_key_value_from_str:0000000000000000 $t
     /tmp/cc5TvZOT.s:131    .text.get_key_value_from_str:0000000000000000 get_key_value_from_str
     /tmp/cc5TvZOT.s:343    .text.get_key_value_from_str:0000000000000118 $d
     /tmp/cc5TvZOT.s:365    .text.ve_direct_parser_init:0000000000000000 $t
     /tmp/cc5TvZOT.s:372    .text.ve_direct_parser_init:0000000000000000 ve_direct_parser_init
     /tmp/cc5TvZOT.s:402    .text.ve_direct_cut_to_checksum:0000000000000000 $t
     /tmp/cc5TvZOT.s:409    .text.ve_direct_cut_to_checksum:0000000000000000 ve_direct_cut_to_checksum
     /tmp/cc5TvZOT.s:483    .text.ve_direct_validate_checksum:0000000000000000 $t
     /tmp/cc5TvZOT.s:490    .text.ve_direct_validate_checksum:0000000000000000 ve_direct_validate_checksum
     /tmp/cc5TvZOT.s:629    .text.ve_direct_validate_checksum:0000000000000078 $d
     /tmp/cc5TvZOT.s:634    .text.ve_direct_parse_to_raw_struct:0000000000000000 $t
     /tmp/cc5TvZOT.s:641    .text.ve_direct_parse_to_raw_struct:0000000000000000 ve_direct_parse_to_raw_struct
     /tmp/cc5TvZOT.s:721    .text.ve_direct_parse_to_raw_struct:0000000000000062 $d
     /tmp/cc5TvZOT.s:727    .text.ve_direct_parse_to_raw_struct:0000000000000068 $t
     /tmp/cc5TvZOT.s:961    .text.ve_direct_parse_to_raw_struct:00000000000001c0 $d
     /tmp/cc5TvZOT.s:978    .text.ve_direct_parse_to_raw_struct:0000000000000204 $t
     /tmp/cc5TvZOT.s:1128   .text.ve_direct_parse_to_raw_struct:00000000000002cc $d
                            *COM*:000000000000000c value
                            *COM*:0000000000000009 key
     /tmp/cc5TvZOT.s:1147   .text.ve_direct_add_to_average:0000000000000000 $t
     /tmp/cc5TvZOT.s:1154   .text.ve_direct_add_to_average:0000000000000000 ve_direct_add_to_average
     /tmp/cc5TvZOT.s:1237   .text.ve_direct_add_to_average:0000000000000078 $d
     /tmp/cc5TvZOT.s:1242   .text.ve_direct_get_averages:0000000000000000 $t
     /tmp/cc5TvZOT.s:1249   .text.ve_direct_get_averages:0000000000000000 ve_direct_get_averages
     /tmp/cc5TvZOT.s:1347   .text.ve_direct_get_averages:0000000000000074 $d
     /tmp/cc5TvZOT.s:1353   .text.ve_direct_set_sys_voltage:0000000000000000 $t
     /tmp/cc5TvZOT.s:1360   .text.ve_direct_set_sys_voltage:0000000000000000 ve_direct_set_sys_voltage
     /tmp/cc5TvZOT.s:1374   .text.ve_direct_store_errors:0000000000000000 $t
     /tmp/cc5TvZOT.s:1381   .text.ve_direct_store_errors:0000000000000000 ve_direct_store_errors
     /tmp/cc5TvZOT.s:1415   .text.ve_direct_error_to_string:0000000000000000 $t
     /tmp/cc5TvZOT.s:1422   .text.ve_direct_error_to_string:0000000000000000 ve_direct_error_to_string
     /tmp/cc5TvZOT.s:1451   .text.ve_direct_error_to_string:000000000000001a $d
     /tmp/cc5TvZOT.s:1569   .text.ve_direct_error_to_string:0000000000000090 $t
     /tmp/cc5TvZOT.s:1685   .text.ve_direct_error_to_string:000000000000012c $d
     /tmp/cc5TvZOT.s:1702   .text.ve_direct_state_to_string:0000000000000000 $t
     /tmp/cc5TvZOT.s:1709   .text.ve_direct_state_to_string:0000000000000000 ve_direct_state_to_string
     /tmp/cc5TvZOT.s:1738   .text.ve_direct_state_to_string:000000000000001a $d
     /tmp/cc5TvZOT.s:1825   .text.ve_direct_state_to_string:0000000000000088 $d
     /tmp/cc5TvZOT.s:1843   .bss.skip_counter:0000000000000000 skip_counter
     /tmp/cc5TvZOT.s:1844   .bss.skip_counter:0000000000000000 $d
     /tmp/cc5TvZOT.s:1846   .rodata.get_key_value_from_str.str1.4:0000000000000000 $d
     /tmp/cc5TvZOT.s:1892   .rodata.ve_direct_error_to_string.str1.4:0000000000000000 $d
     /tmp/cc5TvZOT.s:1930   .rodata.ve_direct_parse_to_raw_struct.str1.4:0000000000000000 $d
     /tmp/cc5TvZOT.s:1969   .rodata.ve_direct_state_to_string.str1.4:0000000000000000 $d
     /tmp/cc5TvZOT.s:1749   .text.ve_direct_state_to_string:0000000000000025 $d
     /tmp/cc5TvZOT.s:1749   .text.ve_direct_state_to_string:0000000000000026 $t
                           .group:0000000000000000 wm4.0.879aed89c359f5856fe69c61b3590d34
                           .group:0000000000000000 wm4.parser.h.9.2d68c8669e0bffa77926bbb9bf5a2aba
                           .group:0000000000000000 wm4.stdintgcc.h.29.6d480f4ba0f60596e88234283d42444f
                           .group:0000000000000000 wm4.average_struct.h.9.41820d0d7dc25dca8a9005c6d1a8bb5f
                           .group:0000000000000000 wm4._newlib_version.h.4.875b979a44719054cd750d0952ad3fd6
                           .group:0000000000000000 wm4.newlib.h.18.5e5ca3429233af402d406a202f1fc1ac
                           .group:0000000000000000 wm4.ieeefp.h.77.220d9cccac42cd58761758bee2df4ce6
                           .group:0000000000000000 wm4.features.h.22.fad1cec3bc7ff06488171438dbdcfd02
                           .group:0000000000000000 wm4.config.h.220.6cac6a9685cfce5e83c17784171638d9
                           .group:0000000000000000 wm4._ansi.h.31.de524f58584151836e90d8620a16f8e8
                           .group:0000000000000000 wm4.stddef.h.39.a38874c8f8a57e66301090908ec2a69f
                           .group:0000000000000000 wm4._default_types.h.6.959254cf5f09734ea7516c89e8bb21bd
                           .group:0000000000000000 wm4.lock.h.2.1461d1fff82dffe8bfddc23307f6484f
                           .group:0000000000000000 wm4._types.h.125.5cf8a495f1f7ef36777ad868a1e32068
                           .group:0000000000000000 wm4.stddef.h.161.5349cb105733e8777bfb0cf53c4e3f34
                           .group:0000000000000000 wm4._types.h.184.03611d4f6b5bec9997bcf4279eceba07
                           .group:0000000000000000 wm4.reent.h.17.90c2574d4acdcfce933db5cb09ff35fe
                           .group:0000000000000000 wm4.cdefs.h.47.0bcdf94cb40e176393dd1404056825b4
                           .group:0000000000000000 wm4.string.h.15.dab3980bf35408a4c507182805e2de3a
                           .group:0000000000000000 wm4.stddef.h.161.19e15733342b50ead2919490b095303e
                           .group:0000000000000000 wm4.stdlib.h.13.4ed386f5c1a80d71e72172885d946ef2
                           .group:0000000000000000 wm4.alloca.h.8.dfc0c703c47ec3e69746825b17d9e66d
                           .group:0000000000000000 wm4.stdlib.h.56.d4493cd3736e51e9d56335045f26df45

UNDEFINED SYMBOLS
strcmp
memset
strcpy
strtol
snprintf
