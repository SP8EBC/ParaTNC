   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"main.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.message_callback,"ax",%progbits
  16              		.align	1
  17              		.syntax unified
  18              		.thumb
  19              		.thumb_func
  20              		.fpu softvfp
  22              	message_callback:
  23              	.LFB104:
  24              		.file 1 "../src/main.c"
   1:../src/main.c **** #include <delay.h>
   2:../src/main.c **** #include <LedConfig.h>
   3:../src/main.c **** #include <stdio.h>
   4:../src/main.c **** #include <stdlib.h>
   5:../src/main.c **** #include <string.h>
   6:../src/main.c **** #include <stm32f10x_rcc.h>
   7:../src/main.c **** #include <stm32f10x_iwdg.h>
   8:../src/main.c **** #include <stm32f10x.h>
   9:../src/main.c **** #include "drivers/gpio_conf.h"
  10:../src/main.c **** 
  11:../src/main.c **** #include "main.h"
  12:../src/main.c **** #include "packet_tx_handler.h"
  13:../src/main.c **** 
  14:../src/main.c **** #include "station_config.h"
  15:../src/main.c **** #include "config_data_externs.h"
  16:../src/main.c **** #include "configuration_handler.h"
  17:../src/main.c **** 
  18:../src/main.c **** #include "diag/Trace.h"
  19:../src/main.c **** #include "antilib_adc.h"
  20:../src/main.c **** #include "afsk_pr.h"
  21:../src/main.c **** #include "TimerConfig.h"
  22:../src/main.c **** #include "PathConfig.h"
  23:../src/main.c **** #include "LedConfig.h"
  24:../src/main.c **** #include "io.h"
  25:../src/main.c **** #include "float_to_string.h"
  26:../src/main.c **** 
  27:../src/main.c **** #include "it_handlers.h"
  28:../src/main.c **** 
  29:../src/main.c **** #include "aprs/digi.h"
  30:../src/main.c **** #include "aprs/telemetry.h"
  31:../src/main.c **** #include "aprs/dac.h"
  32:../src/main.c **** #include "aprs/beacon.h"
  33:../src/main.c **** 
  34:../src/main.c **** #include "ve_direct_protocol/parser.h"
  35:../src/main.c **** 
  36:../src/main.c **** #include "rte_wx.h"
  37:../src/main.c **** #include "rte_pv.h"
  38:../src/main.c **** #include "rte_main.h"
  39:../src/main.c **** #include "rte_rtu.h"
  40:../src/main.c **** 
  41:../src/main.c **** #include <wx_handler.h>
  42:../src/main.c **** #include "drivers/dallas.h"
  43:../src/main.c **** #include "drivers/i2c.h"
  44:../src/main.c **** #include "drivers/analog_anemometer.h"
  45:../src/main.c **** #include "aprs/wx.h"
  46:../src/main.c **** 
  47:../src/main.c **** #include "../system/include/modbus_rtu/rtu_serial_io.h"
  48:../src/main.c **** 
  49:../src/main.c **** #include "../system/include/davis_vantage/davis.h"
  50:../src/main.c **** #include "../system/include/davis_vantage/davis_parsers.h"
  51:../src/main.c **** 
  52:../src/main.c **** #include "drivers/ms5611.h"
  53:../src/main.c **** #include <drivers/bme280.h>
  54:../src/main.c **** 
  55:../src/main.c **** #include "umb_master/umb_master.h"
  56:../src/main.c **** #include "umb_master/umb_channel_pool.h"
  57:../src/main.c **** #include "umb_master/umb_0x26_status.h"
  58:../src/main.c **** 
  59:../src/main.c **** #include "drivers/dallas.h"
  60:../src/main.c **** 
  61:../src/main.c **** #include "KissCommunication.h"
  62:../src/main.c **** 
  63:../src/main.c **** #define SOH 0x01
  64:../src/main.c **** 
  65:../src/main.c **** 
  66:../src/main.c **** //#define SERIAL_TX_TEST_MODE
  67:../src/main.c **** 
  68:../src/main.c **** // Niebieska dioda -> DCD
  69:../src/main.c **** // Zielona dioda -> anemometr albo TX
  70:../src/main.c **** 
  71:../src/main.c **** // backup registers
  72:../src/main.c **** // 2 -> 4bit hard-faults | 4bit boot-counter
  73:../src/main.c **** // 3 -> hard fault PC LSB
  74:../src/main.c **** // 4 -> hard fault PC MSB
  75:../src/main.c **** // 5 -> hard fault LR LSB
  76:../src/main.c **** // 6 -> hard fault LR MSB
  77:../src/main.c **** 
  78:../src/main.c **** #define CONFIG_FIRST_RESTORED 			(1)
  79:../src/main.c **** #define CONFIG_FIRST_FAIL_RESTORING	  	(1 << 1)
  80:../src/main.c **** #define CONFIG_FIRST_CRC_OK				(1 << 2)
  81:../src/main.c **** 
  82:../src/main.c **** #define CONFIG_SECOND_RESTORED 				(1 << 3)
  83:../src/main.c **** #define CONFIG_SECOND_FAIL_RESTORING	  	(1 << 4)
  84:../src/main.c **** #define CONFIG_SECOND_CRC_OK				(1 << 5)
  85:../src/main.c **** 
  86:../src/main.c **** // ----- main() ---------------------------------------------------------------
  87:../src/main.c **** 
  88:../src/main.c **** // Sample pragmas to cope with warnings. Please note the related line at
  89:../src/main.c **** // the end of this function, used to pop the compiler diagnostics status.
  90:../src/main.c **** #pragma GCC diagnostic push
  91:../src/main.c **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  92:../src/main.c **** #pragma GCC diagnostic ignored "-Wmissing-declarations"
  93:../src/main.c **** #pragma GCC diagnostic ignored "-Wreturn-type"
  94:../src/main.c **** #pragma GCC diagnostic ignored "-Wempty-body"
  95:../src/main.c **** 
  96:../src/main.c **** // used configuration structures
  97:../src/main.c **** const config_data_mode_t * main_config_data_mode = 0;
  98:../src/main.c **** const config_data_basic_t * main_config_data_basic = 0;
  99:../src/main.c **** const config_data_wx_sources_t * main_config_data_wx_sources = 0;
 100:../src/main.c **** const config_data_umb_t * main_config_data_umb = 0;
 101:../src/main.c **** const config_data_rtu_t * main_config_data_rtu = 0;
 102:../src/main.c **** 
 103:../src/main.c **** // global variable incremented by the SysTick handler to measure time in miliseconds
 104:../src/main.c **** uint32_t master_time = 0;
 105:../src/main.c **** 
 106:../src/main.c **** // this global variable stores numbers of ticks of idling CPU
 107:../src/main.c **** uint32_t main_idle_cpu_ticks = 0;
 108:../src/main.c **** 
 109:../src/main.c **** // current cpu idle ticks
 110:../src/main.c **** uint32_t main_current_cpu_idle_ticks = 0;
 111:../src/main.c **** 
 112:../src/main.c **** // approx cpu load in percents
 113:../src/main.c **** int8_t main_cpu_load = 0;
 114:../src/main.c **** 
 115:../src/main.c **** // global variable used as a timer to trigger meteo sensors mesurements
 116:../src/main.c **** int32_t main_wx_sensors_pool_timer = 65500;
 117:../src/main.c **** 
 118:../src/main.c **** // global variable used as a timer to trigger packet sending
 119:../src/main.c **** int32_t main_one_minute_pool_timer = 60000;
 120:../src/main.c **** 
 121:../src/main.c **** // one second pool interval
 122:../src/main.c **** int32_t main_one_second_pool_timer = 1000;
 123:../src/main.c **** 
 124:../src/main.c **** // two second pool interval
 125:../src/main.c **** int32_t main_two_second_pool_timer = 2000;
 126:../src/main.c **** 
 127:../src/main.c **** // ten second pool interval
 128:../src/main.c **** int32_t main_ten_second_pool_timer = 10000;
 129:../src/main.c **** 
 130:../src/main.c **** // serial context for UART used to KISS
 131:../src/main.c **** srl_context_t main_kiss_srl_ctx;
 132:../src/main.c **** 
 133:../src/main.c **** #if defined(PARATNC_HWREV_B) || defined(PARATNC_HWREV_C)
 134:../src/main.c **** // serial context for UART used for comm with wx sensors
 135:../src/main.c **** srl_context_t main_wx_srl_ctx;
 136:../src/main.c **** #endif
 137:../src/main.c **** 
 138:../src/main.c **** // a pointer to KISS context
 139:../src/main.c **** srl_context_t* main_kiss_srl_ctx_ptr;
 140:../src/main.c **** 
 141:../src/main.c **** // a pointer to wx comms context
 142:../src/main.c **** srl_context_t* main_wx_srl_ctx_ptr;
 143:../src/main.c **** 
 144:../src/main.c **** // target USART1 (kiss) baudrate
 145:../src/main.c **** uint32_t main_target_kiss_baudrate;
 146:../src/main.c **** 
 147:../src/main.c **** // target USART2 (wx) baudrate
 148:../src/main.c **** uint32_t main_target_wx_baudrate;
 149:../src/main.c **** 
 150:../src/main.c **** // controls if the KISS modem is enabled
 151:../src/main.c **** uint8_t main_kiss_enabled = 1;
 152:../src/main.c **** 
 153:../src/main.c **** // controls if DAVIS serialprotocol client is enabled by the configuration
 154:../src/main.c **** uint8_t main_davis_serial_enabled = 0;
 155:../src/main.c **** 
 156:../src/main.c **** uint8_t main_modbus_rtu_master_enabled = 0;
 157:../src/main.c **** 
 158:../src/main.c **** // global variables represending the AX25/APRS stack
 159:../src/main.c **** AX25Ctx main_ax25;
 160:../src/main.c **** Afsk main_afsk;
 161:../src/main.c **** 
 162:../src/main.c **** 
 163:../src/main.c **** AX25Call main_own_path[3];
 164:../src/main.c **** uint8_t main_own_path_ln = 0;
 165:../src/main.c **** uint8_t main_own_aprs_msg_len;
 166:../src/main.c **** char main_own_aprs_msg[OWN_APRS_MSG_LN];
 167:../src/main.c **** 
 168:../src/main.c **** char main_string_latitude[9];
 169:../src/main.c **** char main_string_longitude[9];
 170:../src/main.c **** 
 171:../src/main.c **** char main_symbol_f = '/';
 172:../src/main.c **** char main_symbol_s = '#';
 173:../src/main.c **** 
 174:../src/main.c **** // global variable used to store return value from various functions
 175:../src/main.c **** volatile uint8_t retval = 100;
 176:../src/main.c **** 
 177:../src/main.c **** uint16_t buffer_len = 0;
 178:../src/main.c **** 
 179:../src/main.c **** // return value from UMB related functions
 180:../src/main.c **** umb_retval_t main_umb_retval = UMB_UNINITIALIZED;
 181:../src/main.c **** 
 182:../src/main.c **** // result of CRC calculation
 183:../src/main.c **** uint32_t main_crc_result = 0;
 184:../src/main.c **** 
 185:../src/main.c **** char after_tx_lock;
 186:../src/main.c **** 
 187:../src/main.c **** unsigned short rx10m = 0, tx10m = 0, digi10m = 0, digidrop10m = 0, kiss10m = 0;
 188:../src/main.c **** 
 189:../src/main.c **** 
 190:../src/main.c **** static void message_callback(struct AX25Msg *msg) {
  25              		.loc 1 190 0
  26              		.cfi_startproc
  27              		@ args = 0, pretend = 0, frame = 0
  28              		@ frame_needed = 0, uses_anonymous_args = 0
  29              		@ link register save eliminated.
  30              	.LVL0:
 191:../src/main.c **** 
 192:../src/main.c **** }
  31              		.loc 1 192 0
  32 0000 7047     		bx	lr
  33              		.cfi_endproc
  34              	.LFE104:
  36              		.section	.text.main,"ax",%progbits
  37              		.align	1
  38              		.global	main
  39              		.syntax unified
  40              		.thumb
  41              		.thumb_func
  42              		.fpu softvfp
  44              	main:
  45              	.LFB105:
 193:../src/main.c **** 
 194:../src/main.c **** int main(int argc, char* argv[]){
  46              		.loc 1 194 0
  47              		.cfi_startproc
  48              		@ args = 0, pretend = 0, frame = 8
  49              		@ frame_needed = 0, uses_anonymous_args = 0
  50              	.LVL1:
  51 0000 70B5     		push	{r4, r5, r6, lr}
  52              		.cfi_def_cfa_offset 16
  53              		.cfi_offset 4, -16
  54              		.cfi_offset 5, -12
  55              		.cfi_offset 6, -8
  56              		.cfi_offset 14, -4
  57 0002 88B0     		sub	sp, sp, #32
  58              		.cfi_def_cfa_offset 48
 195:../src/main.c **** 
 196:../src/main.c ****   int32_t ln = 0;
  59              		.loc 1 196 0
  60 0004 0021     		movs	r1, #0
  61              	.LVL2:
  62 0006 0791     		str	r1, [sp, #28]
  63              	.LVL3:
 197:../src/main.c **** 
 198:../src/main.c ****   uint8_t button_inhibit = 0;
 199:../src/main.c **** 
 200:../src/main.c ****   RCC->APB1ENR |= (RCC_APB1ENR_TIM2EN | RCC_APB1ENR_TIM3EN | RCC_APB1ENR_TIM7EN | RCC_APB1ENR_TIM4E
  64              		.loc 1 200 0
  65 0008 8F4B     		ldr	r3, .L115
  66 000a DA69     		ldr	r2, [r3, #28]
  67 000c 42F02702 		orr	r2, r2, #39
  68 0010 DA61     		str	r2, [r3, #28]
 201:../src/main.c ****   RCC->APB2ENR |= (RCC_APB2ENR_IOPAEN | RCC_APB2ENR_IOPBEN | RCC_APB2ENR_IOPCEN | RCC_APB2ENR_IOPDE
  69              		.loc 1 201 0
  70 0012 9A69     		ldr	r2, [r3, #24]
  71 0014 42F40362 		orr	r2, r2, #2096
  72 0018 42F00D02 		orr	r2, r2, #13
  73 001c 9A61     		str	r2, [r3, #24]
 202:../src/main.c ****   RCC->AHBENR |= RCC_AHBENR_CRCEN;
  74              		.loc 1 202 0
  75 001e 5A69     		ldr	r2, [r3, #20]
  76 0020 42F04002 		orr	r2, r2, #64
  77 0024 5A61     		str	r2, [r3, #20]
 203:../src/main.c **** 
 204:../src/main.c ****   memset(main_own_aprs_msg, 0x00, OWN_APRS_MSG_LN);
  78              		.loc 1 204 0
  79 0026 A022     		movs	r2, #160
  80 0028 8848     		ldr	r0, .L115+4
  81              	.LVL4:
  82 002a FFF7FEFF 		bl	memset
  83              	.LVL5:
 205:../src/main.c **** 
 206:../src/main.c ****   NVIC_PriorityGroupConfig(NVIC_PriorityGroup_4);
  84              		.loc 1 206 0
  85 002e 4FF44070 		mov	r0, #768
  86 0032 FFF7FEFF 		bl	NVIC_PriorityGroupConfig
  87              	.LVL6:
 207:../src/main.c **** 
 208:../src/main.c ****   // choosing the signal source for the SysTick timer.
 209:../src/main.c ****   SysTick_CLKSourceConfig(SysTick_CLKSource_HCLK);
  88              		.loc 1 209 0
  89 0036 0420     		movs	r0, #4
  90 0038 FFF7FEFF 		bl	SysTick_CLKSourceConfig
  91              	.LVL7:
 210:../src/main.c **** 
 211:../src/main.c ****   // Configuring the SysTick timer to generate interrupt 100x per second (one interrupt = 10ms)
 212:../src/main.c ****   SysTick_Config(SystemCoreClock / SYSTICK_TICKS_PER_SECONDS);
  92              		.loc 1 212 0
  93 003c 844B     		ldr	r3, .L115+8
  94 003e 1B68     		ldr	r3, [r3]
  95 0040 844A     		ldr	r2, .L115+12
  96 0042 A2FB0323 		umull	r2, r3, r2, r3
  97 0046 5B09     		lsrs	r3, r3, #5
  98              	.LVL8:
  99              	.LBB32:
 100              	.LBB33:
 101              		.file 2 "../system/include/cmsis/core_cm3.h"
   1:../system/include/cmsis/core_cm3.h **** /**************************************************************************//**
   2:../system/include/cmsis/core_cm3.h ****  * @file     core_cm3.h
   3:../system/include/cmsis/core_cm3.h ****  * @brief    CMSIS Cortex-M3 Core Peripheral Access Layer Header File
   4:../system/include/cmsis/core_cm3.h ****  * @version  V4.30
   5:../system/include/cmsis/core_cm3.h ****  * @date     20. October 2015
   6:../system/include/cmsis/core_cm3.h ****  ******************************************************************************/
   7:../system/include/cmsis/core_cm3.h **** /* Copyright (c) 2009 - 2015 ARM LIMITED
   8:../system/include/cmsis/core_cm3.h **** 
   9:../system/include/cmsis/core_cm3.h ****    All rights reserved.
  10:../system/include/cmsis/core_cm3.h ****    Redistribution and use in source and binary forms, with or without
  11:../system/include/cmsis/core_cm3.h ****    modification, are permitted provided that the following conditions are met:
  12:../system/include/cmsis/core_cm3.h ****    - Redistributions of source code must retain the above copyright
  13:../system/include/cmsis/core_cm3.h ****      notice, this list of conditions and the following disclaimer.
  14:../system/include/cmsis/core_cm3.h ****    - Redistributions in binary form must reproduce the above copyright
  15:../system/include/cmsis/core_cm3.h ****      notice, this list of conditions and the following disclaimer in the
  16:../system/include/cmsis/core_cm3.h ****      documentation and/or other materials provided with the distribution.
  17:../system/include/cmsis/core_cm3.h ****    - Neither the name of ARM nor the names of its contributors may be used
  18:../system/include/cmsis/core_cm3.h ****      to endorse or promote products derived from this software without
  19:../system/include/cmsis/core_cm3.h ****      specific prior written permission.
  20:../system/include/cmsis/core_cm3.h ****    *
  21:../system/include/cmsis/core_cm3.h ****    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  22:../system/include/cmsis/core_cm3.h ****    AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  23:../system/include/cmsis/core_cm3.h ****    IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  24:../system/include/cmsis/core_cm3.h ****    ARE DISCLAIMED. IN NO EVENT SHALL COPYRIGHT HOLDERS AND CONTRIBUTORS BE
  25:../system/include/cmsis/core_cm3.h ****    LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  26:../system/include/cmsis/core_cm3.h ****    CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  27:../system/include/cmsis/core_cm3.h ****    SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  28:../system/include/cmsis/core_cm3.h ****    INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  29:../system/include/cmsis/core_cm3.h ****    CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  30:../system/include/cmsis/core_cm3.h ****    ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  31:../system/include/cmsis/core_cm3.h ****    POSSIBILITY OF SUCH DAMAGE.
  32:../system/include/cmsis/core_cm3.h ****    ---------------------------------------------------------------------------*/
  33:../system/include/cmsis/core_cm3.h **** 
  34:../system/include/cmsis/core_cm3.h **** 
  35:../system/include/cmsis/core_cm3.h **** #if   defined ( __ICCARM__ )
  36:../system/include/cmsis/core_cm3.h ****  #pragma system_include         /* treat file as system include file for MISRA check */
  37:../system/include/cmsis/core_cm3.h **** #elif defined(__ARMCC_VERSION) && (__ARMCC_VERSION >= 6010050)
  38:../system/include/cmsis/core_cm3.h ****   #pragma clang system_header   /* treat file as system include file */
  39:../system/include/cmsis/core_cm3.h **** #endif
  40:../system/include/cmsis/core_cm3.h **** 
  41:../system/include/cmsis/core_cm3.h **** #ifndef __CORE_CM3_H_GENERIC
  42:../system/include/cmsis/core_cm3.h **** #define __CORE_CM3_H_GENERIC
  43:../system/include/cmsis/core_cm3.h **** 
  44:../system/include/cmsis/core_cm3.h **** // [ILG]
  45:../system/include/cmsis/core_cm3.h **** #if defined ( __GNUC__ )
  46:../system/include/cmsis/core_cm3.h **** #pragma GCC diagnostic push
  47:../system/include/cmsis/core_cm3.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  48:../system/include/cmsis/core_cm3.h **** #pragma GCC diagnostic ignored "-Wconversion"
  49:../system/include/cmsis/core_cm3.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  50:../system/include/cmsis/core_cm3.h **** #endif
  51:../system/include/cmsis/core_cm3.h **** 
  52:../system/include/cmsis/core_cm3.h **** #include <stdint.h>
  53:../system/include/cmsis/core_cm3.h **** 
  54:../system/include/cmsis/core_cm3.h **** #ifdef __cplusplus
  55:../system/include/cmsis/core_cm3.h ****  extern "C" {
  56:../system/include/cmsis/core_cm3.h **** #endif
  57:../system/include/cmsis/core_cm3.h **** 
  58:../system/include/cmsis/core_cm3.h **** /**
  59:../system/include/cmsis/core_cm3.h ****   \page CMSIS_MISRA_Exceptions  MISRA-C:2004 Compliance Exceptions
  60:../system/include/cmsis/core_cm3.h ****   CMSIS violates the following MISRA-C:2004 rules:
  61:../system/include/cmsis/core_cm3.h **** 
  62:../system/include/cmsis/core_cm3.h ****    \li Required Rule 8.5, object/function definition in header file.<br>
  63:../system/include/cmsis/core_cm3.h ****      Function definitions in header files are used to allow 'inlining'.
  64:../system/include/cmsis/core_cm3.h **** 
  65:../system/include/cmsis/core_cm3.h ****    \li Required Rule 18.4, declaration of union type or object of union type: '{...}'.<br>
  66:../system/include/cmsis/core_cm3.h ****      Unions are used for effective representation of core registers.
  67:../system/include/cmsis/core_cm3.h **** 
  68:../system/include/cmsis/core_cm3.h ****    \li Advisory Rule 19.7, Function-like macro defined.<br>
  69:../system/include/cmsis/core_cm3.h ****      Function-like macros are used to allow more efficient code.
  70:../system/include/cmsis/core_cm3.h ****  */
  71:../system/include/cmsis/core_cm3.h **** 
  72:../system/include/cmsis/core_cm3.h **** 
  73:../system/include/cmsis/core_cm3.h **** /*******************************************************************************
  74:../system/include/cmsis/core_cm3.h ****  *                 CMSIS definitions
  75:../system/include/cmsis/core_cm3.h ****  ******************************************************************************/
  76:../system/include/cmsis/core_cm3.h **** /**
  77:../system/include/cmsis/core_cm3.h ****   \ingroup Cortex_M3
  78:../system/include/cmsis/core_cm3.h ****   @{
  79:../system/include/cmsis/core_cm3.h ****  */
  80:../system/include/cmsis/core_cm3.h **** 
  81:../system/include/cmsis/core_cm3.h **** /*  CMSIS CM3 definitions */
  82:../system/include/cmsis/core_cm3.h **** #define __CM3_CMSIS_VERSION_MAIN  (0x04U)                                      /*!< [31:16] CMSIS H
  83:../system/include/cmsis/core_cm3.h **** #define __CM3_CMSIS_VERSION_SUB   (0x1EU)                                      /*!< [15:0]  CMSIS H
  84:../system/include/cmsis/core_cm3.h **** #define __CM3_CMSIS_VERSION       ((__CM3_CMSIS_VERSION_MAIN << 16U) | \
  85:../system/include/cmsis/core_cm3.h ****                                     __CM3_CMSIS_VERSION_SUB           )        /*!< CMSIS HAL versi
  86:../system/include/cmsis/core_cm3.h **** 
  87:../system/include/cmsis/core_cm3.h **** #define __CORTEX_M                (0x03U)                                      /*!< Cortex-M Core *
  88:../system/include/cmsis/core_cm3.h **** 
  89:../system/include/cmsis/core_cm3.h **** 
  90:../system/include/cmsis/core_cm3.h **** #if   defined ( __CC_ARM )
  91:../system/include/cmsis/core_cm3.h ****   #define __ASM            __asm                                      /*!< asm keyword for ARM Comp
  92:../system/include/cmsis/core_cm3.h ****   #define __INLINE         __inline                                   /*!< inline keyword for ARM C
  93:../system/include/cmsis/core_cm3.h ****   #define __STATIC_INLINE  static __inline
  94:../system/include/cmsis/core_cm3.h **** 
  95:../system/include/cmsis/core_cm3.h **** #elif defined(__ARMCC_VERSION) && (__ARMCC_VERSION >= 6010050)
  96:../system/include/cmsis/core_cm3.h ****   #define __ASM            __asm                                      /*!< asm keyword for ARM Comp
  97:../system/include/cmsis/core_cm3.h ****   #define __INLINE         __inline                                   /*!< inline keyword for ARM C
  98:../system/include/cmsis/core_cm3.h ****   #define __STATIC_INLINE  static __inline
  99:../system/include/cmsis/core_cm3.h **** 
 100:../system/include/cmsis/core_cm3.h **** #elif defined ( __GNUC__ )
 101:../system/include/cmsis/core_cm3.h ****   #define __ASM            __asm                                      /*!< asm keyword for GNU Comp
 102:../system/include/cmsis/core_cm3.h ****   #define __INLINE         inline                                     /*!< inline keyword for GNU C
 103:../system/include/cmsis/core_cm3.h ****   #define __STATIC_INLINE  static inline
 104:../system/include/cmsis/core_cm3.h **** 
 105:../system/include/cmsis/core_cm3.h **** #elif defined ( __ICCARM__ )
 106:../system/include/cmsis/core_cm3.h ****   #define __ASM            __asm                                      /*!< asm keyword for IAR Comp
 107:../system/include/cmsis/core_cm3.h ****   #define __INLINE         inline                                     /*!< inline keyword for IAR C
 108:../system/include/cmsis/core_cm3.h ****   #define __STATIC_INLINE  static inline
 109:../system/include/cmsis/core_cm3.h **** 
 110:../system/include/cmsis/core_cm3.h **** #elif defined ( __TMS470__ )
 111:../system/include/cmsis/core_cm3.h ****   #define __ASM            __asm                                      /*!< asm keyword for TI CCS C
 112:../system/include/cmsis/core_cm3.h ****   #define __STATIC_INLINE  static inline
 113:../system/include/cmsis/core_cm3.h **** 
 114:../system/include/cmsis/core_cm3.h **** #elif defined ( __TASKING__ )
 115:../system/include/cmsis/core_cm3.h ****   #define __ASM            __asm                                      /*!< asm keyword for TASKING 
 116:../system/include/cmsis/core_cm3.h ****   #define __INLINE         inline                                     /*!< inline keyword for TASKI
 117:../system/include/cmsis/core_cm3.h ****   #define __STATIC_INLINE  static inline
 118:../system/include/cmsis/core_cm3.h **** 
 119:../system/include/cmsis/core_cm3.h **** #elif defined ( __CSMC__ )
 120:../system/include/cmsis/core_cm3.h ****   #define __packed
 121:../system/include/cmsis/core_cm3.h ****   #define __ASM            _asm                                      /*!< asm keyword for COSMIC Co
 122:../system/include/cmsis/core_cm3.h ****   #define __INLINE         inline                                    /*!< inline keyword for COSMIC
 123:../system/include/cmsis/core_cm3.h ****   #define __STATIC_INLINE  static inline
 124:../system/include/cmsis/core_cm3.h **** 
 125:../system/include/cmsis/core_cm3.h **** #else
 126:../system/include/cmsis/core_cm3.h ****   #error Unknown compiler
 127:../system/include/cmsis/core_cm3.h **** #endif
 128:../system/include/cmsis/core_cm3.h **** 
 129:../system/include/cmsis/core_cm3.h **** /** __FPU_USED indicates whether an FPU is used or not.
 130:../system/include/cmsis/core_cm3.h ****     This core does not support an FPU at all
 131:../system/include/cmsis/core_cm3.h **** */
 132:../system/include/cmsis/core_cm3.h **** #define __FPU_USED       0U
 133:../system/include/cmsis/core_cm3.h **** 
 134:../system/include/cmsis/core_cm3.h **** #if defined ( __CC_ARM )
 135:../system/include/cmsis/core_cm3.h ****   #if defined __TARGET_FPU_VFP
 136:../system/include/cmsis/core_cm3.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
 137:../system/include/cmsis/core_cm3.h ****   #endif
 138:../system/include/cmsis/core_cm3.h **** 
 139:../system/include/cmsis/core_cm3.h **** #elif defined(__ARMCC_VERSION) && (__ARMCC_VERSION >= 6010050)
 140:../system/include/cmsis/core_cm3.h ****   #if defined __ARM_PCS_VFP
 141:../system/include/cmsis/core_cm3.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
 142:../system/include/cmsis/core_cm3.h ****   #endif
 143:../system/include/cmsis/core_cm3.h **** 
 144:../system/include/cmsis/core_cm3.h **** #elif defined ( __GNUC__ )
 145:../system/include/cmsis/core_cm3.h ****   #if defined (__VFP_FP__) && !defined(__SOFTFP__)
 146:../system/include/cmsis/core_cm3.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
 147:../system/include/cmsis/core_cm3.h ****   #endif
 148:../system/include/cmsis/core_cm3.h **** 
 149:../system/include/cmsis/core_cm3.h **** #elif defined ( __ICCARM__ )
 150:../system/include/cmsis/core_cm3.h ****   #if defined __ARMVFP__
 151:../system/include/cmsis/core_cm3.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
 152:../system/include/cmsis/core_cm3.h ****   #endif
 153:../system/include/cmsis/core_cm3.h **** 
 154:../system/include/cmsis/core_cm3.h **** #elif defined ( __TMS470__ )
 155:../system/include/cmsis/core_cm3.h ****   #if defined __TI_VFP_SUPPORT__
 156:../system/include/cmsis/core_cm3.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
 157:../system/include/cmsis/core_cm3.h ****   #endif
 158:../system/include/cmsis/core_cm3.h **** 
 159:../system/include/cmsis/core_cm3.h **** #elif defined ( __TASKING__ )
 160:../system/include/cmsis/core_cm3.h ****   #if defined __FPU_VFP__
 161:../system/include/cmsis/core_cm3.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
 162:../system/include/cmsis/core_cm3.h ****   #endif
 163:../system/include/cmsis/core_cm3.h **** 
 164:../system/include/cmsis/core_cm3.h **** #elif defined ( __CSMC__ )
 165:../system/include/cmsis/core_cm3.h ****   #if ( __CSMC__ & 0x400U)
 166:../system/include/cmsis/core_cm3.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
 167:../system/include/cmsis/core_cm3.h ****   #endif
 168:../system/include/cmsis/core_cm3.h **** 
 169:../system/include/cmsis/core_cm3.h **** #endif
 170:../system/include/cmsis/core_cm3.h **** 
 171:../system/include/cmsis/core_cm3.h **** #include "core_cmInstr.h"                /* Core Instruction Access */
 172:../system/include/cmsis/core_cm3.h **** #include "core_cmFunc.h"                 /* Core Function Access */
 173:../system/include/cmsis/core_cm3.h **** 
 174:../system/include/cmsis/core_cm3.h **** #ifdef __cplusplus
 175:../system/include/cmsis/core_cm3.h **** }
 176:../system/include/cmsis/core_cm3.h **** #endif
 177:../system/include/cmsis/core_cm3.h **** 
 178:../system/include/cmsis/core_cm3.h **** #endif /* __CORE_CM3_H_GENERIC */
 179:../system/include/cmsis/core_cm3.h **** 
 180:../system/include/cmsis/core_cm3.h **** #ifndef __CMSIS_GENERIC
 181:../system/include/cmsis/core_cm3.h **** 
 182:../system/include/cmsis/core_cm3.h **** #ifndef __CORE_CM3_H_DEPENDANT
 183:../system/include/cmsis/core_cm3.h **** #define __CORE_CM3_H_DEPENDANT
 184:../system/include/cmsis/core_cm3.h **** 
 185:../system/include/cmsis/core_cm3.h **** #ifdef __cplusplus
 186:../system/include/cmsis/core_cm3.h ****  extern "C" {
 187:../system/include/cmsis/core_cm3.h **** #endif
 188:../system/include/cmsis/core_cm3.h **** 
 189:../system/include/cmsis/core_cm3.h **** /* check device defines and use defaults */
 190:../system/include/cmsis/core_cm3.h **** #if defined __CHECK_DEVICE_DEFINES
 191:../system/include/cmsis/core_cm3.h ****   #ifndef __CM3_REV
 192:../system/include/cmsis/core_cm3.h ****     #define __CM3_REV               0x0200U
 193:../system/include/cmsis/core_cm3.h ****     #warning "__CM3_REV not defined in device header file; using default!"
 194:../system/include/cmsis/core_cm3.h ****   #endif
 195:../system/include/cmsis/core_cm3.h **** 
 196:../system/include/cmsis/core_cm3.h ****   #ifndef __MPU_PRESENT
 197:../system/include/cmsis/core_cm3.h ****     #define __MPU_PRESENT             0U
 198:../system/include/cmsis/core_cm3.h ****     #warning "__MPU_PRESENT not defined in device header file; using default!"
 199:../system/include/cmsis/core_cm3.h ****   #endif
 200:../system/include/cmsis/core_cm3.h **** 
 201:../system/include/cmsis/core_cm3.h ****   #ifndef __NVIC_PRIO_BITS
 202:../system/include/cmsis/core_cm3.h ****     #define __NVIC_PRIO_BITS          4U
 203:../system/include/cmsis/core_cm3.h ****     #warning "__NVIC_PRIO_BITS not defined in device header file; using default!"
 204:../system/include/cmsis/core_cm3.h ****   #endif
 205:../system/include/cmsis/core_cm3.h **** 
 206:../system/include/cmsis/core_cm3.h ****   #ifndef __Vendor_SysTickConfig
 207:../system/include/cmsis/core_cm3.h ****     #define __Vendor_SysTickConfig    0U
 208:../system/include/cmsis/core_cm3.h ****     #warning "__Vendor_SysTickConfig not defined in device header file; using default!"
 209:../system/include/cmsis/core_cm3.h ****   #endif
 210:../system/include/cmsis/core_cm3.h **** #endif
 211:../system/include/cmsis/core_cm3.h **** 
 212:../system/include/cmsis/core_cm3.h **** /* IO definitions (access restrictions to peripheral registers) */
 213:../system/include/cmsis/core_cm3.h **** /**
 214:../system/include/cmsis/core_cm3.h ****     \defgroup CMSIS_glob_defs CMSIS Global Defines
 215:../system/include/cmsis/core_cm3.h **** 
 216:../system/include/cmsis/core_cm3.h ****     <strong>IO Type Qualifiers</strong> are used
 217:../system/include/cmsis/core_cm3.h ****     \li to specify the access to peripheral variables.
 218:../system/include/cmsis/core_cm3.h ****     \li for automatic generation of peripheral register debug information.
 219:../system/include/cmsis/core_cm3.h **** */
 220:../system/include/cmsis/core_cm3.h **** #ifdef __cplusplus
 221:../system/include/cmsis/core_cm3.h ****   #define   __I     volatile             /*!< Defines 'read only' permissions */
 222:../system/include/cmsis/core_cm3.h **** #else
 223:../system/include/cmsis/core_cm3.h ****   #define   __I     volatile const       /*!< Defines 'read only' permissions */
 224:../system/include/cmsis/core_cm3.h **** #endif
 225:../system/include/cmsis/core_cm3.h **** #define     __O     volatile             /*!< Defines 'write only' permissions */
 226:../system/include/cmsis/core_cm3.h **** #define     __IO    volatile             /*!< Defines 'read / write' permissions */
 227:../system/include/cmsis/core_cm3.h **** 
 228:../system/include/cmsis/core_cm3.h **** /* following defines should be used for structure members */
 229:../system/include/cmsis/core_cm3.h **** #define     __IM     volatile const      /*! Defines 'read only' structure member permissions */
 230:../system/include/cmsis/core_cm3.h **** #define     __OM     volatile            /*! Defines 'write only' structure member permissions */
 231:../system/include/cmsis/core_cm3.h **** #define     __IOM    volatile            /*! Defines 'read / write' structure member permissions */
 232:../system/include/cmsis/core_cm3.h **** 
 233:../system/include/cmsis/core_cm3.h **** /*@} end of group Cortex_M3 */
 234:../system/include/cmsis/core_cm3.h **** 
 235:../system/include/cmsis/core_cm3.h **** 
 236:../system/include/cmsis/core_cm3.h **** 
 237:../system/include/cmsis/core_cm3.h **** /*******************************************************************************
 238:../system/include/cmsis/core_cm3.h ****  *                 Register Abstraction
 239:../system/include/cmsis/core_cm3.h ****   Core Register contain:
 240:../system/include/cmsis/core_cm3.h ****   - Core Register
 241:../system/include/cmsis/core_cm3.h ****   - Core NVIC Register
 242:../system/include/cmsis/core_cm3.h ****   - Core SCB Register
 243:../system/include/cmsis/core_cm3.h ****   - Core SysTick Register
 244:../system/include/cmsis/core_cm3.h ****   - Core Debug Register
 245:../system/include/cmsis/core_cm3.h ****   - Core MPU Register
 246:../system/include/cmsis/core_cm3.h ****  ******************************************************************************/
 247:../system/include/cmsis/core_cm3.h **** /**
 248:../system/include/cmsis/core_cm3.h ****   \defgroup CMSIS_core_register Defines and Type Definitions
 249:../system/include/cmsis/core_cm3.h ****   \brief Type definitions and defines for Cortex-M processor based devices.
 250:../system/include/cmsis/core_cm3.h **** */
 251:../system/include/cmsis/core_cm3.h **** 
 252:../system/include/cmsis/core_cm3.h **** /**
 253:../system/include/cmsis/core_cm3.h ****   \ingroup    CMSIS_core_register
 254:../system/include/cmsis/core_cm3.h ****   \defgroup   CMSIS_CORE  Status and Control Registers
 255:../system/include/cmsis/core_cm3.h ****   \brief      Core Register type definitions.
 256:../system/include/cmsis/core_cm3.h ****   @{
 257:../system/include/cmsis/core_cm3.h ****  */
 258:../system/include/cmsis/core_cm3.h **** 
 259:../system/include/cmsis/core_cm3.h **** /**
 260:../system/include/cmsis/core_cm3.h ****   \brief  Union type to access the Application Program Status Register (APSR).
 261:../system/include/cmsis/core_cm3.h ****  */
 262:../system/include/cmsis/core_cm3.h **** typedef union
 263:../system/include/cmsis/core_cm3.h **** {
 264:../system/include/cmsis/core_cm3.h ****   struct
 265:../system/include/cmsis/core_cm3.h ****   {
 266:../system/include/cmsis/core_cm3.h ****     uint32_t _reserved0:27;              /*!< bit:  0..26  Reserved */
 267:../system/include/cmsis/core_cm3.h ****     uint32_t Q:1;                        /*!< bit:     27  Saturation condition flag */
 268:../system/include/cmsis/core_cm3.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag */
 269:../system/include/cmsis/core_cm3.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag */
 270:../system/include/cmsis/core_cm3.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag */
 271:../system/include/cmsis/core_cm3.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag */
 272:../system/include/cmsis/core_cm3.h ****   } b;                                   /*!< Structure used for bit  access */
 273:../system/include/cmsis/core_cm3.h ****   uint32_t w;                            /*!< Type      used for word access */
 274:../system/include/cmsis/core_cm3.h **** } APSR_Type;
 275:../system/include/cmsis/core_cm3.h **** 
 276:../system/include/cmsis/core_cm3.h **** /* APSR Register Definitions */
 277:../system/include/cmsis/core_cm3.h **** #define APSR_N_Pos                         31U                                            /*!< APSR
 278:../system/include/cmsis/core_cm3.h **** #define APSR_N_Msk                         (1UL << APSR_N_Pos)                            /*!< APSR
 279:../system/include/cmsis/core_cm3.h **** 
 280:../system/include/cmsis/core_cm3.h **** #define APSR_Z_Pos                         30U                                            /*!< APSR
 281:../system/include/cmsis/core_cm3.h **** #define APSR_Z_Msk                         (1UL << APSR_Z_Pos)                            /*!< APSR
 282:../system/include/cmsis/core_cm3.h **** 
 283:../system/include/cmsis/core_cm3.h **** #define APSR_C_Pos                         29U                                            /*!< APSR
 284:../system/include/cmsis/core_cm3.h **** #define APSR_C_Msk                         (1UL << APSR_C_Pos)                            /*!< APSR
 285:../system/include/cmsis/core_cm3.h **** 
 286:../system/include/cmsis/core_cm3.h **** #define APSR_V_Pos                         28U                                            /*!< APSR
 287:../system/include/cmsis/core_cm3.h **** #define APSR_V_Msk                         (1UL << APSR_V_Pos)                            /*!< APSR
 288:../system/include/cmsis/core_cm3.h **** 
 289:../system/include/cmsis/core_cm3.h **** #define APSR_Q_Pos                         27U                                            /*!< APSR
 290:../system/include/cmsis/core_cm3.h **** #define APSR_Q_Msk                         (1UL << APSR_Q_Pos)                            /*!< APSR
 291:../system/include/cmsis/core_cm3.h **** 
 292:../system/include/cmsis/core_cm3.h **** 
 293:../system/include/cmsis/core_cm3.h **** /**
 294:../system/include/cmsis/core_cm3.h ****   \brief  Union type to access the Interrupt Program Status Register (IPSR).
 295:../system/include/cmsis/core_cm3.h ****  */
 296:../system/include/cmsis/core_cm3.h **** typedef union
 297:../system/include/cmsis/core_cm3.h **** {
 298:../system/include/cmsis/core_cm3.h ****   struct
 299:../system/include/cmsis/core_cm3.h ****   {
 300:../system/include/cmsis/core_cm3.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number */
 301:../system/include/cmsis/core_cm3.h ****     uint32_t _reserved0:23;              /*!< bit:  9..31  Reserved */
 302:../system/include/cmsis/core_cm3.h ****   } b;                                   /*!< Structure used for bit  access */
 303:../system/include/cmsis/core_cm3.h ****   uint32_t w;                            /*!< Type      used for word access */
 304:../system/include/cmsis/core_cm3.h **** } IPSR_Type;
 305:../system/include/cmsis/core_cm3.h **** 
 306:../system/include/cmsis/core_cm3.h **** /* IPSR Register Definitions */
 307:../system/include/cmsis/core_cm3.h **** #define IPSR_ISR_Pos                        0U                                            /*!< IPSR
 308:../system/include/cmsis/core_cm3.h **** #define IPSR_ISR_Msk                       (0x1FFUL /*<< IPSR_ISR_Pos*/)                  /*!< IPSR
 309:../system/include/cmsis/core_cm3.h **** 
 310:../system/include/cmsis/core_cm3.h **** 
 311:../system/include/cmsis/core_cm3.h **** /**
 312:../system/include/cmsis/core_cm3.h ****   \brief  Union type to access the Special-Purpose Program Status Registers (xPSR).
 313:../system/include/cmsis/core_cm3.h ****  */
 314:../system/include/cmsis/core_cm3.h **** typedef union
 315:../system/include/cmsis/core_cm3.h **** {
 316:../system/include/cmsis/core_cm3.h ****   struct
 317:../system/include/cmsis/core_cm3.h ****   {
 318:../system/include/cmsis/core_cm3.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number */
 319:../system/include/cmsis/core_cm3.h ****     uint32_t _reserved0:15;              /*!< bit:  9..23  Reserved */
 320:../system/include/cmsis/core_cm3.h ****     uint32_t T:1;                        /*!< bit:     24  Thumb bit        (read 0) */
 321:../system/include/cmsis/core_cm3.h ****     uint32_t IT:2;                       /*!< bit: 25..26  saved IT state   (read 0) */
 322:../system/include/cmsis/core_cm3.h ****     uint32_t Q:1;                        /*!< bit:     27  Saturation condition flag */
 323:../system/include/cmsis/core_cm3.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag */
 324:../system/include/cmsis/core_cm3.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag */
 325:../system/include/cmsis/core_cm3.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag */
 326:../system/include/cmsis/core_cm3.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag */
 327:../system/include/cmsis/core_cm3.h ****   } b;                                   /*!< Structure used for bit  access */
 328:../system/include/cmsis/core_cm3.h ****   uint32_t w;                            /*!< Type      used for word access */
 329:../system/include/cmsis/core_cm3.h **** } xPSR_Type;
 330:../system/include/cmsis/core_cm3.h **** 
 331:../system/include/cmsis/core_cm3.h **** /* xPSR Register Definitions */
 332:../system/include/cmsis/core_cm3.h **** #define xPSR_N_Pos                         31U                                            /*!< xPSR
 333:../system/include/cmsis/core_cm3.h **** #define xPSR_N_Msk                         (1UL << xPSR_N_Pos)                            /*!< xPSR
 334:../system/include/cmsis/core_cm3.h **** 
 335:../system/include/cmsis/core_cm3.h **** #define xPSR_Z_Pos                         30U                                            /*!< xPSR
 336:../system/include/cmsis/core_cm3.h **** #define xPSR_Z_Msk                         (1UL << xPSR_Z_Pos)                            /*!< xPSR
 337:../system/include/cmsis/core_cm3.h **** 
 338:../system/include/cmsis/core_cm3.h **** #define xPSR_C_Pos                         29U                                            /*!< xPSR
 339:../system/include/cmsis/core_cm3.h **** #define xPSR_C_Msk                         (1UL << xPSR_C_Pos)                            /*!< xPSR
 340:../system/include/cmsis/core_cm3.h **** 
 341:../system/include/cmsis/core_cm3.h **** #define xPSR_V_Pos                         28U                                            /*!< xPSR
 342:../system/include/cmsis/core_cm3.h **** #define xPSR_V_Msk                         (1UL << xPSR_V_Pos)                            /*!< xPSR
 343:../system/include/cmsis/core_cm3.h **** 
 344:../system/include/cmsis/core_cm3.h **** #define xPSR_Q_Pos                         27U                                            /*!< xPSR
 345:../system/include/cmsis/core_cm3.h **** #define xPSR_Q_Msk                         (1UL << xPSR_Q_Pos)                            /*!< xPSR
 346:../system/include/cmsis/core_cm3.h **** 
 347:../system/include/cmsis/core_cm3.h **** #define xPSR_IT_Pos                        25U                                            /*!< xPSR
 348:../system/include/cmsis/core_cm3.h **** #define xPSR_IT_Msk                        (3UL << xPSR_IT_Pos)                           /*!< xPSR
 349:../system/include/cmsis/core_cm3.h **** 
 350:../system/include/cmsis/core_cm3.h **** #define xPSR_T_Pos                         24U                                            /*!< xPSR
 351:../system/include/cmsis/core_cm3.h **** #define xPSR_T_Msk                         (1UL << xPSR_T_Pos)                            /*!< xPSR
 352:../system/include/cmsis/core_cm3.h **** 
 353:../system/include/cmsis/core_cm3.h **** #define xPSR_ISR_Pos                        0U                                            /*!< xPSR
 354:../system/include/cmsis/core_cm3.h **** #define xPSR_ISR_Msk                       (0x1FFUL /*<< xPSR_ISR_Pos*/)                  /*!< xPSR
 355:../system/include/cmsis/core_cm3.h **** 
 356:../system/include/cmsis/core_cm3.h **** 
 357:../system/include/cmsis/core_cm3.h **** /**
 358:../system/include/cmsis/core_cm3.h ****   \brief  Union type to access the Control Registers (CONTROL).
 359:../system/include/cmsis/core_cm3.h ****  */
 360:../system/include/cmsis/core_cm3.h **** typedef union
 361:../system/include/cmsis/core_cm3.h **** {
 362:../system/include/cmsis/core_cm3.h ****   struct
 363:../system/include/cmsis/core_cm3.h ****   {
 364:../system/include/cmsis/core_cm3.h ****     uint32_t nPRIV:1;                    /*!< bit:      0  Execution privilege in Thread mode */
 365:../system/include/cmsis/core_cm3.h ****     uint32_t SPSEL:1;                    /*!< bit:      1  Stack to be used */
 366:../system/include/cmsis/core_cm3.h ****     uint32_t _reserved1:30;              /*!< bit:  2..31  Reserved */
 367:../system/include/cmsis/core_cm3.h ****   } b;                                   /*!< Structure used for bit  access */
 368:../system/include/cmsis/core_cm3.h ****   uint32_t w;                            /*!< Type      used for word access */
 369:../system/include/cmsis/core_cm3.h **** } CONTROL_Type;
 370:../system/include/cmsis/core_cm3.h **** 
 371:../system/include/cmsis/core_cm3.h **** /* CONTROL Register Definitions */
 372:../system/include/cmsis/core_cm3.h **** #define CONTROL_SPSEL_Pos                   1U                                            /*!< CONT
 373:../system/include/cmsis/core_cm3.h **** #define CONTROL_SPSEL_Msk                  (1UL << CONTROL_SPSEL_Pos)                     /*!< CONT
 374:../system/include/cmsis/core_cm3.h **** 
 375:../system/include/cmsis/core_cm3.h **** #define CONTROL_nPRIV_Pos                   0U                                            /*!< CONT
 376:../system/include/cmsis/core_cm3.h **** #define CONTROL_nPRIV_Msk                  (1UL /*<< CONTROL_nPRIV_Pos*/)                 /*!< CONT
 377:../system/include/cmsis/core_cm3.h **** 
 378:../system/include/cmsis/core_cm3.h **** /*@} end of group CMSIS_CORE */
 379:../system/include/cmsis/core_cm3.h **** 
 380:../system/include/cmsis/core_cm3.h **** 
 381:../system/include/cmsis/core_cm3.h **** /**
 382:../system/include/cmsis/core_cm3.h ****   \ingroup    CMSIS_core_register
 383:../system/include/cmsis/core_cm3.h ****   \defgroup   CMSIS_NVIC  Nested Vectored Interrupt Controller (NVIC)
 384:../system/include/cmsis/core_cm3.h ****   \brief      Type definitions for the NVIC Registers
 385:../system/include/cmsis/core_cm3.h ****   @{
 386:../system/include/cmsis/core_cm3.h ****  */
 387:../system/include/cmsis/core_cm3.h **** 
 388:../system/include/cmsis/core_cm3.h **** /**
 389:../system/include/cmsis/core_cm3.h ****   \brief  Structure type to access the Nested Vectored Interrupt Controller (NVIC).
 390:../system/include/cmsis/core_cm3.h ****  */
 391:../system/include/cmsis/core_cm3.h **** typedef struct
 392:../system/include/cmsis/core_cm3.h **** {
 393:../system/include/cmsis/core_cm3.h ****   __IOM uint32_t ISER[8U];               /*!< Offset: 0x000 (R/W)  Interrupt Set Enable Register */
 394:../system/include/cmsis/core_cm3.h ****         uint32_t RESERVED0[24U];
 395:../system/include/cmsis/core_cm3.h ****   __IOM uint32_t ICER[8U];               /*!< Offset: 0x080 (R/W)  Interrupt Clear Enable Register 
 396:../system/include/cmsis/core_cm3.h ****         uint32_t RSERVED1[24U];
 397:../system/include/cmsis/core_cm3.h ****   __IOM uint32_t ISPR[8U];               /*!< Offset: 0x100 (R/W)  Interrupt Set Pending Register *
 398:../system/include/cmsis/core_cm3.h ****         uint32_t RESERVED2[24U];
 399:../system/include/cmsis/core_cm3.h ****   __IOM uint32_t ICPR[8U];               /*!< Offset: 0x180 (R/W)  Interrupt Clear Pending Register
 400:../system/include/cmsis/core_cm3.h ****         uint32_t RESERVED3[24U];
 401:../system/include/cmsis/core_cm3.h ****   __IOM uint32_t IABR[8U];               /*!< Offset: 0x200 (R/W)  Interrupt Active bit Register */
 402:../system/include/cmsis/core_cm3.h ****         uint32_t RESERVED4[56U];
 403:../system/include/cmsis/core_cm3.h ****   __IOM uint8_t  IP[240U];               /*!< Offset: 0x300 (R/W)  Interrupt Priority Register (8Bi
 404:../system/include/cmsis/core_cm3.h ****         uint32_t RESERVED5[644U];
 405:../system/include/cmsis/core_cm3.h ****   __OM  uint32_t STIR;                   /*!< Offset: 0xE00 ( /W)  Software Trigger Interrupt Regis
 406:../system/include/cmsis/core_cm3.h **** }  NVIC_Type;
 407:../system/include/cmsis/core_cm3.h **** 
 408:../system/include/cmsis/core_cm3.h **** /* Software Triggered Interrupt Register Definitions */
 409:../system/include/cmsis/core_cm3.h **** #define NVIC_STIR_INTID_Pos                 0U                                         /*!< STIR: I
 410:../system/include/cmsis/core_cm3.h **** #define NVIC_STIR_INTID_Msk                (0x1FFUL /*<< NVIC_STIR_INTID_Pos*/)        /*!< STIR: I
 411:../system/include/cmsis/core_cm3.h **** 
 412:../system/include/cmsis/core_cm3.h **** /*@} end of group CMSIS_NVIC */
 413:../system/include/cmsis/core_cm3.h **** 
 414:../system/include/cmsis/core_cm3.h **** 
 415:../system/include/cmsis/core_cm3.h **** /**
 416:../system/include/cmsis/core_cm3.h ****   \ingroup  CMSIS_core_register
 417:../system/include/cmsis/core_cm3.h ****   \defgroup CMSIS_SCB     System Control Block (SCB)
 418:../system/include/cmsis/core_cm3.h ****   \brief    Type definitions for the System Control Block Registers
 419:../system/include/cmsis/core_cm3.h ****   @{
 420:../system/include/cmsis/core_cm3.h ****  */
 421:../system/include/cmsis/core_cm3.h **** 
 422:../system/include/cmsis/core_cm3.h **** /**
 423:../system/include/cmsis/core_cm3.h ****   \brief  Structure type to access the System Control Block (SCB).
 424:../system/include/cmsis/core_cm3.h ****  */
 425:../system/include/cmsis/core_cm3.h **** typedef struct
 426:../system/include/cmsis/core_cm3.h **** {
 427:../system/include/cmsis/core_cm3.h ****   __IM  uint32_t CPUID;                  /*!< Offset: 0x000 (R/ )  CPUID Base Register */
 428:../system/include/cmsis/core_cm3.h ****   __IOM uint32_t ICSR;                   /*!< Offset: 0x004 (R/W)  Interrupt Control and State Regi
 429:../system/include/cmsis/core_cm3.h ****   __IOM uint32_t VTOR;                   /*!< Offset: 0x008 (R/W)  Vector Table Offset Register */
 430:../system/include/cmsis/core_cm3.h ****   __IOM uint32_t AIRCR;                  /*!< Offset: 0x00C (R/W)  Application Interrupt and Reset 
 431:../system/include/cmsis/core_cm3.h ****   __IOM uint32_t SCR;                    /*!< Offset: 0x010 (R/W)  System Control Register */
 432:../system/include/cmsis/core_cm3.h ****   __IOM uint32_t CCR;                    /*!< Offset: 0x014 (R/W)  Configuration Control Register *
 433:../system/include/cmsis/core_cm3.h ****   __IOM uint8_t  SHP[12U];               /*!< Offset: 0x018 (R/W)  System Handlers Priority Registe
 434:../system/include/cmsis/core_cm3.h ****   __IOM uint32_t SHCSR;                  /*!< Offset: 0x024 (R/W)  System Handler Control and State
 435:../system/include/cmsis/core_cm3.h ****   __IOM uint32_t CFSR;                   /*!< Offset: 0x028 (R/W)  Configurable Fault Status Regist
 436:../system/include/cmsis/core_cm3.h ****   __IOM uint32_t HFSR;                   /*!< Offset: 0x02C (R/W)  HardFault Status Register */
 437:../system/include/cmsis/core_cm3.h ****   __IOM uint32_t DFSR;                   /*!< Offset: 0x030 (R/W)  Debug Fault Status Register */
 438:../system/include/cmsis/core_cm3.h ****   __IOM uint32_t MMFAR;                  /*!< Offset: 0x034 (R/W)  MemManage Fault Address Register
 439:../system/include/cmsis/core_cm3.h ****   __IOM uint32_t BFAR;                   /*!< Offset: 0x038 (R/W)  BusFault Address Register */
 440:../system/include/cmsis/core_cm3.h ****   __IOM uint32_t AFSR;                   /*!< Offset: 0x03C (R/W)  Auxiliary Fault Status Register 
 441:../system/include/cmsis/core_cm3.h ****   __IM  uint32_t PFR[2U];                /*!< Offset: 0x040 (R/ )  Processor Feature Register */
 442:../system/include/cmsis/core_cm3.h ****   __IM  uint32_t DFR;                    /*!< Offset: 0x048 (R/ )  Debug Feature Register */
 443:../system/include/cmsis/core_cm3.h ****   __IM  uint32_t ADR;                    /*!< Offset: 0x04C (R/ )  Auxiliary Feature Register */
 444:../system/include/cmsis/core_cm3.h ****   __IM  uint32_t MMFR[4U];               /*!< Offset: 0x050 (R/ )  Memory Model Feature Register */
 445:../system/include/cmsis/core_cm3.h ****   __IM  uint32_t ISAR[5U];               /*!< Offset: 0x060 (R/ )  Instruction Set Attributes Regis
 446:../system/include/cmsis/core_cm3.h ****         uint32_t RESERVED0[5U];
 447:../system/include/cmsis/core_cm3.h ****   __IOM uint32_t CPACR;                  /*!< Offset: 0x088 (R/W)  Coprocessor Access Control Regis
 448:../system/include/cmsis/core_cm3.h **** } SCB_Type;
 449:../system/include/cmsis/core_cm3.h **** 
 450:../system/include/cmsis/core_cm3.h **** /* SCB CPUID Register Definitions */
 451:../system/include/cmsis/core_cm3.h **** #define SCB_CPUID_IMPLEMENTER_Pos          24U                                            /*!< SCB 
 452:../system/include/cmsis/core_cm3.h **** #define SCB_CPUID_IMPLEMENTER_Msk          (0xFFUL << SCB_CPUID_IMPLEMENTER_Pos)          /*!< SCB 
 453:../system/include/cmsis/core_cm3.h **** 
 454:../system/include/cmsis/core_cm3.h **** #define SCB_CPUID_VARIANT_Pos              20U                                            /*!< SCB 
 455:../system/include/cmsis/core_cm3.h **** #define SCB_CPUID_VARIANT_Msk              (0xFUL << SCB_CPUID_VARIANT_Pos)               /*!< SCB 
 456:../system/include/cmsis/core_cm3.h **** 
 457:../system/include/cmsis/core_cm3.h **** #define SCB_CPUID_ARCHITECTURE_Pos         16U                                            /*!< SCB 
 458:../system/include/cmsis/core_cm3.h **** #define SCB_CPUID_ARCHITECTURE_Msk         (0xFUL << SCB_CPUID_ARCHITECTURE_Pos)          /*!< SCB 
 459:../system/include/cmsis/core_cm3.h **** 
 460:../system/include/cmsis/core_cm3.h **** #define SCB_CPUID_PARTNO_Pos                4U                                            /*!< SCB 
 461:../system/include/cmsis/core_cm3.h **** #define SCB_CPUID_PARTNO_Msk               (0xFFFUL << SCB_CPUID_PARTNO_Pos)              /*!< SCB 
 462:../system/include/cmsis/core_cm3.h **** 
 463:../system/include/cmsis/core_cm3.h **** #define SCB_CPUID_REVISION_Pos              0U                                            /*!< SCB 
 464:../system/include/cmsis/core_cm3.h **** #define SCB_CPUID_REVISION_Msk             (0xFUL /*<< SCB_CPUID_REVISION_Pos*/)          /*!< SCB 
 465:../system/include/cmsis/core_cm3.h **** 
 466:../system/include/cmsis/core_cm3.h **** /* SCB Interrupt Control State Register Definitions */
 467:../system/include/cmsis/core_cm3.h **** #define SCB_ICSR_NMIPENDSET_Pos            31U                                            /*!< SCB 
 468:../system/include/cmsis/core_cm3.h **** #define SCB_ICSR_NMIPENDSET_Msk            (1UL << SCB_ICSR_NMIPENDSET_Pos)               /*!< SCB 
 469:../system/include/cmsis/core_cm3.h **** 
 470:../system/include/cmsis/core_cm3.h **** #define SCB_ICSR_PENDSVSET_Pos             28U                                            /*!< SCB 
 471:../system/include/cmsis/core_cm3.h **** #define SCB_ICSR_PENDSVSET_Msk             (1UL << SCB_ICSR_PENDSVSET_Pos)                /*!< SCB 
 472:../system/include/cmsis/core_cm3.h **** 
 473:../system/include/cmsis/core_cm3.h **** #define SCB_ICSR_PENDSVCLR_Pos             27U                                            /*!< SCB 
 474:../system/include/cmsis/core_cm3.h **** #define SCB_ICSR_PENDSVCLR_Msk             (1UL << SCB_ICSR_PENDSVCLR_Pos)                /*!< SCB 
 475:../system/include/cmsis/core_cm3.h **** 
 476:../system/include/cmsis/core_cm3.h **** #define SCB_ICSR_PENDSTSET_Pos             26U                                            /*!< SCB 
 477:../system/include/cmsis/core_cm3.h **** #define SCB_ICSR_PENDSTSET_Msk             (1UL << SCB_ICSR_PENDSTSET_Pos)                /*!< SCB 
 478:../system/include/cmsis/core_cm3.h **** 
 479:../system/include/cmsis/core_cm3.h **** #define SCB_ICSR_PENDSTCLR_Pos             25U                                            /*!< SCB 
 480:../system/include/cmsis/core_cm3.h **** #define SCB_ICSR_PENDSTCLR_Msk             (1UL << SCB_ICSR_PENDSTCLR_Pos)                /*!< SCB 
 481:../system/include/cmsis/core_cm3.h **** 
 482:../system/include/cmsis/core_cm3.h **** #define SCB_ICSR_ISRPREEMPT_Pos            23U                                            /*!< SCB 
 483:../system/include/cmsis/core_cm3.h **** #define SCB_ICSR_ISRPREEMPT_Msk            (1UL << SCB_ICSR_ISRPREEMPT_Pos)               /*!< SCB 
 484:../system/include/cmsis/core_cm3.h **** 
 485:../system/include/cmsis/core_cm3.h **** #define SCB_ICSR_ISRPENDING_Pos            22U                                            /*!< SCB 
 486:../system/include/cmsis/core_cm3.h **** #define SCB_ICSR_ISRPENDING_Msk            (1UL << SCB_ICSR_ISRPENDING_Pos)               /*!< SCB 
 487:../system/include/cmsis/core_cm3.h **** 
 488:../system/include/cmsis/core_cm3.h **** #define SCB_ICSR_VECTPENDING_Pos           12U                                            /*!< SCB 
 489:../system/include/cmsis/core_cm3.h **** #define SCB_ICSR_VECTPENDING_Msk           (0x1FFUL << SCB_ICSR_VECTPENDING_Pos)          /*!< SCB 
 490:../system/include/cmsis/core_cm3.h **** 
 491:../system/include/cmsis/core_cm3.h **** #define SCB_ICSR_RETTOBASE_Pos             11U                                            /*!< SCB 
 492:../system/include/cmsis/core_cm3.h **** #define SCB_ICSR_RETTOBASE_Msk             (1UL << SCB_ICSR_RETTOBASE_Pos)                /*!< SCB 
 493:../system/include/cmsis/core_cm3.h **** 
 494:../system/include/cmsis/core_cm3.h **** #define SCB_ICSR_VECTACTIVE_Pos             0U                                            /*!< SCB 
 495:../system/include/cmsis/core_cm3.h **** #define SCB_ICSR_VECTACTIVE_Msk            (0x1FFUL /*<< SCB_ICSR_VECTACTIVE_Pos*/)       /*!< SCB 
 496:../system/include/cmsis/core_cm3.h **** 
 497:../system/include/cmsis/core_cm3.h **** /* SCB Vector Table Offset Register Definitions */
 498:../system/include/cmsis/core_cm3.h **** #if (__CM3_REV < 0x0201U)                   /* core r2p1 */
 499:../system/include/cmsis/core_cm3.h **** #define SCB_VTOR_TBLBASE_Pos               29U                                            /*!< SCB 
 500:../system/include/cmsis/core_cm3.h **** #define SCB_VTOR_TBLBASE_Msk               (1UL << SCB_VTOR_TBLBASE_Pos)                  /*!< SCB 
 501:../system/include/cmsis/core_cm3.h **** 
 502:../system/include/cmsis/core_cm3.h **** #define SCB_VTOR_TBLOFF_Pos                 7U                                            /*!< SCB 
 503:../system/include/cmsis/core_cm3.h **** #define SCB_VTOR_TBLOFF_Msk                (0x3FFFFFUL << SCB_VTOR_TBLOFF_Pos)            /*!< SCB 
 504:../system/include/cmsis/core_cm3.h **** #else
 505:../system/include/cmsis/core_cm3.h **** #define SCB_VTOR_TBLOFF_Pos                 7U                                            /*!< SCB 
 506:../system/include/cmsis/core_cm3.h **** #define SCB_VTOR_TBLOFF_Msk                (0x1FFFFFFUL << SCB_VTOR_TBLOFF_Pos)           /*!< SCB 
 507:../system/include/cmsis/core_cm3.h **** #endif
 508:../system/include/cmsis/core_cm3.h **** 
 509:../system/include/cmsis/core_cm3.h **** /* SCB Application Interrupt and Reset Control Register Definitions */
 510:../system/include/cmsis/core_cm3.h **** #define SCB_AIRCR_VECTKEY_Pos              16U                                            /*!< SCB 
 511:../system/include/cmsis/core_cm3.h **** #define SCB_AIRCR_VECTKEY_Msk              (0xFFFFUL << SCB_AIRCR_VECTKEY_Pos)            /*!< SCB 
 512:../system/include/cmsis/core_cm3.h **** 
 513:../system/include/cmsis/core_cm3.h **** #define SCB_AIRCR_VECTKEYSTAT_Pos          16U                                            /*!< SCB 
 514:../system/include/cmsis/core_cm3.h **** #define SCB_AIRCR_VECTKEYSTAT_Msk          (0xFFFFUL << SCB_AIRCR_VECTKEYSTAT_Pos)        /*!< SCB 
 515:../system/include/cmsis/core_cm3.h **** 
 516:../system/include/cmsis/core_cm3.h **** #define SCB_AIRCR_ENDIANESS_Pos            15U                                            /*!< SCB 
 517:../system/include/cmsis/core_cm3.h **** #define SCB_AIRCR_ENDIANESS_Msk            (1UL << SCB_AIRCR_ENDIANESS_Pos)               /*!< SCB 
 518:../system/include/cmsis/core_cm3.h **** 
 519:../system/include/cmsis/core_cm3.h **** #define SCB_AIRCR_PRIGROUP_Pos              8U                                            /*!< SCB 
 520:../system/include/cmsis/core_cm3.h **** #define SCB_AIRCR_PRIGROUP_Msk             (7UL << SCB_AIRCR_PRIGROUP_Pos)                /*!< SCB 
 521:../system/include/cmsis/core_cm3.h **** 
 522:../system/include/cmsis/core_cm3.h **** #define SCB_AIRCR_SYSRESETREQ_Pos           2U                                            /*!< SCB 
 523:../system/include/cmsis/core_cm3.h **** #define SCB_AIRCR_SYSRESETREQ_Msk          (1UL << SCB_AIRCR_SYSRESETREQ_Pos)             /*!< SCB 
 524:../system/include/cmsis/core_cm3.h **** 
 525:../system/include/cmsis/core_cm3.h **** #define SCB_AIRCR_VECTCLRACTIVE_Pos         1U                                            /*!< SCB 
 526:../system/include/cmsis/core_cm3.h **** #define SCB_AIRCR_VECTCLRACTIVE_Msk        (1UL << SCB_AIRCR_VECTCLRACTIVE_Pos)           /*!< SCB 
 527:../system/include/cmsis/core_cm3.h **** 
 528:../system/include/cmsis/core_cm3.h **** #define SCB_AIRCR_VECTRESET_Pos             0U                                            /*!< SCB 
 529:../system/include/cmsis/core_cm3.h **** #define SCB_AIRCR_VECTRESET_Msk            (1UL /*<< SCB_AIRCR_VECTRESET_Pos*/)           /*!< SCB 
 530:../system/include/cmsis/core_cm3.h **** 
 531:../system/include/cmsis/core_cm3.h **** /* SCB System Control Register Definitions */
 532:../system/include/cmsis/core_cm3.h **** #define SCB_SCR_SEVONPEND_Pos               4U                                            /*!< SCB 
 533:../system/include/cmsis/core_cm3.h **** #define SCB_SCR_SEVONPEND_Msk              (1UL << SCB_SCR_SEVONPEND_Pos)                 /*!< SCB 
 534:../system/include/cmsis/core_cm3.h **** 
 535:../system/include/cmsis/core_cm3.h **** #define SCB_SCR_SLEEPDEEP_Pos               2U                                            /*!< SCB 
 536:../system/include/cmsis/core_cm3.h **** #define SCB_SCR_SLEEPDEEP_Msk              (1UL << SCB_SCR_SLEEPDEEP_Pos)                 /*!< SCB 
 537:../system/include/cmsis/core_cm3.h **** 
 538:../system/include/cmsis/core_cm3.h **** #define SCB_SCR_SLEEPONEXIT_Pos             1U                                            /*!< SCB 
 539:../system/include/cmsis/core_cm3.h **** #define SCB_SCR_SLEEPONEXIT_Msk            (1UL << SCB_SCR_SLEEPONEXIT_Pos)               /*!< SCB 
 540:../system/include/cmsis/core_cm3.h **** 
 541:../system/include/cmsis/core_cm3.h **** /* SCB Configuration Control Register Definitions */
 542:../system/include/cmsis/core_cm3.h **** #define SCB_CCR_STKALIGN_Pos                9U                                            /*!< SCB 
 543:../system/include/cmsis/core_cm3.h **** #define SCB_CCR_STKALIGN_Msk               (1UL << SCB_CCR_STKALIGN_Pos)                  /*!< SCB 
 544:../system/include/cmsis/core_cm3.h **** 
 545:../system/include/cmsis/core_cm3.h **** #define SCB_CCR_BFHFNMIGN_Pos               8U                                            /*!< SCB 
 546:../system/include/cmsis/core_cm3.h **** #define SCB_CCR_BFHFNMIGN_Msk              (1UL << SCB_CCR_BFHFNMIGN_Pos)                 /*!< SCB 
 547:../system/include/cmsis/core_cm3.h **** 
 548:../system/include/cmsis/core_cm3.h **** #define SCB_CCR_DIV_0_TRP_Pos               4U                                            /*!< SCB 
 549:../system/include/cmsis/core_cm3.h **** #define SCB_CCR_DIV_0_TRP_Msk              (1UL << SCB_CCR_DIV_0_TRP_Pos)                 /*!< SCB 
 550:../system/include/cmsis/core_cm3.h **** 
 551:../system/include/cmsis/core_cm3.h **** #define SCB_CCR_UNALIGN_TRP_Pos             3U                                            /*!< SCB 
 552:../system/include/cmsis/core_cm3.h **** #define SCB_CCR_UNALIGN_TRP_Msk            (1UL << SCB_CCR_UNALIGN_TRP_Pos)               /*!< SCB 
 553:../system/include/cmsis/core_cm3.h **** 
 554:../system/include/cmsis/core_cm3.h **** #define SCB_CCR_USERSETMPEND_Pos            1U                                            /*!< SCB 
 555:../system/include/cmsis/core_cm3.h **** #define SCB_CCR_USERSETMPEND_Msk           (1UL << SCB_CCR_USERSETMPEND_Pos)              /*!< SCB 
 556:../system/include/cmsis/core_cm3.h **** 
 557:../system/include/cmsis/core_cm3.h **** #define SCB_CCR_NONBASETHRDENA_Pos          0U                                            /*!< SCB 
 558:../system/include/cmsis/core_cm3.h **** #define SCB_CCR_NONBASETHRDENA_Msk         (1UL /*<< SCB_CCR_NONBASETHRDENA_Pos*/)        /*!< SCB 
 559:../system/include/cmsis/core_cm3.h **** 
 560:../system/include/cmsis/core_cm3.h **** /* SCB System Handler Control and State Register Definitions */
 561:../system/include/cmsis/core_cm3.h **** #define SCB_SHCSR_USGFAULTENA_Pos          18U                                            /*!< SCB 
 562:../system/include/cmsis/core_cm3.h **** #define SCB_SHCSR_USGFAULTENA_Msk          (1UL << SCB_SHCSR_USGFAULTENA_Pos)             /*!< SCB 
 563:../system/include/cmsis/core_cm3.h **** 
 564:../system/include/cmsis/core_cm3.h **** #define SCB_SHCSR_BUSFAULTENA_Pos          17U                                            /*!< SCB 
 565:../system/include/cmsis/core_cm3.h **** #define SCB_SHCSR_BUSFAULTENA_Msk          (1UL << SCB_SHCSR_BUSFAULTENA_Pos)             /*!< SCB 
 566:../system/include/cmsis/core_cm3.h **** 
 567:../system/include/cmsis/core_cm3.h **** #define SCB_SHCSR_MEMFAULTENA_Pos          16U                                            /*!< SCB 
 568:../system/include/cmsis/core_cm3.h **** #define SCB_SHCSR_MEMFAULTENA_Msk          (1UL << SCB_SHCSR_MEMFAULTENA_Pos)             /*!< SCB 
 569:../system/include/cmsis/core_cm3.h **** 
 570:../system/include/cmsis/core_cm3.h **** #define SCB_SHCSR_SVCALLPENDED_Pos         15U                                            /*!< SCB 
 571:../system/include/cmsis/core_cm3.h **** #define SCB_SHCSR_SVCALLPENDED_Msk         (1UL << SCB_SHCSR_SVCALLPENDED_Pos)            /*!< SCB 
 572:../system/include/cmsis/core_cm3.h **** 
 573:../system/include/cmsis/core_cm3.h **** #define SCB_SHCSR_BUSFAULTPENDED_Pos       14U                                            /*!< SCB 
 574:../system/include/cmsis/core_cm3.h **** #define SCB_SHCSR_BUSFAULTPENDED_Msk       (1UL << SCB_SHCSR_BUSFAULTPENDED_Pos)          /*!< SCB 
 575:../system/include/cmsis/core_cm3.h **** 
 576:../system/include/cmsis/core_cm3.h **** #define SCB_SHCSR_MEMFAULTPENDED_Pos       13U                                            /*!< SCB 
 577:../system/include/cmsis/core_cm3.h **** #define SCB_SHCSR_MEMFAULTPENDED_Msk       (1UL << SCB_SHCSR_MEMFAULTPENDED_Pos)          /*!< SCB 
 578:../system/include/cmsis/core_cm3.h **** 
 579:../system/include/cmsis/core_cm3.h **** #define SCB_SHCSR_USGFAULTPENDED_Pos       12U                                            /*!< SCB 
 580:../system/include/cmsis/core_cm3.h **** #define SCB_SHCSR_USGFAULTPENDED_Msk       (1UL << SCB_SHCSR_USGFAULTPENDED_Pos)          /*!< SCB 
 581:../system/include/cmsis/core_cm3.h **** 
 582:../system/include/cmsis/core_cm3.h **** #define SCB_SHCSR_SYSTICKACT_Pos           11U                                            /*!< SCB 
 583:../system/include/cmsis/core_cm3.h **** #define SCB_SHCSR_SYSTICKACT_Msk           (1UL << SCB_SHCSR_SYSTICKACT_Pos)              /*!< SCB 
 584:../system/include/cmsis/core_cm3.h **** 
 585:../system/include/cmsis/core_cm3.h **** #define SCB_SHCSR_PENDSVACT_Pos            10U                                            /*!< SCB 
 586:../system/include/cmsis/core_cm3.h **** #define SCB_SHCSR_PENDSVACT_Msk            (1UL << SCB_SHCSR_PENDSVACT_Pos)               /*!< SCB 
 587:../system/include/cmsis/core_cm3.h **** 
 588:../system/include/cmsis/core_cm3.h **** #define SCB_SHCSR_MONITORACT_Pos            8U                                            /*!< SCB 
 589:../system/include/cmsis/core_cm3.h **** #define SCB_SHCSR_MONITORACT_Msk           (1UL << SCB_SHCSR_MONITORACT_Pos)              /*!< SCB 
 590:../system/include/cmsis/core_cm3.h **** 
 591:../system/include/cmsis/core_cm3.h **** #define SCB_SHCSR_SVCALLACT_Pos             7U                                            /*!< SCB 
 592:../system/include/cmsis/core_cm3.h **** #define SCB_SHCSR_SVCALLACT_Msk            (1UL << SCB_SHCSR_SVCALLACT_Pos)               /*!< SCB 
 593:../system/include/cmsis/core_cm3.h **** 
 594:../system/include/cmsis/core_cm3.h **** #define SCB_SHCSR_USGFAULTACT_Pos           3U                                            /*!< SCB 
 595:../system/include/cmsis/core_cm3.h **** #define SCB_SHCSR_USGFAULTACT_Msk          (1UL << SCB_SHCSR_USGFAULTACT_Pos)             /*!< SCB 
 596:../system/include/cmsis/core_cm3.h **** 
 597:../system/include/cmsis/core_cm3.h **** #define SCB_SHCSR_BUSFAULTACT_Pos           1U                                            /*!< SCB 
 598:../system/include/cmsis/core_cm3.h **** #define SCB_SHCSR_BUSFAULTACT_Msk          (1UL << SCB_SHCSR_BUSFAULTACT_Pos)             /*!< SCB 
 599:../system/include/cmsis/core_cm3.h **** 
 600:../system/include/cmsis/core_cm3.h **** #define SCB_SHCSR_MEMFAULTACT_Pos           0U                                            /*!< SCB 
 601:../system/include/cmsis/core_cm3.h **** #define SCB_SHCSR_MEMFAULTACT_Msk          (1UL /*<< SCB_SHCSR_MEMFAULTACT_Pos*/)         /*!< SCB 
 602:../system/include/cmsis/core_cm3.h **** 
 603:../system/include/cmsis/core_cm3.h **** /* SCB Configurable Fault Status Register Definitions */
 604:../system/include/cmsis/core_cm3.h **** #define SCB_CFSR_USGFAULTSR_Pos            16U                                            /*!< SCB 
 605:../system/include/cmsis/core_cm3.h **** #define SCB_CFSR_USGFAULTSR_Msk            (0xFFFFUL << SCB_CFSR_USGFAULTSR_Pos)          /*!< SCB 
 606:../system/include/cmsis/core_cm3.h **** 
 607:../system/include/cmsis/core_cm3.h **** #define SCB_CFSR_BUSFAULTSR_Pos             8U                                            /*!< SCB 
 608:../system/include/cmsis/core_cm3.h **** #define SCB_CFSR_BUSFAULTSR_Msk            (0xFFUL << SCB_CFSR_BUSFAULTSR_Pos)            /*!< SCB 
 609:../system/include/cmsis/core_cm3.h **** 
 610:../system/include/cmsis/core_cm3.h **** #define SCB_CFSR_MEMFAULTSR_Pos             0U                                            /*!< SCB 
 611:../system/include/cmsis/core_cm3.h **** #define SCB_CFSR_MEMFAULTSR_Msk            (0xFFUL /*<< SCB_CFSR_MEMFAULTSR_Pos*/)        /*!< SCB 
 612:../system/include/cmsis/core_cm3.h **** 
 613:../system/include/cmsis/core_cm3.h **** /* SCB Hard Fault Status Register Definitions */
 614:../system/include/cmsis/core_cm3.h **** #define SCB_HFSR_DEBUGEVT_Pos              31U                                            /*!< SCB 
 615:../system/include/cmsis/core_cm3.h **** #define SCB_HFSR_DEBUGEVT_Msk              (1UL << SCB_HFSR_DEBUGEVT_Pos)                 /*!< SCB 
 616:../system/include/cmsis/core_cm3.h **** 
 617:../system/include/cmsis/core_cm3.h **** #define SCB_HFSR_FORCED_Pos                30U                                            /*!< SCB 
 618:../system/include/cmsis/core_cm3.h **** #define SCB_HFSR_FORCED_Msk                (1UL << SCB_HFSR_FORCED_Pos)                   /*!< SCB 
 619:../system/include/cmsis/core_cm3.h **** 
 620:../system/include/cmsis/core_cm3.h **** #define SCB_HFSR_VECTTBL_Pos                1U                                            /*!< SCB 
 621:../system/include/cmsis/core_cm3.h **** #define SCB_HFSR_VECTTBL_Msk               (1UL << SCB_HFSR_VECTTBL_Pos)                  /*!< SCB 
 622:../system/include/cmsis/core_cm3.h **** 
 623:../system/include/cmsis/core_cm3.h **** /* SCB Debug Fault Status Register Definitions */
 624:../system/include/cmsis/core_cm3.h **** #define SCB_DFSR_EXTERNAL_Pos               4U                                            /*!< SCB 
 625:../system/include/cmsis/core_cm3.h **** #define SCB_DFSR_EXTERNAL_Msk              (1UL << SCB_DFSR_EXTERNAL_Pos)                 /*!< SCB 
 626:../system/include/cmsis/core_cm3.h **** 
 627:../system/include/cmsis/core_cm3.h **** #define SCB_DFSR_VCATCH_Pos                 3U                                            /*!< SCB 
 628:../system/include/cmsis/core_cm3.h **** #define SCB_DFSR_VCATCH_Msk                (1UL << SCB_DFSR_VCATCH_Pos)                   /*!< SCB 
 629:../system/include/cmsis/core_cm3.h **** 
 630:../system/include/cmsis/core_cm3.h **** #define SCB_DFSR_DWTTRAP_Pos                2U                                            /*!< SCB 
 631:../system/include/cmsis/core_cm3.h **** #define SCB_DFSR_DWTTRAP_Msk               (1UL << SCB_DFSR_DWTTRAP_Pos)                  /*!< SCB 
 632:../system/include/cmsis/core_cm3.h **** 
 633:../system/include/cmsis/core_cm3.h **** #define SCB_DFSR_BKPT_Pos                   1U                                            /*!< SCB 
 634:../system/include/cmsis/core_cm3.h **** #define SCB_DFSR_BKPT_Msk                  (1UL << SCB_DFSR_BKPT_Pos)                     /*!< SCB 
 635:../system/include/cmsis/core_cm3.h **** 
 636:../system/include/cmsis/core_cm3.h **** #define SCB_DFSR_HALTED_Pos                 0U                                            /*!< SCB 
 637:../system/include/cmsis/core_cm3.h **** #define SCB_DFSR_HALTED_Msk                (1UL /*<< SCB_DFSR_HALTED_Pos*/)               /*!< SCB 
 638:../system/include/cmsis/core_cm3.h **** 
 639:../system/include/cmsis/core_cm3.h **** /*@} end of group CMSIS_SCB */
 640:../system/include/cmsis/core_cm3.h **** 
 641:../system/include/cmsis/core_cm3.h **** 
 642:../system/include/cmsis/core_cm3.h **** /**
 643:../system/include/cmsis/core_cm3.h ****   \ingroup  CMSIS_core_register
 644:../system/include/cmsis/core_cm3.h ****   \defgroup CMSIS_SCnSCB System Controls not in SCB (SCnSCB)
 645:../system/include/cmsis/core_cm3.h ****   \brief    Type definitions for the System Control and ID Register not in the SCB
 646:../system/include/cmsis/core_cm3.h ****   @{
 647:../system/include/cmsis/core_cm3.h ****  */
 648:../system/include/cmsis/core_cm3.h **** 
 649:../system/include/cmsis/core_cm3.h **** /**
 650:../system/include/cmsis/core_cm3.h ****   \brief  Structure type to access the System Control and ID Register not in the SCB.
 651:../system/include/cmsis/core_cm3.h ****  */
 652:../system/include/cmsis/core_cm3.h **** typedef struct
 653:../system/include/cmsis/core_cm3.h **** {
 654:../system/include/cmsis/core_cm3.h ****         uint32_t RESERVED0[1U];
 655:../system/include/cmsis/core_cm3.h ****   __IM  uint32_t ICTR;                   /*!< Offset: 0x004 (R/ )  Interrupt Controller Type Regist
 656:../system/include/cmsis/core_cm3.h **** #if ((defined __CM3_REV) && (__CM3_REV >= 0x200U))
 657:../system/include/cmsis/core_cm3.h ****   __IOM uint32_t ACTLR;                  /*!< Offset: 0x008 (R/W)  Auxiliary Control Register */
 658:../system/include/cmsis/core_cm3.h **** #else
 659:../system/include/cmsis/core_cm3.h ****         uint32_t RESERVED1[1U];
 660:../system/include/cmsis/core_cm3.h **** #endif
 661:../system/include/cmsis/core_cm3.h **** } SCnSCB_Type;
 662:../system/include/cmsis/core_cm3.h **** 
 663:../system/include/cmsis/core_cm3.h **** /* Interrupt Controller Type Register Definitions */
 664:../system/include/cmsis/core_cm3.h **** #define SCnSCB_ICTR_INTLINESNUM_Pos         0U                                         /*!< ICTR: I
 665:../system/include/cmsis/core_cm3.h **** #define SCnSCB_ICTR_INTLINESNUM_Msk        (0xFUL /*<< SCnSCB_ICTR_INTLINESNUM_Pos*/)  /*!< ICTR: I
 666:../system/include/cmsis/core_cm3.h **** 
 667:../system/include/cmsis/core_cm3.h **** /* Auxiliary Control Register Definitions */
 668:../system/include/cmsis/core_cm3.h **** 
 669:../system/include/cmsis/core_cm3.h **** #define SCnSCB_ACTLR_DISFOLD_Pos            2U                                         /*!< ACTLR: 
 670:../system/include/cmsis/core_cm3.h **** #define SCnSCB_ACTLR_DISFOLD_Msk           (1UL << SCnSCB_ACTLR_DISFOLD_Pos)           /*!< ACTLR: 
 671:../system/include/cmsis/core_cm3.h **** 
 672:../system/include/cmsis/core_cm3.h **** #define SCnSCB_ACTLR_DISDEFWBUF_Pos         1U                                         /*!< ACTLR: 
 673:../system/include/cmsis/core_cm3.h **** #define SCnSCB_ACTLR_DISDEFWBUF_Msk        (1UL << SCnSCB_ACTLR_DISDEFWBUF_Pos)        /*!< ACTLR: 
 674:../system/include/cmsis/core_cm3.h **** 
 675:../system/include/cmsis/core_cm3.h **** #define SCnSCB_ACTLR_DISMCYCINT_Pos         0U                                         /*!< ACTLR: 
 676:../system/include/cmsis/core_cm3.h **** #define SCnSCB_ACTLR_DISMCYCINT_Msk        (1UL /*<< SCnSCB_ACTLR_DISMCYCINT_Pos*/)    /*!< ACTLR: 
 677:../system/include/cmsis/core_cm3.h **** 
 678:../system/include/cmsis/core_cm3.h **** /*@} end of group CMSIS_SCnotSCB */
 679:../system/include/cmsis/core_cm3.h **** 
 680:../system/include/cmsis/core_cm3.h **** 
 681:../system/include/cmsis/core_cm3.h **** /**
 682:../system/include/cmsis/core_cm3.h ****   \ingroup  CMSIS_core_register
 683:../system/include/cmsis/core_cm3.h ****   \defgroup CMSIS_SysTick     System Tick Timer (SysTick)
 684:../system/include/cmsis/core_cm3.h ****   \brief    Type definitions for the System Timer Registers.
 685:../system/include/cmsis/core_cm3.h ****   @{
 686:../system/include/cmsis/core_cm3.h ****  */
 687:../system/include/cmsis/core_cm3.h **** 
 688:../system/include/cmsis/core_cm3.h **** /**
 689:../system/include/cmsis/core_cm3.h ****   \brief  Structure type to access the System Timer (SysTick).
 690:../system/include/cmsis/core_cm3.h ****  */
 691:../system/include/cmsis/core_cm3.h **** typedef struct
 692:../system/include/cmsis/core_cm3.h **** {
 693:../system/include/cmsis/core_cm3.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x000 (R/W)  SysTick Control and Status Regis
 694:../system/include/cmsis/core_cm3.h ****   __IOM uint32_t LOAD;                   /*!< Offset: 0x004 (R/W)  SysTick Reload Value Register */
 695:../system/include/cmsis/core_cm3.h ****   __IOM uint32_t VAL;                    /*!< Offset: 0x008 (R/W)  SysTick Current Value Register *
 696:../system/include/cmsis/core_cm3.h ****   __IM  uint32_t CALIB;                  /*!< Offset: 0x00C (R/ )  SysTick Calibration Register */
 697:../system/include/cmsis/core_cm3.h **** } SysTick_Type;
 698:../system/include/cmsis/core_cm3.h **** 
 699:../system/include/cmsis/core_cm3.h **** /* SysTick Control / Status Register Definitions */
 700:../system/include/cmsis/core_cm3.h **** #define SysTick_CTRL_COUNTFLAG_Pos         16U                                            /*!< SysT
 701:../system/include/cmsis/core_cm3.h **** #define SysTick_CTRL_COUNTFLAG_Msk         (1UL << SysTick_CTRL_COUNTFLAG_Pos)            /*!< SysT
 702:../system/include/cmsis/core_cm3.h **** 
 703:../system/include/cmsis/core_cm3.h **** #define SysTick_CTRL_CLKSOURCE_Pos          2U                                            /*!< SysT
 704:../system/include/cmsis/core_cm3.h **** #define SysTick_CTRL_CLKSOURCE_Msk         (1UL << SysTick_CTRL_CLKSOURCE_Pos)            /*!< SysT
 705:../system/include/cmsis/core_cm3.h **** 
 706:../system/include/cmsis/core_cm3.h **** #define SysTick_CTRL_TICKINT_Pos            1U                                            /*!< SysT
 707:../system/include/cmsis/core_cm3.h **** #define SysTick_CTRL_TICKINT_Msk           (1UL << SysTick_CTRL_TICKINT_Pos)              /*!< SysT
 708:../system/include/cmsis/core_cm3.h **** 
 709:../system/include/cmsis/core_cm3.h **** #define SysTick_CTRL_ENABLE_Pos             0U                                            /*!< SysT
 710:../system/include/cmsis/core_cm3.h **** #define SysTick_CTRL_ENABLE_Msk            (1UL /*<< SysTick_CTRL_ENABLE_Pos*/)           /*!< SysT
 711:../system/include/cmsis/core_cm3.h **** 
 712:../system/include/cmsis/core_cm3.h **** /* SysTick Reload Register Definitions */
 713:../system/include/cmsis/core_cm3.h **** #define SysTick_LOAD_RELOAD_Pos             0U                                            /*!< SysT
 714:../system/include/cmsis/core_cm3.h **** #define SysTick_LOAD_RELOAD_Msk            (0xFFFFFFUL /*<< SysTick_LOAD_RELOAD_Pos*/)    /*!< SysT
 715:../system/include/cmsis/core_cm3.h **** 
 716:../system/include/cmsis/core_cm3.h **** /* SysTick Current Register Definitions */
 717:../system/include/cmsis/core_cm3.h **** #define SysTick_VAL_CURRENT_Pos             0U                                            /*!< SysT
 718:../system/include/cmsis/core_cm3.h **** #define SysTick_VAL_CURRENT_Msk            (0xFFFFFFUL /*<< SysTick_VAL_CURRENT_Pos*/)    /*!< SysT
 719:../system/include/cmsis/core_cm3.h **** 
 720:../system/include/cmsis/core_cm3.h **** /* SysTick Calibration Register Definitions */
 721:../system/include/cmsis/core_cm3.h **** #define SysTick_CALIB_NOREF_Pos            31U                                            /*!< SysT
 722:../system/include/cmsis/core_cm3.h **** #define SysTick_CALIB_NOREF_Msk            (1UL << SysTick_CALIB_NOREF_Pos)               /*!< SysT
 723:../system/include/cmsis/core_cm3.h **** 
 724:../system/include/cmsis/core_cm3.h **** #define SysTick_CALIB_SKEW_Pos             30U                                            /*!< SysT
 725:../system/include/cmsis/core_cm3.h **** #define SysTick_CALIB_SKEW_Msk             (1UL << SysTick_CALIB_SKEW_Pos)                /*!< SysT
 726:../system/include/cmsis/core_cm3.h **** 
 727:../system/include/cmsis/core_cm3.h **** #define SysTick_CALIB_TENMS_Pos             0U                                            /*!< SysT
 728:../system/include/cmsis/core_cm3.h **** #define SysTick_CALIB_TENMS_Msk            (0xFFFFFFUL /*<< SysTick_CALIB_TENMS_Pos*/)    /*!< SysT
 729:../system/include/cmsis/core_cm3.h **** 
 730:../system/include/cmsis/core_cm3.h **** /*@} end of group CMSIS_SysTick */
 731:../system/include/cmsis/core_cm3.h **** 
 732:../system/include/cmsis/core_cm3.h **** 
 733:../system/include/cmsis/core_cm3.h **** /**
 734:../system/include/cmsis/core_cm3.h ****   \ingroup  CMSIS_core_register
 735:../system/include/cmsis/core_cm3.h ****   \defgroup CMSIS_ITM     Instrumentation Trace Macrocell (ITM)
 736:../system/include/cmsis/core_cm3.h ****   \brief    Type definitions for the Instrumentation Trace Macrocell (ITM)
 737:../system/include/cmsis/core_cm3.h ****   @{
 738:../system/include/cmsis/core_cm3.h ****  */
 739:../system/include/cmsis/core_cm3.h **** 
 740:../system/include/cmsis/core_cm3.h **** /**
 741:../system/include/cmsis/core_cm3.h ****   \brief  Structure type to access the Instrumentation Trace Macrocell Register (ITM).
 742:../system/include/cmsis/core_cm3.h ****  */
 743:../system/include/cmsis/core_cm3.h **** typedef struct
 744:../system/include/cmsis/core_cm3.h **** {
 745:../system/include/cmsis/core_cm3.h ****   __OM  union
 746:../system/include/cmsis/core_cm3.h ****   {
 747:../system/include/cmsis/core_cm3.h ****     __OM  uint8_t    u8;                 /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 8-bit */
 748:../system/include/cmsis/core_cm3.h ****     __OM  uint16_t   u16;                /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 16-bit */
 749:../system/include/cmsis/core_cm3.h ****     __OM  uint32_t   u32;                /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 32-bit */
 750:../system/include/cmsis/core_cm3.h ****   }  PORT [32U];                         /*!< Offset: 0x000 ( /W)  ITM Stimulus Port Registers */
 751:../system/include/cmsis/core_cm3.h ****         uint32_t RESERVED0[864U];
 752:../system/include/cmsis/core_cm3.h ****   __IOM uint32_t TER;                    /*!< Offset: 0xE00 (R/W)  ITM Trace Enable Register */
 753:../system/include/cmsis/core_cm3.h ****         uint32_t RESERVED1[15U];
 754:../system/include/cmsis/core_cm3.h ****   __IOM uint32_t TPR;                    /*!< Offset: 0xE40 (R/W)  ITM Trace Privilege Register */
 755:../system/include/cmsis/core_cm3.h ****         uint32_t RESERVED2[15U];
 756:../system/include/cmsis/core_cm3.h ****   __IOM uint32_t TCR;                    /*!< Offset: 0xE80 (R/W)  ITM Trace Control Register */
 757:../system/include/cmsis/core_cm3.h ****         uint32_t RESERVED3[29U];
 758:../system/include/cmsis/core_cm3.h ****   __OM  uint32_t IWR;                    /*!< Offset: 0xEF8 ( /W)  ITM Integration Write Register *
 759:../system/include/cmsis/core_cm3.h ****   __IM  uint32_t IRR;                    /*!< Offset: 0xEFC (R/ )  ITM Integration Read Register */
 760:../system/include/cmsis/core_cm3.h ****   __IOM uint32_t IMCR;                   /*!< Offset: 0xF00 (R/W)  ITM Integration Mode Control Reg
 761:../system/include/cmsis/core_cm3.h ****         uint32_t RESERVED4[43U];
 762:../system/include/cmsis/core_cm3.h ****   __OM  uint32_t LAR;                    /*!< Offset: 0xFB0 ( /W)  ITM Lock Access Register */
 763:../system/include/cmsis/core_cm3.h ****   __IM  uint32_t LSR;                    /*!< Offset: 0xFB4 (R/ )  ITM Lock Status Register */
 764:../system/include/cmsis/core_cm3.h ****         uint32_t RESERVED5[6U];
 765:../system/include/cmsis/core_cm3.h ****   __IM  uint32_t PID4;                   /*!< Offset: 0xFD0 (R/ )  ITM Peripheral Identification Re
 766:../system/include/cmsis/core_cm3.h ****   __IM  uint32_t PID5;                   /*!< Offset: 0xFD4 (R/ )  ITM Peripheral Identification Re
 767:../system/include/cmsis/core_cm3.h ****   __IM  uint32_t PID6;                   /*!< Offset: 0xFD8 (R/ )  ITM Peripheral Identification Re
 768:../system/include/cmsis/core_cm3.h ****   __IM  uint32_t PID7;                   /*!< Offset: 0xFDC (R/ )  ITM Peripheral Identification Re
 769:../system/include/cmsis/core_cm3.h ****   __IM  uint32_t PID0;                   /*!< Offset: 0xFE0 (R/ )  ITM Peripheral Identification Re
 770:../system/include/cmsis/core_cm3.h ****   __IM  uint32_t PID1;                   /*!< Offset: 0xFE4 (R/ )  ITM Peripheral Identification Re
 771:../system/include/cmsis/core_cm3.h ****   __IM  uint32_t PID2;                   /*!< Offset: 0xFE8 (R/ )  ITM Peripheral Identification Re
 772:../system/include/cmsis/core_cm3.h ****   __IM  uint32_t PID3;                   /*!< Offset: 0xFEC (R/ )  ITM Peripheral Identification Re
 773:../system/include/cmsis/core_cm3.h ****   __IM  uint32_t CID0;                   /*!< Offset: 0xFF0 (R/ )  ITM Component  Identification Re
 774:../system/include/cmsis/core_cm3.h ****   __IM  uint32_t CID1;                   /*!< Offset: 0xFF4 (R/ )  ITM Component  Identification Re
 775:../system/include/cmsis/core_cm3.h ****   __IM  uint32_t CID2;                   /*!< Offset: 0xFF8 (R/ )  ITM Component  Identification Re
 776:../system/include/cmsis/core_cm3.h ****   __IM  uint32_t CID3;                   /*!< Offset: 0xFFC (R/ )  ITM Component  Identification Re
 777:../system/include/cmsis/core_cm3.h **** } ITM_Type;
 778:../system/include/cmsis/core_cm3.h **** 
 779:../system/include/cmsis/core_cm3.h **** /* ITM Trace Privilege Register Definitions */
 780:../system/include/cmsis/core_cm3.h **** #define ITM_TPR_PRIVMASK_Pos                0U                                            /*!< ITM 
 781:../system/include/cmsis/core_cm3.h **** #define ITM_TPR_PRIVMASK_Msk               (0xFUL /*<< ITM_TPR_PRIVMASK_Pos*/)            /*!< ITM 
 782:../system/include/cmsis/core_cm3.h **** 
 783:../system/include/cmsis/core_cm3.h **** /* ITM Trace Control Register Definitions */
 784:../system/include/cmsis/core_cm3.h **** #define ITM_TCR_BUSY_Pos                   23U                                            /*!< ITM 
 785:../system/include/cmsis/core_cm3.h **** #define ITM_TCR_BUSY_Msk                   (1UL << ITM_TCR_BUSY_Pos)                      /*!< ITM 
 786:../system/include/cmsis/core_cm3.h **** 
 787:../system/include/cmsis/core_cm3.h **** #define ITM_TCR_TraceBusID_Pos             16U                                            /*!< ITM 
 788:../system/include/cmsis/core_cm3.h **** #define ITM_TCR_TraceBusID_Msk             (0x7FUL << ITM_TCR_TraceBusID_Pos)             /*!< ITM 
 789:../system/include/cmsis/core_cm3.h **** 
 790:../system/include/cmsis/core_cm3.h **** #define ITM_TCR_GTSFREQ_Pos                10U                                            /*!< ITM 
 791:../system/include/cmsis/core_cm3.h **** #define ITM_TCR_GTSFREQ_Msk                (3UL << ITM_TCR_GTSFREQ_Pos)                   /*!< ITM 
 792:../system/include/cmsis/core_cm3.h **** 
 793:../system/include/cmsis/core_cm3.h **** #define ITM_TCR_TSPrescale_Pos              8U                                            /*!< ITM 
 794:../system/include/cmsis/core_cm3.h **** #define ITM_TCR_TSPrescale_Msk             (3UL << ITM_TCR_TSPrescale_Pos)                /*!< ITM 
 795:../system/include/cmsis/core_cm3.h **** 
 796:../system/include/cmsis/core_cm3.h **** #define ITM_TCR_SWOENA_Pos                  4U                                            /*!< ITM 
 797:../system/include/cmsis/core_cm3.h **** #define ITM_TCR_SWOENA_Msk                 (1UL << ITM_TCR_SWOENA_Pos)                    /*!< ITM 
 798:../system/include/cmsis/core_cm3.h **** 
 799:../system/include/cmsis/core_cm3.h **** #define ITM_TCR_DWTENA_Pos                  3U                                            /*!< ITM 
 800:../system/include/cmsis/core_cm3.h **** #define ITM_TCR_DWTENA_Msk                 (1UL << ITM_TCR_DWTENA_Pos)                    /*!< ITM 
 801:../system/include/cmsis/core_cm3.h **** 
 802:../system/include/cmsis/core_cm3.h **** #define ITM_TCR_SYNCENA_Pos                 2U                                            /*!< ITM 
 803:../system/include/cmsis/core_cm3.h **** #define ITM_TCR_SYNCENA_Msk                (1UL << ITM_TCR_SYNCENA_Pos)                   /*!< ITM 
 804:../system/include/cmsis/core_cm3.h **** 
 805:../system/include/cmsis/core_cm3.h **** #define ITM_TCR_TSENA_Pos                   1U                                            /*!< ITM 
 806:../system/include/cmsis/core_cm3.h **** #define ITM_TCR_TSENA_Msk                  (1UL << ITM_TCR_TSENA_Pos)                     /*!< ITM 
 807:../system/include/cmsis/core_cm3.h **** 
 808:../system/include/cmsis/core_cm3.h **** #define ITM_TCR_ITMENA_Pos                  0U                                            /*!< ITM 
 809:../system/include/cmsis/core_cm3.h **** #define ITM_TCR_ITMENA_Msk                 (1UL /*<< ITM_TCR_ITMENA_Pos*/)                /*!< ITM 
 810:../system/include/cmsis/core_cm3.h **** 
 811:../system/include/cmsis/core_cm3.h **** /* ITM Integration Write Register Definitions */
 812:../system/include/cmsis/core_cm3.h **** #define ITM_IWR_ATVALIDM_Pos                0U                                            /*!< ITM 
 813:../system/include/cmsis/core_cm3.h **** #define ITM_IWR_ATVALIDM_Msk               (1UL /*<< ITM_IWR_ATVALIDM_Pos*/)              /*!< ITM 
 814:../system/include/cmsis/core_cm3.h **** 
 815:../system/include/cmsis/core_cm3.h **** /* ITM Integration Read Register Definitions */
 816:../system/include/cmsis/core_cm3.h **** #define ITM_IRR_ATREADYM_Pos                0U                                            /*!< ITM 
 817:../system/include/cmsis/core_cm3.h **** #define ITM_IRR_ATREADYM_Msk               (1UL /*<< ITM_IRR_ATREADYM_Pos*/)              /*!< ITM 
 818:../system/include/cmsis/core_cm3.h **** 
 819:../system/include/cmsis/core_cm3.h **** /* ITM Integration Mode Control Register Definitions */
 820:../system/include/cmsis/core_cm3.h **** #define ITM_IMCR_INTEGRATION_Pos            0U                                            /*!< ITM 
 821:../system/include/cmsis/core_cm3.h **** #define ITM_IMCR_INTEGRATION_Msk           (1UL /*<< ITM_IMCR_INTEGRATION_Pos*/)          /*!< ITM 
 822:../system/include/cmsis/core_cm3.h **** 
 823:../system/include/cmsis/core_cm3.h **** /* ITM Lock Status Register Definitions */
 824:../system/include/cmsis/core_cm3.h **** #define ITM_LSR_ByteAcc_Pos                 2U                                            /*!< ITM 
 825:../system/include/cmsis/core_cm3.h **** #define ITM_LSR_ByteAcc_Msk                (1UL << ITM_LSR_ByteAcc_Pos)                   /*!< ITM 
 826:../system/include/cmsis/core_cm3.h **** 
 827:../system/include/cmsis/core_cm3.h **** #define ITM_LSR_Access_Pos                  1U                                            /*!< ITM 
 828:../system/include/cmsis/core_cm3.h **** #define ITM_LSR_Access_Msk                 (1UL << ITM_LSR_Access_Pos)                    /*!< ITM 
 829:../system/include/cmsis/core_cm3.h **** 
 830:../system/include/cmsis/core_cm3.h **** #define ITM_LSR_Present_Pos                 0U                                            /*!< ITM 
 831:../system/include/cmsis/core_cm3.h **** #define ITM_LSR_Present_Msk                (1UL /*<< ITM_LSR_Present_Pos*/)               /*!< ITM 
 832:../system/include/cmsis/core_cm3.h **** 
 833:../system/include/cmsis/core_cm3.h **** /*@}*/ /* end of group CMSIS_ITM */
 834:../system/include/cmsis/core_cm3.h **** 
 835:../system/include/cmsis/core_cm3.h **** 
 836:../system/include/cmsis/core_cm3.h **** /**
 837:../system/include/cmsis/core_cm3.h ****   \ingroup  CMSIS_core_register
 838:../system/include/cmsis/core_cm3.h ****   \defgroup CMSIS_DWT     Data Watchpoint and Trace (DWT)
 839:../system/include/cmsis/core_cm3.h ****   \brief    Type definitions for the Data Watchpoint and Trace (DWT)
 840:../system/include/cmsis/core_cm3.h ****   @{
 841:../system/include/cmsis/core_cm3.h ****  */
 842:../system/include/cmsis/core_cm3.h **** 
 843:../system/include/cmsis/core_cm3.h **** /**
 844:../system/include/cmsis/core_cm3.h ****   \brief  Structure type to access the Data Watchpoint and Trace Register (DWT).
 845:../system/include/cmsis/core_cm3.h ****  */
 846:../system/include/cmsis/core_cm3.h **** typedef struct
 847:../system/include/cmsis/core_cm3.h **** {
 848:../system/include/cmsis/core_cm3.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x000 (R/W)  Control Register */
 849:../system/include/cmsis/core_cm3.h ****   __IOM uint32_t CYCCNT;                 /*!< Offset: 0x004 (R/W)  Cycle Count Register */
 850:../system/include/cmsis/core_cm3.h ****   __IOM uint32_t CPICNT;                 /*!< Offset: 0x008 (R/W)  CPI Count Register */
 851:../system/include/cmsis/core_cm3.h ****   __IOM uint32_t EXCCNT;                 /*!< Offset: 0x00C (R/W)  Exception Overhead Count Registe
 852:../system/include/cmsis/core_cm3.h ****   __IOM uint32_t SLEEPCNT;               /*!< Offset: 0x010 (R/W)  Sleep Count Register */
 853:../system/include/cmsis/core_cm3.h ****   __IOM uint32_t LSUCNT;                 /*!< Offset: 0x014 (R/W)  LSU Count Register */
 854:../system/include/cmsis/core_cm3.h ****   __IOM uint32_t FOLDCNT;                /*!< Offset: 0x018 (R/W)  Folded-instruction Count Registe
 855:../system/include/cmsis/core_cm3.h ****   __IM  uint32_t PCSR;                   /*!< Offset: 0x01C (R/ )  Program Counter Sample Register 
 856:../system/include/cmsis/core_cm3.h ****   __IOM uint32_t COMP0;                  /*!< Offset: 0x020 (R/W)  Comparator Register 0 */
 857:../system/include/cmsis/core_cm3.h ****   __IOM uint32_t MASK0;                  /*!< Offset: 0x024 (R/W)  Mask Register 0 */
 858:../system/include/cmsis/core_cm3.h ****   __IOM uint32_t FUNCTION0;              /*!< Offset: 0x028 (R/W)  Function Register 0 */
 859:../system/include/cmsis/core_cm3.h ****         uint32_t RESERVED0[1U];
 860:../system/include/cmsis/core_cm3.h ****   __IOM uint32_t COMP1;                  /*!< Offset: 0x030 (R/W)  Comparator Register 1 */
 861:../system/include/cmsis/core_cm3.h ****   __IOM uint32_t MASK1;                  /*!< Offset: 0x034 (R/W)  Mask Register 1 */
 862:../system/include/cmsis/core_cm3.h ****   __IOM uint32_t FUNCTION1;              /*!< Offset: 0x038 (R/W)  Function Register 1 */
 863:../system/include/cmsis/core_cm3.h ****         uint32_t RESERVED1[1U];
 864:../system/include/cmsis/core_cm3.h ****   __IOM uint32_t COMP2;                  /*!< Offset: 0x040 (R/W)  Comparator Register 2 */
 865:../system/include/cmsis/core_cm3.h ****   __IOM uint32_t MASK2;                  /*!< Offset: 0x044 (R/W)  Mask Register 2 */
 866:../system/include/cmsis/core_cm3.h ****   __IOM uint32_t FUNCTION2;              /*!< Offset: 0x048 (R/W)  Function Register 2 */
 867:../system/include/cmsis/core_cm3.h ****         uint32_t RESERVED2[1U];
 868:../system/include/cmsis/core_cm3.h ****   __IOM uint32_t COMP3;                  /*!< Offset: 0x050 (R/W)  Comparator Register 3 */
 869:../system/include/cmsis/core_cm3.h ****   __IOM uint32_t MASK3;                  /*!< Offset: 0x054 (R/W)  Mask Register 3 */
 870:../system/include/cmsis/core_cm3.h ****   __IOM uint32_t FUNCTION3;              /*!< Offset: 0x058 (R/W)  Function Register 3 */
 871:../system/include/cmsis/core_cm3.h **** } DWT_Type;
 872:../system/include/cmsis/core_cm3.h **** 
 873:../system/include/cmsis/core_cm3.h **** /* DWT Control Register Definitions */
 874:../system/include/cmsis/core_cm3.h **** #define DWT_CTRL_NUMCOMP_Pos               28U                                         /*!< DWT CTR
 875:../system/include/cmsis/core_cm3.h **** #define DWT_CTRL_NUMCOMP_Msk               (0xFUL << DWT_CTRL_NUMCOMP_Pos)             /*!< DWT CTR
 876:../system/include/cmsis/core_cm3.h **** 
 877:../system/include/cmsis/core_cm3.h **** #define DWT_CTRL_NOTRCPKT_Pos              27U                                         /*!< DWT CTR
 878:../system/include/cmsis/core_cm3.h **** #define DWT_CTRL_NOTRCPKT_Msk              (0x1UL << DWT_CTRL_NOTRCPKT_Pos)            /*!< DWT CTR
 879:../system/include/cmsis/core_cm3.h **** 
 880:../system/include/cmsis/core_cm3.h **** #define DWT_CTRL_NOEXTTRIG_Pos             26U                                         /*!< DWT CTR
 881:../system/include/cmsis/core_cm3.h **** #define DWT_CTRL_NOEXTTRIG_Msk             (0x1UL << DWT_CTRL_NOEXTTRIG_Pos)           /*!< DWT CTR
 882:../system/include/cmsis/core_cm3.h **** 
 883:../system/include/cmsis/core_cm3.h **** #define DWT_CTRL_NOCYCCNT_Pos              25U                                         /*!< DWT CTR
 884:../system/include/cmsis/core_cm3.h **** #define DWT_CTRL_NOCYCCNT_Msk              (0x1UL << DWT_CTRL_NOCYCCNT_Pos)            /*!< DWT CTR
 885:../system/include/cmsis/core_cm3.h **** 
 886:../system/include/cmsis/core_cm3.h **** #define DWT_CTRL_NOPRFCNT_Pos              24U                                         /*!< DWT CTR
 887:../system/include/cmsis/core_cm3.h **** #define DWT_CTRL_NOPRFCNT_Msk              (0x1UL << DWT_CTRL_NOPRFCNT_Pos)            /*!< DWT CTR
 888:../system/include/cmsis/core_cm3.h **** 
 889:../system/include/cmsis/core_cm3.h **** #define DWT_CTRL_CYCEVTENA_Pos             22U                                         /*!< DWT CTR
 890:../system/include/cmsis/core_cm3.h **** #define DWT_CTRL_CYCEVTENA_Msk             (0x1UL << DWT_CTRL_CYCEVTENA_Pos)           /*!< DWT CTR
 891:../system/include/cmsis/core_cm3.h **** 
 892:../system/include/cmsis/core_cm3.h **** #define DWT_CTRL_FOLDEVTENA_Pos            21U                                         /*!< DWT CTR
 893:../system/include/cmsis/core_cm3.h **** #define DWT_CTRL_FOLDEVTENA_Msk            (0x1UL << DWT_CTRL_FOLDEVTENA_Pos)          /*!< DWT CTR
 894:../system/include/cmsis/core_cm3.h **** 
 895:../system/include/cmsis/core_cm3.h **** #define DWT_CTRL_LSUEVTENA_Pos             20U                                         /*!< DWT CTR
 896:../system/include/cmsis/core_cm3.h **** #define DWT_CTRL_LSUEVTENA_Msk             (0x1UL << DWT_CTRL_LSUEVTENA_Pos)           /*!< DWT CTR
 897:../system/include/cmsis/core_cm3.h **** 
 898:../system/include/cmsis/core_cm3.h **** #define DWT_CTRL_SLEEPEVTENA_Pos           19U                                         /*!< DWT CTR
 899:../system/include/cmsis/core_cm3.h **** #define DWT_CTRL_SLEEPEVTENA_Msk           (0x1UL << DWT_CTRL_SLEEPEVTENA_Pos)         /*!< DWT CTR
 900:../system/include/cmsis/core_cm3.h **** 
 901:../system/include/cmsis/core_cm3.h **** #define DWT_CTRL_EXCEVTENA_Pos             18U                                         /*!< DWT CTR
 902:../system/include/cmsis/core_cm3.h **** #define DWT_CTRL_EXCEVTENA_Msk             (0x1UL << DWT_CTRL_EXCEVTENA_Pos)           /*!< DWT CTR
 903:../system/include/cmsis/core_cm3.h **** 
 904:../system/include/cmsis/core_cm3.h **** #define DWT_CTRL_CPIEVTENA_Pos             17U                                         /*!< DWT CTR
 905:../system/include/cmsis/core_cm3.h **** #define DWT_CTRL_CPIEVTENA_Msk             (0x1UL << DWT_CTRL_CPIEVTENA_Pos)           /*!< DWT CTR
 906:../system/include/cmsis/core_cm3.h **** 
 907:../system/include/cmsis/core_cm3.h **** #define DWT_CTRL_EXCTRCENA_Pos             16U                                         /*!< DWT CTR
 908:../system/include/cmsis/core_cm3.h **** #define DWT_CTRL_EXCTRCENA_Msk             (0x1UL << DWT_CTRL_EXCTRCENA_Pos)           /*!< DWT CTR
 909:../system/include/cmsis/core_cm3.h **** 
 910:../system/include/cmsis/core_cm3.h **** #define DWT_CTRL_PCSAMPLENA_Pos            12U                                         /*!< DWT CTR
 911:../system/include/cmsis/core_cm3.h **** #define DWT_CTRL_PCSAMPLENA_Msk            (0x1UL << DWT_CTRL_PCSAMPLENA_Pos)          /*!< DWT CTR
 912:../system/include/cmsis/core_cm3.h **** 
 913:../system/include/cmsis/core_cm3.h **** #define DWT_CTRL_SYNCTAP_Pos               10U                                         /*!< DWT CTR
 914:../system/include/cmsis/core_cm3.h **** #define DWT_CTRL_SYNCTAP_Msk               (0x3UL << DWT_CTRL_SYNCTAP_Pos)             /*!< DWT CTR
 915:../system/include/cmsis/core_cm3.h **** 
 916:../system/include/cmsis/core_cm3.h **** #define DWT_CTRL_CYCTAP_Pos                 9U                                         /*!< DWT CTR
 917:../system/include/cmsis/core_cm3.h **** #define DWT_CTRL_CYCTAP_Msk                (0x1UL << DWT_CTRL_CYCTAP_Pos)              /*!< DWT CTR
 918:../system/include/cmsis/core_cm3.h **** 
 919:../system/include/cmsis/core_cm3.h **** #define DWT_CTRL_POSTINIT_Pos               5U                                         /*!< DWT CTR
 920:../system/include/cmsis/core_cm3.h **** #define DWT_CTRL_POSTINIT_Msk              (0xFUL << DWT_CTRL_POSTINIT_Pos)            /*!< DWT CTR
 921:../system/include/cmsis/core_cm3.h **** 
 922:../system/include/cmsis/core_cm3.h **** #define DWT_CTRL_POSTPRESET_Pos             1U                                         /*!< DWT CTR
 923:../system/include/cmsis/core_cm3.h **** #define DWT_CTRL_POSTPRESET_Msk            (0xFUL << DWT_CTRL_POSTPRESET_Pos)          /*!< DWT CTR
 924:../system/include/cmsis/core_cm3.h **** 
 925:../system/include/cmsis/core_cm3.h **** #define DWT_CTRL_CYCCNTENA_Pos              0U                                         /*!< DWT CTR
 926:../system/include/cmsis/core_cm3.h **** #define DWT_CTRL_CYCCNTENA_Msk             (0x1UL /*<< DWT_CTRL_CYCCNTENA_Pos*/)       /*!< DWT CTR
 927:../system/include/cmsis/core_cm3.h **** 
 928:../system/include/cmsis/core_cm3.h **** /* DWT CPI Count Register Definitions */
 929:../system/include/cmsis/core_cm3.h **** #define DWT_CPICNT_CPICNT_Pos               0U                                         /*!< DWT CPI
 930:../system/include/cmsis/core_cm3.h **** #define DWT_CPICNT_CPICNT_Msk              (0xFFUL /*<< DWT_CPICNT_CPICNT_Pos*/)       /*!< DWT CPI
 931:../system/include/cmsis/core_cm3.h **** 
 932:../system/include/cmsis/core_cm3.h **** /* DWT Exception Overhead Count Register Definitions */
 933:../system/include/cmsis/core_cm3.h **** #define DWT_EXCCNT_EXCCNT_Pos               0U                                         /*!< DWT EXC
 934:../system/include/cmsis/core_cm3.h **** #define DWT_EXCCNT_EXCCNT_Msk              (0xFFUL /*<< DWT_EXCCNT_EXCCNT_Pos*/)       /*!< DWT EXC
 935:../system/include/cmsis/core_cm3.h **** 
 936:../system/include/cmsis/core_cm3.h **** /* DWT Sleep Count Register Definitions */
 937:../system/include/cmsis/core_cm3.h **** #define DWT_SLEEPCNT_SLEEPCNT_Pos           0U                                         /*!< DWT SLE
 938:../system/include/cmsis/core_cm3.h **** #define DWT_SLEEPCNT_SLEEPCNT_Msk          (0xFFUL /*<< DWT_SLEEPCNT_SLEEPCNT_Pos*/)   /*!< DWT SLE
 939:../system/include/cmsis/core_cm3.h **** 
 940:../system/include/cmsis/core_cm3.h **** /* DWT LSU Count Register Definitions */
 941:../system/include/cmsis/core_cm3.h **** #define DWT_LSUCNT_LSUCNT_Pos               0U                                         /*!< DWT LSU
 942:../system/include/cmsis/core_cm3.h **** #define DWT_LSUCNT_LSUCNT_Msk              (0xFFUL /*<< DWT_LSUCNT_LSUCNT_Pos*/)       /*!< DWT LSU
 943:../system/include/cmsis/core_cm3.h **** 
 944:../system/include/cmsis/core_cm3.h **** /* DWT Folded-instruction Count Register Definitions */
 945:../system/include/cmsis/core_cm3.h **** #define DWT_FOLDCNT_FOLDCNT_Pos             0U                                         /*!< DWT FOL
 946:../system/include/cmsis/core_cm3.h **** #define DWT_FOLDCNT_FOLDCNT_Msk            (0xFFUL /*<< DWT_FOLDCNT_FOLDCNT_Pos*/)     /*!< DWT FOL
 947:../system/include/cmsis/core_cm3.h **** 
 948:../system/include/cmsis/core_cm3.h **** /* DWT Comparator Mask Register Definitions */
 949:../system/include/cmsis/core_cm3.h **** #define DWT_MASK_MASK_Pos                   0U                                         /*!< DWT MAS
 950:../system/include/cmsis/core_cm3.h **** #define DWT_MASK_MASK_Msk                  (0x1FUL /*<< DWT_MASK_MASK_Pos*/)           /*!< DWT MAS
 951:../system/include/cmsis/core_cm3.h **** 
 952:../system/include/cmsis/core_cm3.h **** /* DWT Comparator Function Register Definitions */
 953:../system/include/cmsis/core_cm3.h **** #define DWT_FUNCTION_MATCHED_Pos           24U                                         /*!< DWT FUN
 954:../system/include/cmsis/core_cm3.h **** #define DWT_FUNCTION_MATCHED_Msk           (0x1UL << DWT_FUNCTION_MATCHED_Pos)         /*!< DWT FUN
 955:../system/include/cmsis/core_cm3.h **** 
 956:../system/include/cmsis/core_cm3.h **** #define DWT_FUNCTION_DATAVADDR1_Pos        16U                                         /*!< DWT FUN
 957:../system/include/cmsis/core_cm3.h **** #define DWT_FUNCTION_DATAVADDR1_Msk        (0xFUL << DWT_FUNCTION_DATAVADDR1_Pos)      /*!< DWT FUN
 958:../system/include/cmsis/core_cm3.h **** 
 959:../system/include/cmsis/core_cm3.h **** #define DWT_FUNCTION_DATAVADDR0_Pos        12U                                         /*!< DWT FUN
 960:../system/include/cmsis/core_cm3.h **** #define DWT_FUNCTION_DATAVADDR0_Msk        (0xFUL << DWT_FUNCTION_DATAVADDR0_Pos)      /*!< DWT FUN
 961:../system/include/cmsis/core_cm3.h **** 
 962:../system/include/cmsis/core_cm3.h **** #define DWT_FUNCTION_DATAVSIZE_Pos         10U                                         /*!< DWT FUN
 963:../system/include/cmsis/core_cm3.h **** #define DWT_FUNCTION_DATAVSIZE_Msk         (0x3UL << DWT_FUNCTION_DATAVSIZE_Pos)       /*!< DWT FUN
 964:../system/include/cmsis/core_cm3.h **** 
 965:../system/include/cmsis/core_cm3.h **** #define DWT_FUNCTION_LNK1ENA_Pos            9U                                         /*!< DWT FUN
 966:../system/include/cmsis/core_cm3.h **** #define DWT_FUNCTION_LNK1ENA_Msk           (0x1UL << DWT_FUNCTION_LNK1ENA_Pos)         /*!< DWT FUN
 967:../system/include/cmsis/core_cm3.h **** 
 968:../system/include/cmsis/core_cm3.h **** #define DWT_FUNCTION_DATAVMATCH_Pos         8U                                         /*!< DWT FUN
 969:../system/include/cmsis/core_cm3.h **** #define DWT_FUNCTION_DATAVMATCH_Msk        (0x1UL << DWT_FUNCTION_DATAVMATCH_Pos)      /*!< DWT FUN
 970:../system/include/cmsis/core_cm3.h **** 
 971:../system/include/cmsis/core_cm3.h **** #define DWT_FUNCTION_CYCMATCH_Pos           7U                                         /*!< DWT FUN
 972:../system/include/cmsis/core_cm3.h **** #define DWT_FUNCTION_CYCMATCH_Msk          (0x1UL << DWT_FUNCTION_CYCMATCH_Pos)        /*!< DWT FUN
 973:../system/include/cmsis/core_cm3.h **** 
 974:../system/include/cmsis/core_cm3.h **** #define DWT_FUNCTION_EMITRANGE_Pos          5U                                         /*!< DWT FUN
 975:../system/include/cmsis/core_cm3.h **** #define DWT_FUNCTION_EMITRANGE_Msk         (0x1UL << DWT_FUNCTION_EMITRANGE_Pos)       /*!< DWT FUN
 976:../system/include/cmsis/core_cm3.h **** 
 977:../system/include/cmsis/core_cm3.h **** #define DWT_FUNCTION_FUNCTION_Pos           0U                                         /*!< DWT FUN
 978:../system/include/cmsis/core_cm3.h **** #define DWT_FUNCTION_FUNCTION_Msk          (0xFUL /*<< DWT_FUNCTION_FUNCTION_Pos*/)    /*!< DWT FUN
 979:../system/include/cmsis/core_cm3.h **** 
 980:../system/include/cmsis/core_cm3.h **** /*@}*/ /* end of group CMSIS_DWT */
 981:../system/include/cmsis/core_cm3.h **** 
 982:../system/include/cmsis/core_cm3.h **** 
 983:../system/include/cmsis/core_cm3.h **** /**
 984:../system/include/cmsis/core_cm3.h ****   \ingroup  CMSIS_core_register
 985:../system/include/cmsis/core_cm3.h ****   \defgroup CMSIS_TPI     Trace Port Interface (TPI)
 986:../system/include/cmsis/core_cm3.h ****   \brief    Type definitions for the Trace Port Interface (TPI)
 987:../system/include/cmsis/core_cm3.h ****   @{
 988:../system/include/cmsis/core_cm3.h ****  */
 989:../system/include/cmsis/core_cm3.h **** 
 990:../system/include/cmsis/core_cm3.h **** /**
 991:../system/include/cmsis/core_cm3.h ****   \brief  Structure type to access the Trace Port Interface Register (TPI).
 992:../system/include/cmsis/core_cm3.h ****  */
 993:../system/include/cmsis/core_cm3.h **** typedef struct
 994:../system/include/cmsis/core_cm3.h **** {
 995:../system/include/cmsis/core_cm3.h ****   __IOM uint32_t SSPSR;                  /*!< Offset: 0x000 (R/ )  Supported Parallel Port Size Reg
 996:../system/include/cmsis/core_cm3.h ****   __IOM uint32_t CSPSR;                  /*!< Offset: 0x004 (R/W)  Current Parallel Port Size Regis
 997:../system/include/cmsis/core_cm3.h ****         uint32_t RESERVED0[2U];
 998:../system/include/cmsis/core_cm3.h ****   __IOM uint32_t ACPR;                   /*!< Offset: 0x010 (R/W)  Asynchronous Clock Prescaler Reg
 999:../system/include/cmsis/core_cm3.h ****         uint32_t RESERVED1[55U];
1000:../system/include/cmsis/core_cm3.h ****   __IOM uint32_t SPPR;                   /*!< Offset: 0x0F0 (R/W)  Selected Pin Protocol Register *
1001:../system/include/cmsis/core_cm3.h ****         uint32_t RESERVED2[131U];
1002:../system/include/cmsis/core_cm3.h ****   __IM  uint32_t FFSR;                   /*!< Offset: 0x300 (R/ )  Formatter and Flush Status Regis
1003:../system/include/cmsis/core_cm3.h ****   __IOM uint32_t FFCR;                   /*!< Offset: 0x304 (R/W)  Formatter and Flush Control Regi
1004:../system/include/cmsis/core_cm3.h ****   __IM  uint32_t FSCR;                   /*!< Offset: 0x308 (R/ )  Formatter Synchronization Counte
1005:../system/include/cmsis/core_cm3.h ****         uint32_t RESERVED3[759U];
1006:../system/include/cmsis/core_cm3.h ****   __IM  uint32_t TRIGGER;                /*!< Offset: 0xEE8 (R/ )  TRIGGER */
1007:../system/include/cmsis/core_cm3.h ****   __IM  uint32_t FIFO0;                  /*!< Offset: 0xEEC (R/ )  Integration ETM Data */
1008:../system/include/cmsis/core_cm3.h ****   __IM  uint32_t ITATBCTR2;              /*!< Offset: 0xEF0 (R/ )  ITATBCTR2 */
1009:../system/include/cmsis/core_cm3.h ****         uint32_t RESERVED4[1U];
1010:../system/include/cmsis/core_cm3.h ****   __IM  uint32_t ITATBCTR0;              /*!< Offset: 0xEF8 (R/ )  ITATBCTR0 */
1011:../system/include/cmsis/core_cm3.h ****   __IM  uint32_t FIFO1;                  /*!< Offset: 0xEFC (R/ )  Integration ITM Data */
1012:../system/include/cmsis/core_cm3.h ****   __IOM uint32_t ITCTRL;                 /*!< Offset: 0xF00 (R/W)  Integration Mode Control */
1013:../system/include/cmsis/core_cm3.h ****         uint32_t RESERVED5[39U];
1014:../system/include/cmsis/core_cm3.h ****   __IOM uint32_t CLAIMSET;               /*!< Offset: 0xFA0 (R/W)  Claim tag set */
1015:../system/include/cmsis/core_cm3.h ****   __IOM uint32_t CLAIMCLR;               /*!< Offset: 0xFA4 (R/W)  Claim tag clear */
1016:../system/include/cmsis/core_cm3.h ****         uint32_t RESERVED7[8U];
1017:../system/include/cmsis/core_cm3.h ****   __IM  uint32_t DEVID;                  /*!< Offset: 0xFC8 (R/ )  TPIU_DEVID */
1018:../system/include/cmsis/core_cm3.h ****   __IM  uint32_t DEVTYPE;                /*!< Offset: 0xFCC (R/ )  TPIU_DEVTYPE */
1019:../system/include/cmsis/core_cm3.h **** } TPI_Type;
1020:../system/include/cmsis/core_cm3.h **** 
1021:../system/include/cmsis/core_cm3.h **** /* TPI Asynchronous Clock Prescaler Register Definitions */
1022:../system/include/cmsis/core_cm3.h **** #define TPI_ACPR_PRESCALER_Pos              0U                                         /*!< TPI ACP
1023:../system/include/cmsis/core_cm3.h **** #define TPI_ACPR_PRESCALER_Msk             (0x1FFFUL /*<< TPI_ACPR_PRESCALER_Pos*/)    /*!< TPI ACP
1024:../system/include/cmsis/core_cm3.h **** 
1025:../system/include/cmsis/core_cm3.h **** /* TPI Selected Pin Protocol Register Definitions */
1026:../system/include/cmsis/core_cm3.h **** #define TPI_SPPR_TXMODE_Pos                 0U                                         /*!< TPI SPP
1027:../system/include/cmsis/core_cm3.h **** #define TPI_SPPR_TXMODE_Msk                (0x3UL /*<< TPI_SPPR_TXMODE_Pos*/)          /*!< TPI SPP
1028:../system/include/cmsis/core_cm3.h **** 
1029:../system/include/cmsis/core_cm3.h **** /* TPI Formatter and Flush Status Register Definitions */
1030:../system/include/cmsis/core_cm3.h **** #define TPI_FFSR_FtNonStop_Pos              3U                                         /*!< TPI FFS
1031:../system/include/cmsis/core_cm3.h **** #define TPI_FFSR_FtNonStop_Msk             (0x1UL << TPI_FFSR_FtNonStop_Pos)           /*!< TPI FFS
1032:../system/include/cmsis/core_cm3.h **** 
1033:../system/include/cmsis/core_cm3.h **** #define TPI_FFSR_TCPresent_Pos              2U                                         /*!< TPI FFS
1034:../system/include/cmsis/core_cm3.h **** #define TPI_FFSR_TCPresent_Msk             (0x1UL << TPI_FFSR_TCPresent_Pos)           /*!< TPI FFS
1035:../system/include/cmsis/core_cm3.h **** 
1036:../system/include/cmsis/core_cm3.h **** #define TPI_FFSR_FtStopped_Pos              1U                                         /*!< TPI FFS
1037:../system/include/cmsis/core_cm3.h **** #define TPI_FFSR_FtStopped_Msk             (0x1UL << TPI_FFSR_FtStopped_Pos)           /*!< TPI FFS
1038:../system/include/cmsis/core_cm3.h **** 
1039:../system/include/cmsis/core_cm3.h **** #define TPI_FFSR_FlInProg_Pos               0U                                         /*!< TPI FFS
1040:../system/include/cmsis/core_cm3.h **** #define TPI_FFSR_FlInProg_Msk              (0x1UL /*<< TPI_FFSR_FlInProg_Pos*/)        /*!< TPI FFS
1041:../system/include/cmsis/core_cm3.h **** 
1042:../system/include/cmsis/core_cm3.h **** /* TPI Formatter and Flush Control Register Definitions */
1043:../system/include/cmsis/core_cm3.h **** #define TPI_FFCR_TrigIn_Pos                 8U                                         /*!< TPI FFC
1044:../system/include/cmsis/core_cm3.h **** #define TPI_FFCR_TrigIn_Msk                (0x1UL << TPI_FFCR_TrigIn_Pos)              /*!< TPI FFC
1045:../system/include/cmsis/core_cm3.h **** 
1046:../system/include/cmsis/core_cm3.h **** #define TPI_FFCR_EnFCont_Pos                1U                                         /*!< TPI FFC
1047:../system/include/cmsis/core_cm3.h **** #define TPI_FFCR_EnFCont_Msk               (0x1UL << TPI_FFCR_EnFCont_Pos)             /*!< TPI FFC
1048:../system/include/cmsis/core_cm3.h **** 
1049:../system/include/cmsis/core_cm3.h **** /* TPI TRIGGER Register Definitions */
1050:../system/include/cmsis/core_cm3.h **** #define TPI_TRIGGER_TRIGGER_Pos             0U                                         /*!< TPI TRI
1051:../system/include/cmsis/core_cm3.h **** #define TPI_TRIGGER_TRIGGER_Msk            (0x1UL /*<< TPI_TRIGGER_TRIGGER_Pos*/)      /*!< TPI TRI
1052:../system/include/cmsis/core_cm3.h **** 
1053:../system/include/cmsis/core_cm3.h **** /* TPI Integration ETM Data Register Definitions (FIFO0) */
1054:../system/include/cmsis/core_cm3.h **** #define TPI_FIFO0_ITM_ATVALID_Pos          29U                                         /*!< TPI FIF
1055:../system/include/cmsis/core_cm3.h **** #define TPI_FIFO0_ITM_ATVALID_Msk          (0x3UL << TPI_FIFO0_ITM_ATVALID_Pos)        /*!< TPI FIF
1056:../system/include/cmsis/core_cm3.h **** 
1057:../system/include/cmsis/core_cm3.h **** #define TPI_FIFO0_ITM_bytecount_Pos        27U                                         /*!< TPI FIF
1058:../system/include/cmsis/core_cm3.h **** #define TPI_FIFO0_ITM_bytecount_Msk        (0x3UL << TPI_FIFO0_ITM_bytecount_Pos)      /*!< TPI FIF
1059:../system/include/cmsis/core_cm3.h **** 
1060:../system/include/cmsis/core_cm3.h **** #define TPI_FIFO0_ETM_ATVALID_Pos          26U                                         /*!< TPI FIF
1061:../system/include/cmsis/core_cm3.h **** #define TPI_FIFO0_ETM_ATVALID_Msk          (0x3UL << TPI_FIFO0_ETM_ATVALID_Pos)        /*!< TPI FIF
1062:../system/include/cmsis/core_cm3.h **** 
1063:../system/include/cmsis/core_cm3.h **** #define TPI_FIFO0_ETM_bytecount_Pos        24U                                         /*!< TPI FIF
1064:../system/include/cmsis/core_cm3.h **** #define TPI_FIFO0_ETM_bytecount_Msk        (0x3UL << TPI_FIFO0_ETM_bytecount_Pos)      /*!< TPI FIF
1065:../system/include/cmsis/core_cm3.h **** 
1066:../system/include/cmsis/core_cm3.h **** #define TPI_FIFO0_ETM2_Pos                 16U                                         /*!< TPI FIF
1067:../system/include/cmsis/core_cm3.h **** #define TPI_FIFO0_ETM2_Msk                 (0xFFUL << TPI_FIFO0_ETM2_Pos)              /*!< TPI FIF
1068:../system/include/cmsis/core_cm3.h **** 
1069:../system/include/cmsis/core_cm3.h **** #define TPI_FIFO0_ETM1_Pos                  8U                                         /*!< TPI FIF
1070:../system/include/cmsis/core_cm3.h **** #define TPI_FIFO0_ETM1_Msk                 (0xFFUL << TPI_FIFO0_ETM1_Pos)              /*!< TPI FIF
1071:../system/include/cmsis/core_cm3.h **** 
1072:../system/include/cmsis/core_cm3.h **** #define TPI_FIFO0_ETM0_Pos                  0U                                         /*!< TPI FIF
1073:../system/include/cmsis/core_cm3.h **** #define TPI_FIFO0_ETM0_Msk                 (0xFFUL /*<< TPI_FIFO0_ETM0_Pos*/)          /*!< TPI FIF
1074:../system/include/cmsis/core_cm3.h **** 
1075:../system/include/cmsis/core_cm3.h **** /* TPI ITATBCTR2 Register Definitions */
1076:../system/include/cmsis/core_cm3.h **** #define TPI_ITATBCTR2_ATREADY_Pos           0U                                         /*!< TPI ITA
1077:../system/include/cmsis/core_cm3.h **** #define TPI_ITATBCTR2_ATREADY_Msk          (0x1UL /*<< TPI_ITATBCTR2_ATREADY_Pos*/)    /*!< TPI ITA
1078:../system/include/cmsis/core_cm3.h **** 
1079:../system/include/cmsis/core_cm3.h **** /* TPI Integration ITM Data Register Definitions (FIFO1) */
1080:../system/include/cmsis/core_cm3.h **** #define TPI_FIFO1_ITM_ATVALID_Pos          29U                                         /*!< TPI FIF
1081:../system/include/cmsis/core_cm3.h **** #define TPI_FIFO1_ITM_ATVALID_Msk          (0x3UL << TPI_FIFO1_ITM_ATVALID_Pos)        /*!< TPI FIF
1082:../system/include/cmsis/core_cm3.h **** 
1083:../system/include/cmsis/core_cm3.h **** #define TPI_FIFO1_ITM_bytecount_Pos        27U                                         /*!< TPI FIF
1084:../system/include/cmsis/core_cm3.h **** #define TPI_FIFO1_ITM_bytecount_Msk        (0x3UL << TPI_FIFO1_ITM_bytecount_Pos)      /*!< TPI FIF
1085:../system/include/cmsis/core_cm3.h **** 
1086:../system/include/cmsis/core_cm3.h **** #define TPI_FIFO1_ETM_ATVALID_Pos          26U                                         /*!< TPI FIF
1087:../system/include/cmsis/core_cm3.h **** #define TPI_FIFO1_ETM_ATVALID_Msk          (0x3UL << TPI_FIFO1_ETM_ATVALID_Pos)        /*!< TPI FIF
1088:../system/include/cmsis/core_cm3.h **** 
1089:../system/include/cmsis/core_cm3.h **** #define TPI_FIFO1_ETM_bytecount_Pos        24U                                         /*!< TPI FIF
1090:../system/include/cmsis/core_cm3.h **** #define TPI_FIFO1_ETM_bytecount_Msk        (0x3UL << TPI_FIFO1_ETM_bytecount_Pos)      /*!< TPI FIF
1091:../system/include/cmsis/core_cm3.h **** 
1092:../system/include/cmsis/core_cm3.h **** #define TPI_FIFO1_ITM2_Pos                 16U                                         /*!< TPI FIF
1093:../system/include/cmsis/core_cm3.h **** #define TPI_FIFO1_ITM2_Msk                 (0xFFUL << TPI_FIFO1_ITM2_Pos)              /*!< TPI FIF
1094:../system/include/cmsis/core_cm3.h **** 
1095:../system/include/cmsis/core_cm3.h **** #define TPI_FIFO1_ITM1_Pos                  8U                                         /*!< TPI FIF
1096:../system/include/cmsis/core_cm3.h **** #define TPI_FIFO1_ITM1_Msk                 (0xFFUL << TPI_FIFO1_ITM1_Pos)              /*!< TPI FIF
1097:../system/include/cmsis/core_cm3.h **** 
1098:../system/include/cmsis/core_cm3.h **** #define TPI_FIFO1_ITM0_Pos                  0U                                         /*!< TPI FIF
1099:../system/include/cmsis/core_cm3.h **** #define TPI_FIFO1_ITM0_Msk                 (0xFFUL /*<< TPI_FIFO1_ITM0_Pos*/)          /*!< TPI FIF
1100:../system/include/cmsis/core_cm3.h **** 
1101:../system/include/cmsis/core_cm3.h **** /* TPI ITATBCTR0 Register Definitions */
1102:../system/include/cmsis/core_cm3.h **** #define TPI_ITATBCTR0_ATREADY_Pos           0U                                         /*!< TPI ITA
1103:../system/include/cmsis/core_cm3.h **** #define TPI_ITATBCTR0_ATREADY_Msk          (0x1UL /*<< TPI_ITATBCTR0_ATREADY_Pos*/)    /*!< TPI ITA
1104:../system/include/cmsis/core_cm3.h **** 
1105:../system/include/cmsis/core_cm3.h **** /* TPI Integration Mode Control Register Definitions */
1106:../system/include/cmsis/core_cm3.h **** #define TPI_ITCTRL_Mode_Pos                 0U                                         /*!< TPI ITC
1107:../system/include/cmsis/core_cm3.h **** #define TPI_ITCTRL_Mode_Msk                (0x1UL /*<< TPI_ITCTRL_Mode_Pos*/)          /*!< TPI ITC
1108:../system/include/cmsis/core_cm3.h **** 
1109:../system/include/cmsis/core_cm3.h **** /* TPI DEVID Register Definitions */
1110:../system/include/cmsis/core_cm3.h **** #define TPI_DEVID_NRZVALID_Pos             11U                                         /*!< TPI DEV
1111:../system/include/cmsis/core_cm3.h **** #define TPI_DEVID_NRZVALID_Msk             (0x1UL << TPI_DEVID_NRZVALID_Pos)           /*!< TPI DEV
1112:../system/include/cmsis/core_cm3.h **** 
1113:../system/include/cmsis/core_cm3.h **** #define TPI_DEVID_MANCVALID_Pos            10U                                         /*!< TPI DEV
1114:../system/include/cmsis/core_cm3.h **** #define TPI_DEVID_MANCVALID_Msk            (0x1UL << TPI_DEVID_MANCVALID_Pos)          /*!< TPI DEV
1115:../system/include/cmsis/core_cm3.h **** 
1116:../system/include/cmsis/core_cm3.h **** #define TPI_DEVID_PTINVALID_Pos             9U                                         /*!< TPI DEV
1117:../system/include/cmsis/core_cm3.h **** #define TPI_DEVID_PTINVALID_Msk            (0x1UL << TPI_DEVID_PTINVALID_Pos)          /*!< TPI DEV
1118:../system/include/cmsis/core_cm3.h **** 
1119:../system/include/cmsis/core_cm3.h **** #define TPI_DEVID_MinBufSz_Pos              6U                                         /*!< TPI DEV
1120:../system/include/cmsis/core_cm3.h **** #define TPI_DEVID_MinBufSz_Msk             (0x7UL << TPI_DEVID_MinBufSz_Pos)           /*!< TPI DEV
1121:../system/include/cmsis/core_cm3.h **** 
1122:../system/include/cmsis/core_cm3.h **** #define TPI_DEVID_AsynClkIn_Pos             5U                                         /*!< TPI DEV
1123:../system/include/cmsis/core_cm3.h **** #define TPI_DEVID_AsynClkIn_Msk            (0x1UL << TPI_DEVID_AsynClkIn_Pos)          /*!< TPI DEV
1124:../system/include/cmsis/core_cm3.h **** 
1125:../system/include/cmsis/core_cm3.h **** #define TPI_DEVID_NrTraceInput_Pos          0U                                         /*!< TPI DEV
1126:../system/include/cmsis/core_cm3.h **** #define TPI_DEVID_NrTraceInput_Msk         (0x1FUL /*<< TPI_DEVID_NrTraceInput_Pos*/)  /*!< TPI DEV
1127:../system/include/cmsis/core_cm3.h **** 
1128:../system/include/cmsis/core_cm3.h **** /* TPI DEVTYPE Register Definitions */
1129:../system/include/cmsis/core_cm3.h **** #define TPI_DEVTYPE_MajorType_Pos           4U                                         /*!< TPI DEV
1130:../system/include/cmsis/core_cm3.h **** #define TPI_DEVTYPE_MajorType_Msk          (0xFUL << TPI_DEVTYPE_MajorType_Pos)        /*!< TPI DEV
1131:../system/include/cmsis/core_cm3.h **** 
1132:../system/include/cmsis/core_cm3.h **** #define TPI_DEVTYPE_SubType_Pos             0U                                         /*!< TPI DEV
1133:../system/include/cmsis/core_cm3.h **** #define TPI_DEVTYPE_SubType_Msk            (0xFUL /*<< TPI_DEVTYPE_SubType_Pos*/)      /*!< TPI DEV
1134:../system/include/cmsis/core_cm3.h **** 
1135:../system/include/cmsis/core_cm3.h **** /*@}*/ /* end of group CMSIS_TPI */
1136:../system/include/cmsis/core_cm3.h **** 
1137:../system/include/cmsis/core_cm3.h **** 
1138:../system/include/cmsis/core_cm3.h **** #if (__MPU_PRESENT == 1U)
1139:../system/include/cmsis/core_cm3.h **** /**
1140:../system/include/cmsis/core_cm3.h ****   \ingroup  CMSIS_core_register
1141:../system/include/cmsis/core_cm3.h ****   \defgroup CMSIS_MPU     Memory Protection Unit (MPU)
1142:../system/include/cmsis/core_cm3.h ****   \brief    Type definitions for the Memory Protection Unit (MPU)
1143:../system/include/cmsis/core_cm3.h ****   @{
1144:../system/include/cmsis/core_cm3.h ****  */
1145:../system/include/cmsis/core_cm3.h **** 
1146:../system/include/cmsis/core_cm3.h **** /**
1147:../system/include/cmsis/core_cm3.h ****   \brief  Structure type to access the Memory Protection Unit (MPU).
1148:../system/include/cmsis/core_cm3.h ****  */
1149:../system/include/cmsis/core_cm3.h **** typedef struct
1150:../system/include/cmsis/core_cm3.h **** {
1151:../system/include/cmsis/core_cm3.h ****   __IM  uint32_t TYPE;                   /*!< Offset: 0x000 (R/ )  MPU Type Register */
1152:../system/include/cmsis/core_cm3.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x004 (R/W)  MPU Control Register */
1153:../system/include/cmsis/core_cm3.h ****   __IOM uint32_t RNR;                    /*!< Offset: 0x008 (R/W)  MPU Region RNRber Register */
1154:../system/include/cmsis/core_cm3.h ****   __IOM uint32_t RBAR;                   /*!< Offset: 0x00C (R/W)  MPU Region Base Address Register
1155:../system/include/cmsis/core_cm3.h ****   __IOM uint32_t RASR;                   /*!< Offset: 0x010 (R/W)  MPU Region Attribute and Size Re
1156:../system/include/cmsis/core_cm3.h ****   __IOM uint32_t RBAR_A1;                /*!< Offset: 0x014 (R/W)  MPU Alias 1 Region Base Address 
1157:../system/include/cmsis/core_cm3.h ****   __IOM uint32_t RASR_A1;                /*!< Offset: 0x018 (R/W)  MPU Alias 1 Region Attribute and
1158:../system/include/cmsis/core_cm3.h ****   __IOM uint32_t RBAR_A2;                /*!< Offset: 0x01C (R/W)  MPU Alias 2 Region Base Address 
1159:../system/include/cmsis/core_cm3.h ****   __IOM uint32_t RASR_A2;                /*!< Offset: 0x020 (R/W)  MPU Alias 2 Region Attribute and
1160:../system/include/cmsis/core_cm3.h ****   __IOM uint32_t RBAR_A3;                /*!< Offset: 0x024 (R/W)  MPU Alias 3 Region Base Address 
1161:../system/include/cmsis/core_cm3.h ****   __IOM uint32_t RASR_A3;                /*!< Offset: 0x028 (R/W)  MPU Alias 3 Region Attribute and
1162:../system/include/cmsis/core_cm3.h **** } MPU_Type;
1163:../system/include/cmsis/core_cm3.h **** 
1164:../system/include/cmsis/core_cm3.h **** /* MPU Type Register Definitions */
1165:../system/include/cmsis/core_cm3.h **** #define MPU_TYPE_IREGION_Pos               16U                                            /*!< MPU 
1166:../system/include/cmsis/core_cm3.h **** #define MPU_TYPE_IREGION_Msk               (0xFFUL << MPU_TYPE_IREGION_Pos)               /*!< MPU 
1167:../system/include/cmsis/core_cm3.h **** 
1168:../system/include/cmsis/core_cm3.h **** #define MPU_TYPE_DREGION_Pos                8U                                            /*!< MPU 
1169:../system/include/cmsis/core_cm3.h **** #define MPU_TYPE_DREGION_Msk               (0xFFUL << MPU_TYPE_DREGION_Pos)               /*!< MPU 
1170:../system/include/cmsis/core_cm3.h **** 
1171:../system/include/cmsis/core_cm3.h **** #define MPU_TYPE_SEPARATE_Pos               0U                                            /*!< MPU 
1172:../system/include/cmsis/core_cm3.h **** #define MPU_TYPE_SEPARATE_Msk              (1UL /*<< MPU_TYPE_SEPARATE_Pos*/)             /*!< MPU 
1173:../system/include/cmsis/core_cm3.h **** 
1174:../system/include/cmsis/core_cm3.h **** /* MPU Control Register Definitions */
1175:../system/include/cmsis/core_cm3.h **** #define MPU_CTRL_PRIVDEFENA_Pos             2U                                            /*!< MPU 
1176:../system/include/cmsis/core_cm3.h **** #define MPU_CTRL_PRIVDEFENA_Msk            (1UL << MPU_CTRL_PRIVDEFENA_Pos)               /*!< MPU 
1177:../system/include/cmsis/core_cm3.h **** 
1178:../system/include/cmsis/core_cm3.h **** #define MPU_CTRL_HFNMIENA_Pos               1U                                            /*!< MPU 
1179:../system/include/cmsis/core_cm3.h **** #define MPU_CTRL_HFNMIENA_Msk              (1UL << MPU_CTRL_HFNMIENA_Pos)                 /*!< MPU 
1180:../system/include/cmsis/core_cm3.h **** 
1181:../system/include/cmsis/core_cm3.h **** #define MPU_CTRL_ENABLE_Pos                 0U                                            /*!< MPU 
1182:../system/include/cmsis/core_cm3.h **** #define MPU_CTRL_ENABLE_Msk                (1UL /*<< MPU_CTRL_ENABLE_Pos*/)               /*!< MPU 
1183:../system/include/cmsis/core_cm3.h **** 
1184:../system/include/cmsis/core_cm3.h **** /* MPU Region Number Register Definitions */
1185:../system/include/cmsis/core_cm3.h **** #define MPU_RNR_REGION_Pos                  0U                                            /*!< MPU 
1186:../system/include/cmsis/core_cm3.h **** #define MPU_RNR_REGION_Msk                 (0xFFUL /*<< MPU_RNR_REGION_Pos*/)             /*!< MPU 
1187:../system/include/cmsis/core_cm3.h **** 
1188:../system/include/cmsis/core_cm3.h **** /* MPU Region Base Address Register Definitions */
1189:../system/include/cmsis/core_cm3.h **** #define MPU_RBAR_ADDR_Pos                   5U                                            /*!< MPU 
1190:../system/include/cmsis/core_cm3.h **** #define MPU_RBAR_ADDR_Msk                  (0x7FFFFFFUL << MPU_RBAR_ADDR_Pos)             /*!< MPU 
1191:../system/include/cmsis/core_cm3.h **** 
1192:../system/include/cmsis/core_cm3.h **** #define MPU_RBAR_VALID_Pos                  4U                                            /*!< MPU 
1193:../system/include/cmsis/core_cm3.h **** #define MPU_RBAR_VALID_Msk                 (1UL << MPU_RBAR_VALID_Pos)                    /*!< MPU 
1194:../system/include/cmsis/core_cm3.h **** 
1195:../system/include/cmsis/core_cm3.h **** #define MPU_RBAR_REGION_Pos                 0U                                            /*!< MPU 
1196:../system/include/cmsis/core_cm3.h **** #define MPU_RBAR_REGION_Msk                (0xFUL /*<< MPU_RBAR_REGION_Pos*/)             /*!< MPU 
1197:../system/include/cmsis/core_cm3.h **** 
1198:../system/include/cmsis/core_cm3.h **** /* MPU Region Attribute and Size Register Definitions */
1199:../system/include/cmsis/core_cm3.h **** #define MPU_RASR_ATTRS_Pos                 16U                                            /*!< MPU 
1200:../system/include/cmsis/core_cm3.h **** #define MPU_RASR_ATTRS_Msk                 (0xFFFFUL << MPU_RASR_ATTRS_Pos)               /*!< MPU 
1201:../system/include/cmsis/core_cm3.h **** 
1202:../system/include/cmsis/core_cm3.h **** #define MPU_RASR_XN_Pos                    28U                                            /*!< MPU 
1203:../system/include/cmsis/core_cm3.h **** #define MPU_RASR_XN_Msk                    (1UL << MPU_RASR_XN_Pos)                       /*!< MPU 
1204:../system/include/cmsis/core_cm3.h **** 
1205:../system/include/cmsis/core_cm3.h **** #define MPU_RASR_AP_Pos                    24U                                            /*!< MPU 
1206:../system/include/cmsis/core_cm3.h **** #define MPU_RASR_AP_Msk                    (0x7UL << MPU_RASR_AP_Pos)                     /*!< MPU 
1207:../system/include/cmsis/core_cm3.h **** 
1208:../system/include/cmsis/core_cm3.h **** #define MPU_RASR_TEX_Pos                   19U                                            /*!< MPU 
1209:../system/include/cmsis/core_cm3.h **** #define MPU_RASR_TEX_Msk                   (0x7UL << MPU_RASR_TEX_Pos)                    /*!< MPU 
1210:../system/include/cmsis/core_cm3.h **** 
1211:../system/include/cmsis/core_cm3.h **** #define MPU_RASR_S_Pos                     18U                                            /*!< MPU 
1212:../system/include/cmsis/core_cm3.h **** #define MPU_RASR_S_Msk                     (1UL << MPU_RASR_S_Pos)                        /*!< MPU 
1213:../system/include/cmsis/core_cm3.h **** 
1214:../system/include/cmsis/core_cm3.h **** #define MPU_RASR_C_Pos                     17U                                            /*!< MPU 
1215:../system/include/cmsis/core_cm3.h **** #define MPU_RASR_C_Msk                     (1UL << MPU_RASR_C_Pos)                        /*!< MPU 
1216:../system/include/cmsis/core_cm3.h **** 
1217:../system/include/cmsis/core_cm3.h **** #define MPU_RASR_B_Pos                     16U                                            /*!< MPU 
1218:../system/include/cmsis/core_cm3.h **** #define MPU_RASR_B_Msk                     (1UL << MPU_RASR_B_Pos)                        /*!< MPU 
1219:../system/include/cmsis/core_cm3.h **** 
1220:../system/include/cmsis/core_cm3.h **** #define MPU_RASR_SRD_Pos                    8U                                            /*!< MPU 
1221:../system/include/cmsis/core_cm3.h **** #define MPU_RASR_SRD_Msk                   (0xFFUL << MPU_RASR_SRD_Pos)                   /*!< MPU 
1222:../system/include/cmsis/core_cm3.h **** 
1223:../system/include/cmsis/core_cm3.h **** #define MPU_RASR_SIZE_Pos                   1U                                            /*!< MPU 
1224:../system/include/cmsis/core_cm3.h **** #define MPU_RASR_SIZE_Msk                  (0x1FUL << MPU_RASR_SIZE_Pos)                  /*!< MPU 
1225:../system/include/cmsis/core_cm3.h **** 
1226:../system/include/cmsis/core_cm3.h **** #define MPU_RASR_ENABLE_Pos                 0U                                            /*!< MPU 
1227:../system/include/cmsis/core_cm3.h **** #define MPU_RASR_ENABLE_Msk                (1UL /*<< MPU_RASR_ENABLE_Pos*/)               /*!< MPU 
1228:../system/include/cmsis/core_cm3.h **** 
1229:../system/include/cmsis/core_cm3.h **** /*@} end of group CMSIS_MPU */
1230:../system/include/cmsis/core_cm3.h **** #endif
1231:../system/include/cmsis/core_cm3.h **** 
1232:../system/include/cmsis/core_cm3.h **** 
1233:../system/include/cmsis/core_cm3.h **** /**
1234:../system/include/cmsis/core_cm3.h ****   \ingroup  CMSIS_core_register
1235:../system/include/cmsis/core_cm3.h ****   \defgroup CMSIS_CoreDebug       Core Debug Registers (CoreDebug)
1236:../system/include/cmsis/core_cm3.h ****   \brief    Type definitions for the Core Debug Registers
1237:../system/include/cmsis/core_cm3.h ****   @{
1238:../system/include/cmsis/core_cm3.h ****  */
1239:../system/include/cmsis/core_cm3.h **** 
1240:../system/include/cmsis/core_cm3.h **** /**
1241:../system/include/cmsis/core_cm3.h ****   \brief  Structure type to access the Core Debug Register (CoreDebug).
1242:../system/include/cmsis/core_cm3.h ****  */
1243:../system/include/cmsis/core_cm3.h **** typedef struct
1244:../system/include/cmsis/core_cm3.h **** {
1245:../system/include/cmsis/core_cm3.h ****   __IOM uint32_t DHCSR;                  /*!< Offset: 0x000 (R/W)  Debug Halting Control and Status
1246:../system/include/cmsis/core_cm3.h ****   __OM  uint32_t DCRSR;                  /*!< Offset: 0x004 ( /W)  Debug Core Register Selector Reg
1247:../system/include/cmsis/core_cm3.h ****   __IOM uint32_t DCRDR;                  /*!< Offset: 0x008 (R/W)  Debug Core Register Data Registe
1248:../system/include/cmsis/core_cm3.h ****   __IOM uint32_t DEMCR;                  /*!< Offset: 0x00C (R/W)  Debug Exception and Monitor Cont
1249:../system/include/cmsis/core_cm3.h **** } CoreDebug_Type;
1250:../system/include/cmsis/core_cm3.h **** 
1251:../system/include/cmsis/core_cm3.h **** /* Debug Halting Control and Status Register Definitions */
1252:../system/include/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_DBGKEY_Pos         16U                                            /*!< Core
1253:../system/include/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_DBGKEY_Msk         (0xFFFFUL << CoreDebug_DHCSR_DBGKEY_Pos)       /*!< Core
1254:../system/include/cmsis/core_cm3.h **** 
1255:../system/include/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_S_RESET_ST_Pos     25U                                            /*!< Core
1256:../system/include/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_S_RESET_ST_Msk     (1UL << CoreDebug_DHCSR_S_RESET_ST_Pos)        /*!< Core
1257:../system/include/cmsis/core_cm3.h **** 
1258:../system/include/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Pos    24U                                            /*!< Core
1259:../system/include/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Msk    (1UL << CoreDebug_DHCSR_S_RETIRE_ST_Pos)       /*!< Core
1260:../system/include/cmsis/core_cm3.h **** 
1261:../system/include/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_S_LOCKUP_Pos       19U                                            /*!< Core
1262:../system/include/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_S_LOCKUP_Msk       (1UL << CoreDebug_DHCSR_S_LOCKUP_Pos)          /*!< Core
1263:../system/include/cmsis/core_cm3.h **** 
1264:../system/include/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_S_SLEEP_Pos        18U                                            /*!< Core
1265:../system/include/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_S_SLEEP_Msk        (1UL << CoreDebug_DHCSR_S_SLEEP_Pos)           /*!< Core
1266:../system/include/cmsis/core_cm3.h **** 
1267:../system/include/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_S_HALT_Pos         17U                                            /*!< Core
1268:../system/include/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_S_HALT_Msk         (1UL << CoreDebug_DHCSR_S_HALT_Pos)            /*!< Core
1269:../system/include/cmsis/core_cm3.h **** 
1270:../system/include/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_S_REGRDY_Pos       16U                                            /*!< Core
1271:../system/include/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_S_REGRDY_Msk       (1UL << CoreDebug_DHCSR_S_REGRDY_Pos)          /*!< Core
1272:../system/include/cmsis/core_cm3.h **** 
1273:../system/include/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Pos     5U                                            /*!< Core
1274:../system/include/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Msk    (1UL << CoreDebug_DHCSR_C_SNAPSTALL_Pos)       /*!< Core
1275:../system/include/cmsis/core_cm3.h **** 
1276:../system/include/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_C_MASKINTS_Pos      3U                                            /*!< Core
1277:../system/include/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_C_MASKINTS_Msk     (1UL << CoreDebug_DHCSR_C_MASKINTS_Pos)        /*!< Core
1278:../system/include/cmsis/core_cm3.h **** 
1279:../system/include/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_C_STEP_Pos          2U                                            /*!< Core
1280:../system/include/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_C_STEP_Msk         (1UL << CoreDebug_DHCSR_C_STEP_Pos)            /*!< Core
1281:../system/include/cmsis/core_cm3.h **** 
1282:../system/include/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_C_HALT_Pos          1U                                            /*!< Core
1283:../system/include/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_C_HALT_Msk         (1UL << CoreDebug_DHCSR_C_HALT_Pos)            /*!< Core
1284:../system/include/cmsis/core_cm3.h **** 
1285:../system/include/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Pos       0U                                            /*!< Core
1286:../system/include/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Msk      (1UL /*<< CoreDebug_DHCSR_C_DEBUGEN_Pos*/)     /*!< Core
1287:../system/include/cmsis/core_cm3.h **** 
1288:../system/include/cmsis/core_cm3.h **** /* Debug Core Register Selector Register Definitions */
1289:../system/include/cmsis/core_cm3.h **** #define CoreDebug_DCRSR_REGWnR_Pos         16U                                            /*!< Core
1290:../system/include/cmsis/core_cm3.h **** #define CoreDebug_DCRSR_REGWnR_Msk         (1UL << CoreDebug_DCRSR_REGWnR_Pos)            /*!< Core
1291:../system/include/cmsis/core_cm3.h **** 
1292:../system/include/cmsis/core_cm3.h **** #define CoreDebug_DCRSR_REGSEL_Pos          0U                                            /*!< Core
1293:../system/include/cmsis/core_cm3.h **** #define CoreDebug_DCRSR_REGSEL_Msk         (0x1FUL /*<< CoreDebug_DCRSR_REGSEL_Pos*/)     /*!< Core
1294:../system/include/cmsis/core_cm3.h **** 
1295:../system/include/cmsis/core_cm3.h **** /* Debug Exception and Monitor Control Register Definitions */
1296:../system/include/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_TRCENA_Pos         24U                                            /*!< Core
1297:../system/include/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_TRCENA_Msk         (1UL << CoreDebug_DEMCR_TRCENA_Pos)            /*!< Core
1298:../system/include/cmsis/core_cm3.h **** 
1299:../system/include/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_MON_REQ_Pos        19U                                            /*!< Core
1300:../system/include/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_MON_REQ_Msk        (1UL << CoreDebug_DEMCR_MON_REQ_Pos)           /*!< Core
1301:../system/include/cmsis/core_cm3.h **** 
1302:../system/include/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_MON_STEP_Pos       18U                                            /*!< Core
1303:../system/include/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_MON_STEP_Msk       (1UL << CoreDebug_DEMCR_MON_STEP_Pos)          /*!< Core
1304:../system/include/cmsis/core_cm3.h **** 
1305:../system/include/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_MON_PEND_Pos       17U                                            /*!< Core
1306:../system/include/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_MON_PEND_Msk       (1UL << CoreDebug_DEMCR_MON_PEND_Pos)          /*!< Core
1307:../system/include/cmsis/core_cm3.h **** 
1308:../system/include/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_MON_EN_Pos         16U                                            /*!< Core
1309:../system/include/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_MON_EN_Msk         (1UL << CoreDebug_DEMCR_MON_EN_Pos)            /*!< Core
1310:../system/include/cmsis/core_cm3.h **** 
1311:../system/include/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_VC_HARDERR_Pos     10U                                            /*!< Core
1312:../system/include/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_VC_HARDERR_Msk     (1UL << CoreDebug_DEMCR_VC_HARDERR_Pos)        /*!< Core
1313:../system/include/cmsis/core_cm3.h **** 
1314:../system/include/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_VC_INTERR_Pos       9U                                            /*!< Core
1315:../system/include/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_VC_INTERR_Msk      (1UL << CoreDebug_DEMCR_VC_INTERR_Pos)         /*!< Core
1316:../system/include/cmsis/core_cm3.h **** 
1317:../system/include/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_VC_BUSERR_Pos       8U                                            /*!< Core
1318:../system/include/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_VC_BUSERR_Msk      (1UL << CoreDebug_DEMCR_VC_BUSERR_Pos)         /*!< Core
1319:../system/include/cmsis/core_cm3.h **** 
1320:../system/include/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_VC_STATERR_Pos      7U                                            /*!< Core
1321:../system/include/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_VC_STATERR_Msk     (1UL << CoreDebug_DEMCR_VC_STATERR_Pos)        /*!< Core
1322:../system/include/cmsis/core_cm3.h **** 
1323:../system/include/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_VC_CHKERR_Pos       6U                                            /*!< Core
1324:../system/include/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_VC_CHKERR_Msk      (1UL << CoreDebug_DEMCR_VC_CHKERR_Pos)         /*!< Core
1325:../system/include/cmsis/core_cm3.h **** 
1326:../system/include/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Pos      5U                                            /*!< Core
1327:../system/include/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Msk     (1UL << CoreDebug_DEMCR_VC_NOCPERR_Pos)        /*!< Core
1328:../system/include/cmsis/core_cm3.h **** 
1329:../system/include/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_VC_MMERR_Pos        4U                                            /*!< Core
1330:../system/include/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_VC_MMERR_Msk       (1UL << CoreDebug_DEMCR_VC_MMERR_Pos)          /*!< Core
1331:../system/include/cmsis/core_cm3.h **** 
1332:../system/include/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_VC_CORERESET_Pos    0U                                            /*!< Core
1333:../system/include/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_VC_CORERESET_Msk   (1UL /*<< CoreDebug_DEMCR_VC_CORERESET_Pos*/)  /*!< Core
1334:../system/include/cmsis/core_cm3.h **** 
1335:../system/include/cmsis/core_cm3.h **** /*@} end of group CMSIS_CoreDebug */
1336:../system/include/cmsis/core_cm3.h **** 
1337:../system/include/cmsis/core_cm3.h **** 
1338:../system/include/cmsis/core_cm3.h **** /**
1339:../system/include/cmsis/core_cm3.h ****   \ingroup    CMSIS_core_register
1340:../system/include/cmsis/core_cm3.h ****   \defgroup   CMSIS_core_bitfield     Core register bit field macros
1341:../system/include/cmsis/core_cm3.h ****   \brief      Macros for use with bit field definitions (xxx_Pos, xxx_Msk).
1342:../system/include/cmsis/core_cm3.h ****   @{
1343:../system/include/cmsis/core_cm3.h ****  */
1344:../system/include/cmsis/core_cm3.h **** 
1345:../system/include/cmsis/core_cm3.h **** /**
1346:../system/include/cmsis/core_cm3.h ****   \brief   Mask and shift a bit field value for use in a register bit range.
1347:../system/include/cmsis/core_cm3.h ****   \param[in] field  Name of the register bit field.
1348:../system/include/cmsis/core_cm3.h ****   \param[in] value  Value of the bit field.
1349:../system/include/cmsis/core_cm3.h ****   \return           Masked and shifted value.
1350:../system/include/cmsis/core_cm3.h **** */
1351:../system/include/cmsis/core_cm3.h **** #define _VAL2FLD(field, value)    ((value << field ## _Pos) & field ## _Msk)
1352:../system/include/cmsis/core_cm3.h **** 
1353:../system/include/cmsis/core_cm3.h **** /**
1354:../system/include/cmsis/core_cm3.h ****   \brief     Mask and shift a register value to extract a bit filed value.
1355:../system/include/cmsis/core_cm3.h ****   \param[in] field  Name of the register bit field.
1356:../system/include/cmsis/core_cm3.h ****   \param[in] value  Value of register.
1357:../system/include/cmsis/core_cm3.h ****   \return           Masked and shifted bit field value.
1358:../system/include/cmsis/core_cm3.h **** */
1359:../system/include/cmsis/core_cm3.h **** #define _FLD2VAL(field, value)    ((value & field ## _Msk) >> field ## _Pos)
1360:../system/include/cmsis/core_cm3.h **** 
1361:../system/include/cmsis/core_cm3.h **** /*@} end of group CMSIS_core_bitfield */
1362:../system/include/cmsis/core_cm3.h **** 
1363:../system/include/cmsis/core_cm3.h **** 
1364:../system/include/cmsis/core_cm3.h **** /**
1365:../system/include/cmsis/core_cm3.h ****   \ingroup    CMSIS_core_register
1366:../system/include/cmsis/core_cm3.h ****   \defgroup   CMSIS_core_base     Core Definitions
1367:../system/include/cmsis/core_cm3.h ****   \brief      Definitions for base addresses, unions, and structures.
1368:../system/include/cmsis/core_cm3.h ****   @{
1369:../system/include/cmsis/core_cm3.h ****  */
1370:../system/include/cmsis/core_cm3.h **** 
1371:../system/include/cmsis/core_cm3.h **** /* Memory mapping of Cortex-M3 Hardware */
1372:../system/include/cmsis/core_cm3.h **** #define SCS_BASE            (0xE000E000UL)                            /*!< System Control Space Bas
1373:../system/include/cmsis/core_cm3.h **** #define ITM_BASE            (0xE0000000UL)                            /*!< ITM Base Address */
1374:../system/include/cmsis/core_cm3.h **** #define DWT_BASE            (0xE0001000UL)                            /*!< DWT Base Address */
1375:../system/include/cmsis/core_cm3.h **** #define TPI_BASE            (0xE0040000UL)                            /*!< TPI Base Address */
1376:../system/include/cmsis/core_cm3.h **** #define CoreDebug_BASE      (0xE000EDF0UL)                            /*!< Core Debug Base Address 
1377:../system/include/cmsis/core_cm3.h **** #define SysTick_BASE        (SCS_BASE +  0x0010UL)                    /*!< SysTick Base Address */
1378:../system/include/cmsis/core_cm3.h **** #define NVIC_BASE           (SCS_BASE +  0x0100UL)                    /*!< NVIC Base Address */
1379:../system/include/cmsis/core_cm3.h **** #define SCB_BASE            (SCS_BASE +  0x0D00UL)                    /*!< System Control Block Bas
1380:../system/include/cmsis/core_cm3.h **** 
1381:../system/include/cmsis/core_cm3.h **** #define SCnSCB              ((SCnSCB_Type    *)     SCS_BASE      )   /*!< System control Register 
1382:../system/include/cmsis/core_cm3.h **** #define SCB                 ((SCB_Type       *)     SCB_BASE      )   /*!< SCB configuration struct
1383:../system/include/cmsis/core_cm3.h **** #define SysTick             ((SysTick_Type   *)     SysTick_BASE  )   /*!< SysTick configuration st
1384:../system/include/cmsis/core_cm3.h **** #define NVIC                ((NVIC_Type      *)     NVIC_BASE     )   /*!< NVIC configuration struc
1385:../system/include/cmsis/core_cm3.h **** #define ITM                 ((ITM_Type       *)     ITM_BASE      )   /*!< ITM configuration struct
1386:../system/include/cmsis/core_cm3.h **** #define DWT                 ((DWT_Type       *)     DWT_BASE      )   /*!< DWT configuration struct
1387:../system/include/cmsis/core_cm3.h **** #define TPI                 ((TPI_Type       *)     TPI_BASE      )   /*!< TPI configuration struct
1388:../system/include/cmsis/core_cm3.h **** #define CoreDebug           ((CoreDebug_Type *)     CoreDebug_BASE)   /*!< Core Debug configuration
1389:../system/include/cmsis/core_cm3.h **** 
1390:../system/include/cmsis/core_cm3.h **** #if (__MPU_PRESENT == 1U)
1391:../system/include/cmsis/core_cm3.h ****   #define MPU_BASE          (SCS_BASE +  0x0D90UL)                    /*!< Memory Protection Unit *
1392:../system/include/cmsis/core_cm3.h ****   #define MPU               ((MPU_Type       *)     MPU_BASE      )   /*!< Memory Protection Unit *
1393:../system/include/cmsis/core_cm3.h **** #endif
1394:../system/include/cmsis/core_cm3.h **** 
1395:../system/include/cmsis/core_cm3.h **** /*@} */
1396:../system/include/cmsis/core_cm3.h **** 
1397:../system/include/cmsis/core_cm3.h **** 
1398:../system/include/cmsis/core_cm3.h **** 
1399:../system/include/cmsis/core_cm3.h **** /*******************************************************************************
1400:../system/include/cmsis/core_cm3.h ****  *                Hardware Abstraction Layer
1401:../system/include/cmsis/core_cm3.h ****   Core Function Interface contains:
1402:../system/include/cmsis/core_cm3.h ****   - Core NVIC Functions
1403:../system/include/cmsis/core_cm3.h ****   - Core SysTick Functions
1404:../system/include/cmsis/core_cm3.h ****   - Core Debug Functions
1405:../system/include/cmsis/core_cm3.h ****   - Core Register Access Functions
1406:../system/include/cmsis/core_cm3.h ****  ******************************************************************************/
1407:../system/include/cmsis/core_cm3.h **** /**
1408:../system/include/cmsis/core_cm3.h ****   \defgroup CMSIS_Core_FunctionInterface Functions and Instructions Reference
1409:../system/include/cmsis/core_cm3.h **** */
1410:../system/include/cmsis/core_cm3.h **** 
1411:../system/include/cmsis/core_cm3.h **** 
1412:../system/include/cmsis/core_cm3.h **** 
1413:../system/include/cmsis/core_cm3.h **** /* ##########################   NVIC functions  #################################### */
1414:../system/include/cmsis/core_cm3.h **** /**
1415:../system/include/cmsis/core_cm3.h ****   \ingroup  CMSIS_Core_FunctionInterface
1416:../system/include/cmsis/core_cm3.h ****   \defgroup CMSIS_Core_NVICFunctions NVIC Functions
1417:../system/include/cmsis/core_cm3.h ****   \brief    Functions that manage interrupts and exceptions via the NVIC.
1418:../system/include/cmsis/core_cm3.h ****   @{
1419:../system/include/cmsis/core_cm3.h ****  */
1420:../system/include/cmsis/core_cm3.h **** 
1421:../system/include/cmsis/core_cm3.h **** /**
1422:../system/include/cmsis/core_cm3.h ****   \brief   Set Priority Grouping
1423:../system/include/cmsis/core_cm3.h ****   \details Sets the priority grouping field using the required unlock sequence.
1424:../system/include/cmsis/core_cm3.h ****            The parameter PriorityGroup is assigned to the field SCB->AIRCR [10:8] PRIGROUP field.
1425:../system/include/cmsis/core_cm3.h ****            Only values from 0..7 are used.
1426:../system/include/cmsis/core_cm3.h ****            In case of a conflict between priority grouping and available
1427:../system/include/cmsis/core_cm3.h ****            priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
1428:../system/include/cmsis/core_cm3.h ****   \param [in]      PriorityGroup  Priority grouping field.
1429:../system/include/cmsis/core_cm3.h ****  */
1430:../system/include/cmsis/core_cm3.h **** __STATIC_INLINE void NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
1431:../system/include/cmsis/core_cm3.h **** {
1432:../system/include/cmsis/core_cm3.h ****   uint32_t reg_value;
1433:../system/include/cmsis/core_cm3.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);             /* only values 0..7 a
1434:../system/include/cmsis/core_cm3.h **** 
1435:../system/include/cmsis/core_cm3.h ****   reg_value  =  SCB->AIRCR;                                                   /* read old register 
1436:../system/include/cmsis/core_cm3.h ****   reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to chan
1437:../system/include/cmsis/core_cm3.h ****   reg_value  =  (reg_value                                   |
1438:../system/include/cmsis/core_cm3.h ****                 ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
1439:../system/include/cmsis/core_cm3.h ****                 (PriorityGroupTmp << 8U)                      );              /* Insert write key a
1440:../system/include/cmsis/core_cm3.h ****   SCB->AIRCR =  reg_value;
1441:../system/include/cmsis/core_cm3.h **** }
1442:../system/include/cmsis/core_cm3.h **** 
1443:../system/include/cmsis/core_cm3.h **** 
1444:../system/include/cmsis/core_cm3.h **** /**
1445:../system/include/cmsis/core_cm3.h ****   \brief   Get Priority Grouping
1446:../system/include/cmsis/core_cm3.h ****   \details Reads the priority grouping field from the NVIC Interrupt Controller.
1447:../system/include/cmsis/core_cm3.h ****   \return                Priority grouping field (SCB->AIRCR [10:8] PRIGROUP field).
1448:../system/include/cmsis/core_cm3.h ****  */
1449:../system/include/cmsis/core_cm3.h **** __STATIC_INLINE uint32_t NVIC_GetPriorityGrouping(void)
1450:../system/include/cmsis/core_cm3.h **** {
1451:../system/include/cmsis/core_cm3.h ****   return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
1452:../system/include/cmsis/core_cm3.h **** }
1453:../system/include/cmsis/core_cm3.h **** 
1454:../system/include/cmsis/core_cm3.h **** 
1455:../system/include/cmsis/core_cm3.h **** /**
1456:../system/include/cmsis/core_cm3.h ****   \brief   Enable External Interrupt
1457:../system/include/cmsis/core_cm3.h ****   \details Enables a device-specific interrupt in the NVIC interrupt controller.
1458:../system/include/cmsis/core_cm3.h ****   \param [in]      IRQn  External interrupt number. Value cannot be negative.
1459:../system/include/cmsis/core_cm3.h ****  */
1460:../system/include/cmsis/core_cm3.h **** __STATIC_INLINE void NVIC_EnableIRQ(IRQn_Type IRQn)
1461:../system/include/cmsis/core_cm3.h **** {
1462:../system/include/cmsis/core_cm3.h ****   NVIC->ISER[(((uint32_t)(int32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)(int32_t)IRQn) & 0
1463:../system/include/cmsis/core_cm3.h **** }
1464:../system/include/cmsis/core_cm3.h **** 
1465:../system/include/cmsis/core_cm3.h **** 
1466:../system/include/cmsis/core_cm3.h **** /**
1467:../system/include/cmsis/core_cm3.h ****   \brief   Disable External Interrupt
1468:../system/include/cmsis/core_cm3.h ****   \details Disables a device-specific interrupt in the NVIC interrupt controller.
1469:../system/include/cmsis/core_cm3.h ****   \param [in]      IRQn  External interrupt number. Value cannot be negative.
1470:../system/include/cmsis/core_cm3.h ****  */
1471:../system/include/cmsis/core_cm3.h **** __STATIC_INLINE void NVIC_DisableIRQ(IRQn_Type IRQn)
1472:../system/include/cmsis/core_cm3.h **** {
1473:../system/include/cmsis/core_cm3.h ****   NVIC->ICER[(((uint32_t)(int32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)(int32_t)IRQn) & 0
1474:../system/include/cmsis/core_cm3.h **** }
1475:../system/include/cmsis/core_cm3.h **** 
1476:../system/include/cmsis/core_cm3.h **** 
1477:../system/include/cmsis/core_cm3.h **** /**
1478:../system/include/cmsis/core_cm3.h ****   \brief   Get Pending Interrupt
1479:../system/include/cmsis/core_cm3.h ****   \details Reads the pending register in the NVIC and returns the pending bit for the specified int
1480:../system/include/cmsis/core_cm3.h ****   \param [in]      IRQn  Interrupt number.
1481:../system/include/cmsis/core_cm3.h ****   \return             0  Interrupt status is not pending.
1482:../system/include/cmsis/core_cm3.h ****   \return             1  Interrupt status is pending.
1483:../system/include/cmsis/core_cm3.h ****  */
1484:../system/include/cmsis/core_cm3.h **** __STATIC_INLINE uint32_t NVIC_GetPendingIRQ(IRQn_Type IRQn)
1485:../system/include/cmsis/core_cm3.h **** {
1486:../system/include/cmsis/core_cm3.h ****   return((uint32_t)(((NVIC->ISPR[(((uint32_t)(int32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)(int32_t
1487:../system/include/cmsis/core_cm3.h **** }
1488:../system/include/cmsis/core_cm3.h **** 
1489:../system/include/cmsis/core_cm3.h **** 
1490:../system/include/cmsis/core_cm3.h **** /**
1491:../system/include/cmsis/core_cm3.h ****   \brief   Set Pending Interrupt
1492:../system/include/cmsis/core_cm3.h ****   \details Sets the pending bit of an external interrupt.
1493:../system/include/cmsis/core_cm3.h ****   \param [in]      IRQn  Interrupt number. Value cannot be negative.
1494:../system/include/cmsis/core_cm3.h ****  */
1495:../system/include/cmsis/core_cm3.h **** __STATIC_INLINE void NVIC_SetPendingIRQ(IRQn_Type IRQn)
1496:../system/include/cmsis/core_cm3.h **** {
1497:../system/include/cmsis/core_cm3.h ****   NVIC->ISPR[(((uint32_t)(int32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)(int32_t)IRQn) & 0
1498:../system/include/cmsis/core_cm3.h **** }
1499:../system/include/cmsis/core_cm3.h **** 
1500:../system/include/cmsis/core_cm3.h **** 
1501:../system/include/cmsis/core_cm3.h **** /**
1502:../system/include/cmsis/core_cm3.h ****   \brief   Clear Pending Interrupt
1503:../system/include/cmsis/core_cm3.h ****   \details Clears the pending bit of an external interrupt.
1504:../system/include/cmsis/core_cm3.h ****   \param [in]      IRQn  External interrupt number. Value cannot be negative.
1505:../system/include/cmsis/core_cm3.h ****  */
1506:../system/include/cmsis/core_cm3.h **** __STATIC_INLINE void NVIC_ClearPendingIRQ(IRQn_Type IRQn)
1507:../system/include/cmsis/core_cm3.h **** {
1508:../system/include/cmsis/core_cm3.h ****   NVIC->ICPR[(((uint32_t)(int32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)(int32_t)IRQn) & 0
1509:../system/include/cmsis/core_cm3.h **** }
1510:../system/include/cmsis/core_cm3.h **** 
1511:../system/include/cmsis/core_cm3.h **** 
1512:../system/include/cmsis/core_cm3.h **** /**
1513:../system/include/cmsis/core_cm3.h ****   \brief   Get Active Interrupt
1514:../system/include/cmsis/core_cm3.h ****   \details Reads the active register in NVIC and returns the active bit.
1515:../system/include/cmsis/core_cm3.h ****   \param [in]      IRQn  Interrupt number.
1516:../system/include/cmsis/core_cm3.h ****   \return             0  Interrupt status is not active.
1517:../system/include/cmsis/core_cm3.h ****   \return             1  Interrupt status is active.
1518:../system/include/cmsis/core_cm3.h ****  */
1519:../system/include/cmsis/core_cm3.h **** __STATIC_INLINE uint32_t NVIC_GetActive(IRQn_Type IRQn)
1520:../system/include/cmsis/core_cm3.h **** {
1521:../system/include/cmsis/core_cm3.h ****   return((uint32_t)(((NVIC->IABR[(((uint32_t)(int32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)(int32_t
1522:../system/include/cmsis/core_cm3.h **** }
1523:../system/include/cmsis/core_cm3.h **** 
1524:../system/include/cmsis/core_cm3.h **** 
1525:../system/include/cmsis/core_cm3.h **** /**
1526:../system/include/cmsis/core_cm3.h ****   \brief   Set Interrupt Priority
1527:../system/include/cmsis/core_cm3.h ****   \details Sets the priority of an interrupt.
1528:../system/include/cmsis/core_cm3.h ****   \note    The priority cannot be set for every core interrupt.
1529:../system/include/cmsis/core_cm3.h ****   \param [in]      IRQn  Interrupt number.
1530:../system/include/cmsis/core_cm3.h ****   \param [in]  priority  Priority to set.
1531:../system/include/cmsis/core_cm3.h ****  */
1532:../system/include/cmsis/core_cm3.h **** __STATIC_INLINE void NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
1533:../system/include/cmsis/core_cm3.h **** {
1534:../system/include/cmsis/core_cm3.h ****   if ((int32_t)(IRQn) < 0)
1535:../system/include/cmsis/core_cm3.h ****   {
1536:../system/include/cmsis/core_cm3.h ****     SCB->SHP[(((uint32_t)(int32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BI
1537:../system/include/cmsis/core_cm3.h ****   }
1538:../system/include/cmsis/core_cm3.h ****   else
1539:../system/include/cmsis/core_cm3.h ****   {
1540:../system/include/cmsis/core_cm3.h ****     NVIC->IP[((uint32_t)(int32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BI
1541:../system/include/cmsis/core_cm3.h ****   }
1542:../system/include/cmsis/core_cm3.h **** }
1543:../system/include/cmsis/core_cm3.h **** 
1544:../system/include/cmsis/core_cm3.h **** 
1545:../system/include/cmsis/core_cm3.h **** /**
1546:../system/include/cmsis/core_cm3.h ****   \brief   Get Interrupt Priority
1547:../system/include/cmsis/core_cm3.h ****   \details Reads the priority of an interrupt.
1548:../system/include/cmsis/core_cm3.h ****            The interrupt number can be positive to specify an external (device specific) interrupt,
1549:../system/include/cmsis/core_cm3.h ****            or negative to specify an internal (core) interrupt.
1550:../system/include/cmsis/core_cm3.h ****   \param [in]   IRQn  Interrupt number.
1551:../system/include/cmsis/core_cm3.h ****   \return             Interrupt Priority.
1552:../system/include/cmsis/core_cm3.h ****                       Value is aligned automatically to the implemented priority bits of the microc
1553:../system/include/cmsis/core_cm3.h ****  */
1554:../system/include/cmsis/core_cm3.h **** __STATIC_INLINE uint32_t NVIC_GetPriority(IRQn_Type IRQn)
1555:../system/include/cmsis/core_cm3.h **** {
1556:../system/include/cmsis/core_cm3.h **** 
1557:../system/include/cmsis/core_cm3.h ****   if ((int32_t)(IRQn) < 0)
1558:../system/include/cmsis/core_cm3.h ****   {
1559:../system/include/cmsis/core_cm3.h ****     return(((uint32_t)SCB->SHP[(((uint32_t)(int32_t)IRQn) & 0xFUL)-4UL] >> (8U - __NVIC_PRIO_BITS))
1560:../system/include/cmsis/core_cm3.h ****   }
1561:../system/include/cmsis/core_cm3.h ****   else
1562:../system/include/cmsis/core_cm3.h ****   {
1563:../system/include/cmsis/core_cm3.h ****     return(((uint32_t)NVIC->IP[((uint32_t)(int32_t)IRQn)]               >> (8U - __NVIC_PRIO_BITS))
1564:../system/include/cmsis/core_cm3.h ****   }
1565:../system/include/cmsis/core_cm3.h **** }
1566:../system/include/cmsis/core_cm3.h **** 
1567:../system/include/cmsis/core_cm3.h **** 
1568:../system/include/cmsis/core_cm3.h **** /**
1569:../system/include/cmsis/core_cm3.h ****   \brief   Encode Priority
1570:../system/include/cmsis/core_cm3.h ****   \details Encodes the priority for an interrupt with the given priority group,
1571:../system/include/cmsis/core_cm3.h ****            preemptive priority value, and subpriority value.
1572:../system/include/cmsis/core_cm3.h ****            In case of a conflict between priority grouping and available
1573:../system/include/cmsis/core_cm3.h ****            priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
1574:../system/include/cmsis/core_cm3.h ****   \param [in]     PriorityGroup  Used priority group.
1575:../system/include/cmsis/core_cm3.h ****   \param [in]   PreemptPriority  Preemptive priority value (starting from 0).
1576:../system/include/cmsis/core_cm3.h ****   \param [in]       SubPriority  Subpriority value (starting from 0).
1577:../system/include/cmsis/core_cm3.h ****   \return                        Encoded priority. Value can be used in the function \ref NVIC_SetP
1578:../system/include/cmsis/core_cm3.h ****  */
1579:../system/include/cmsis/core_cm3.h **** __STATIC_INLINE uint32_t NVIC_EncodePriority (uint32_t PriorityGroup, uint32_t PreemptPriority, uin
1580:../system/include/cmsis/core_cm3.h **** {
1581:../system/include/cmsis/core_cm3.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used   
1582:../system/include/cmsis/core_cm3.h ****   uint32_t PreemptPriorityBits;
1583:../system/include/cmsis/core_cm3.h ****   uint32_t SubPriorityBits;
1584:../system/include/cmsis/core_cm3.h **** 
1585:../system/include/cmsis/core_cm3.h ****   PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NV
1586:../system/include/cmsis/core_cm3.h ****   SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint
1587:../system/include/cmsis/core_cm3.h **** 
1588:../system/include/cmsis/core_cm3.h ****   return (
1589:../system/include/cmsis/core_cm3.h ****            ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits
1590:../system/include/cmsis/core_cm3.h ****            ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
1591:../system/include/cmsis/core_cm3.h ****          );
1592:../system/include/cmsis/core_cm3.h **** }
1593:../system/include/cmsis/core_cm3.h **** 
1594:../system/include/cmsis/core_cm3.h **** 
1595:../system/include/cmsis/core_cm3.h **** /**
1596:../system/include/cmsis/core_cm3.h ****   \brief   Decode Priority
1597:../system/include/cmsis/core_cm3.h ****   \details Decodes an interrupt priority value with a given priority group to
1598:../system/include/cmsis/core_cm3.h ****            preemptive priority value and subpriority value.
1599:../system/include/cmsis/core_cm3.h ****            In case of a conflict between priority grouping and available
1600:../system/include/cmsis/core_cm3.h ****            priority bits (__NVIC_PRIO_BITS) the smallest possible priority group is set.
1601:../system/include/cmsis/core_cm3.h ****   \param [in]         Priority   Priority value, which can be retrieved with the function \ref NVIC
1602:../system/include/cmsis/core_cm3.h ****   \param [in]     PriorityGroup  Used priority group.
1603:../system/include/cmsis/core_cm3.h ****   \param [out] pPreemptPriority  Preemptive priority value (starting from 0).
1604:../system/include/cmsis/core_cm3.h ****   \param [out]     pSubPriority  Subpriority value (starting from 0).
1605:../system/include/cmsis/core_cm3.h ****  */
1606:../system/include/cmsis/core_cm3.h **** __STATIC_INLINE void NVIC_DecodePriority (uint32_t Priority, uint32_t PriorityGroup, uint32_t* cons
1607:../system/include/cmsis/core_cm3.h **** {
1608:../system/include/cmsis/core_cm3.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used   
1609:../system/include/cmsis/core_cm3.h ****   uint32_t PreemptPriorityBits;
1610:../system/include/cmsis/core_cm3.h ****   uint32_t SubPriorityBits;
1611:../system/include/cmsis/core_cm3.h **** 
1612:../system/include/cmsis/core_cm3.h ****   PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NV
1613:../system/include/cmsis/core_cm3.h ****   SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint
1614:../system/include/cmsis/core_cm3.h **** 
1615:../system/include/cmsis/core_cm3.h ****   *pPreemptPriority = (Priority >> SubPriorityBits) & (uint32_t)((1UL << (PreemptPriorityBits)) - 1
1616:../system/include/cmsis/core_cm3.h ****   *pSubPriority     = (Priority                   ) & (uint32_t)((1UL << (SubPriorityBits    )) - 1
1617:../system/include/cmsis/core_cm3.h **** }
1618:../system/include/cmsis/core_cm3.h **** 
1619:../system/include/cmsis/core_cm3.h **** 
1620:../system/include/cmsis/core_cm3.h **** /**
1621:../system/include/cmsis/core_cm3.h ****   \brief   System Reset
1622:../system/include/cmsis/core_cm3.h ****   \details Initiates a system reset request to reset the MCU.
1623:../system/include/cmsis/core_cm3.h ****  */
1624:../system/include/cmsis/core_cm3.h **** __STATIC_INLINE void NVIC_SystemReset(void)
1625:../system/include/cmsis/core_cm3.h **** {
1626:../system/include/cmsis/core_cm3.h ****   __DSB();                                                          /* Ensure all outstanding memor
1627:../system/include/cmsis/core_cm3.h ****                                                                        buffered write are completed
1628:../system/include/cmsis/core_cm3.h ****   SCB->AIRCR  = (uint32_t)((0x5FAUL << SCB_AIRCR_VECTKEY_Pos)    |
1629:../system/include/cmsis/core_cm3.h ****                            (SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) |
1630:../system/include/cmsis/core_cm3.h ****                             SCB_AIRCR_SYSRESETREQ_Msk    );         /* Keep priority group unchange
1631:../system/include/cmsis/core_cm3.h ****   __DSB();                                                          /* Ensure completion of memory 
1632:../system/include/cmsis/core_cm3.h **** 
1633:../system/include/cmsis/core_cm3.h ****   for(;;)                                                           /* wait until reset */
1634:../system/include/cmsis/core_cm3.h ****   {
1635:../system/include/cmsis/core_cm3.h ****     __NOP();
1636:../system/include/cmsis/core_cm3.h ****   }
1637:../system/include/cmsis/core_cm3.h **** }
1638:../system/include/cmsis/core_cm3.h **** 
1639:../system/include/cmsis/core_cm3.h **** /*@} end of CMSIS_Core_NVICFunctions */
1640:../system/include/cmsis/core_cm3.h **** 
1641:../system/include/cmsis/core_cm3.h **** 
1642:../system/include/cmsis/core_cm3.h **** 
1643:../system/include/cmsis/core_cm3.h **** /* ##################################    SysTick function  ########################################
1644:../system/include/cmsis/core_cm3.h **** /**
1645:../system/include/cmsis/core_cm3.h ****   \ingroup  CMSIS_Core_FunctionInterface
1646:../system/include/cmsis/core_cm3.h ****   \defgroup CMSIS_Core_SysTickFunctions SysTick Functions
1647:../system/include/cmsis/core_cm3.h ****   \brief    Functions that configure the System.
1648:../system/include/cmsis/core_cm3.h ****   @{
1649:../system/include/cmsis/core_cm3.h ****  */
1650:../system/include/cmsis/core_cm3.h **** 
1651:../system/include/cmsis/core_cm3.h **** #if (__Vendor_SysTickConfig == 0U)
1652:../system/include/cmsis/core_cm3.h **** 
1653:../system/include/cmsis/core_cm3.h **** /**
1654:../system/include/cmsis/core_cm3.h ****   \brief   System Tick Configuration
1655:../system/include/cmsis/core_cm3.h ****   \details Initializes the System Timer and its interrupt, and starts the System Tick Timer.
1656:../system/include/cmsis/core_cm3.h ****            Counter is in free running mode to generate periodic interrupts.
1657:../system/include/cmsis/core_cm3.h ****   \param [in]  ticks  Number of ticks between two interrupts.
1658:../system/include/cmsis/core_cm3.h ****   \return          0  Function succeeded.
1659:../system/include/cmsis/core_cm3.h ****   \return          1  Function failed.
1660:../system/include/cmsis/core_cm3.h ****   \note    When the variable <b>__Vendor_SysTickConfig</b> is set to 1, then the
1661:../system/include/cmsis/core_cm3.h ****            function <b>SysTick_Config</b> is not included. In this case, the file <b><i>device</i>.
1662:../system/include/cmsis/core_cm3.h ****            must contain a vendor-specific implementation of this function.
1663:../system/include/cmsis/core_cm3.h ****  */
1664:../system/include/cmsis/core_cm3.h **** __STATIC_INLINE uint32_t SysTick_Config(uint32_t ticks)
1665:../system/include/cmsis/core_cm3.h **** {
1666:../system/include/cmsis/core_cm3.h ****   if ((ticks - 1UL) > SysTick_LOAD_RELOAD_Msk)
 102              		.loc 2 1666 0
 103 0048 013B     		subs	r3, r3, #1
 104              	.LVL9:
 105 004a B3F1807F 		cmp	r3, #16777216
 106 004e 09D2     		bcs	.L3
1667:../system/include/cmsis/core_cm3.h ****   {
1668:../system/include/cmsis/core_cm3.h ****     return (1UL);                                                   /* Reload value impossible */
1669:../system/include/cmsis/core_cm3.h ****   }
1670:../system/include/cmsis/core_cm3.h **** 
1671:../system/include/cmsis/core_cm3.h ****   SysTick->LOAD  = (uint32_t)(ticks - 1UL);                         /* set reload register */
 107              		.loc 2 1671 0
 108 0050 814A     		ldr	r2, .L115+16
 109 0052 5360     		str	r3, [r2, #4]
 110              	.LVL10:
 111              	.LBB34:
 112              	.LBB35:
1536:../system/include/cmsis/core_cm3.h ****   }
 113              		.loc 2 1536 0
 114 0054 814B     		ldr	r3, .L115+20
 115              	.LVL11:
 116 0056 F021     		movs	r1, #240
 117 0058 83F82310 		strb	r1, [r3, #35]
 118              	.LVL12:
 119              	.LBE35:
 120              	.LBE34:
1672:../system/include/cmsis/core_cm3.h ****   NVIC_SetPriority (SysTick_IRQn, (1UL << __NVIC_PRIO_BITS) - 1UL); /* set Priority for Systick Int
1673:../system/include/cmsis/core_cm3.h ****   SysTick->VAL   = 0UL;                                             /* Load the SysTick Counter Val
 121              		.loc 2 1673 0
 122 005c 0023     		movs	r3, #0
 123 005e 9360     		str	r3, [r2, #8]
1674:../system/include/cmsis/core_cm3.h ****   SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
 124              		.loc 2 1674 0
 125 0060 0723     		movs	r3, #7
 126 0062 1360     		str	r3, [r2]
 127              	.L3:
 128              	.LVL13:
 129              	.LBE33:
 130              	.LBE32:
 131              	.LBB36:
 132              	.LBB37:
1536:../system/include/cmsis/core_cm3.h ****   }
 133              		.loc 2 1536 0
 134 0064 7D4B     		ldr	r3, .L115+20
 135 0066 5022     		movs	r2, #80
 136 0068 83F82320 		strb	r2, [r3, #35]
 137              	.LVL14:
 138              	.LBE37:
 139              	.LBE36:
 213:../src/main.c **** 
 214:../src/main.c ****   // setting an Systick interrupt priority
 215:../src/main.c ****   NVIC_SetPriority(SysTick_IRQn, 5);
 216:../src/main.c **** 
 217:../src/main.c ****   // enable access to BKP registers
 218:../src/main.c ****   RCC->APB1ENR |= (RCC_APB1ENR_PWREN | RCC_APB1ENR_BKPEN);
 140              		.loc 1 218 0
 141 006c 764A     		ldr	r2, .L115
 142 006e D369     		ldr	r3, [r2, #28]
 143 0070 43F0C053 		orr	r3, r3, #402653184
 144 0074 D361     		str	r3, [r2, #28]
 219:../src/main.c ****   PWR->CR |= PWR_CR_DBP;
 145              		.loc 1 219 0
 146 0076 A2F5D032 		sub	r2, r2, #106496
 147 007a 1368     		ldr	r3, [r2]
 148 007c 43F48073 		orr	r3, r3, #256
 149 0080 1360     		str	r3, [r2]
 220:../src/main.c **** 
 221:../src/main.c ****   rte_main_reboot_req = 0;
 150              		.loc 1 221 0
 151 0082 0021     		movs	r1, #0
 152 0084 764B     		ldr	r3, .L115+24
 153 0086 1970     		strb	r1, [r3]
 222:../src/main.c **** 
 223:../src/main.c ****   // read current number of boot cycles
 224:../src/main.c ****   rte_main_boot_cycles = (uint8_t)(BKP->DR2 & 0xFF);
 154              		.loc 1 224 0
 155 0088 764B     		ldr	r3, .L115+28
 156 008a 1A89     		ldrh	r2, [r3, #8]
 157 008c D2B2     		uxtb	r2, r2
 225:../src/main.c **** 
 226:../src/main.c ****   // read current number of hard faults
 227:../src/main.c ****   rte_main_hard_faults = (uint8_t)((BKP->DR2 & 0xFF00) >> 8);
 158              		.loc 1 227 0
 159 008e 1889     		ldrh	r0, [r3, #8]
 160 0090 000A     		lsrs	r0, r0, #8
 161 0092 754C     		ldr	r4, .L115+32
 162 0094 2070     		strb	r0, [r4]
 228:../src/main.c **** 
 229:../src/main.c ****   // increase boot cycles count
 230:../src/main.c ****   rte_main_boot_cycles++;
 163              		.loc 1 230 0
 164 0096 0132     		adds	r2, r2, #1
 165 0098 D2B2     		uxtb	r2, r2
 166 009a 7448     		ldr	r0, .L115+36
 167 009c 0270     		strb	r2, [r0]
 231:../src/main.c **** 
 232:../src/main.c ****   // erasing old value from backup registers
 233:../src/main.c ****   BKP->DR2 &= (0xFFFF ^ 0xFF);
 168              		.loc 1 233 0
 169 009e 1889     		ldrh	r0, [r3, #8]
 170 00a0 00F47F40 		and	r0, r0, #65280
 171 00a4 1881     		strh	r0, [r3, #8]	@ movhi
 234:../src/main.c **** 
 235:../src/main.c ****   // storing increased value
 236:../src/main.c ****   BKP->DR2 |= rte_main_boot_cycles;
 172              		.loc 1 236 0
 173 00a6 1889     		ldrh	r0, [r3, #8]
 174 00a8 0243     		orrs	r2, r2, r0
 175 00aa 1A81     		strh	r2, [r3, #8]	@ movhi
 237:../src/main.c **** 
 238:../src/main.c **** //  rte_main_hardfault_pc = (BKP->DR3 | (BKP->DR4 << 16));
 239:../src/main.c **** //  rte_main_hardfault_lr = (BKP->DR5 | (BKP->DR6 << 16));
 240:../src/main.c **** 
 241:../src/main.c ****   BKP->DR3 = 0;
 176              		.loc 1 241 0
 177 00ac 9981     		strh	r1, [r3, #12]	@ movhi
 242:../src/main.c ****   BKP->DR4 = 0;
 178              		.loc 1 242 0
 179 00ae 1982     		strh	r1, [r3, #16]	@ movhi
 243:../src/main.c ****   BKP->DR5 = 0;
 180              		.loc 1 243 0
 181 00b0 9982     		strh	r1, [r3, #20]	@ movhi
 244:../src/main.c ****   BKP->DR6 = 0;
 182              		.loc 1 244 0
 183 00b2 1983     		strh	r1, [r3, #24]	@ movhi
 245:../src/main.c **** 
 246:../src/main.c **** 
 247:../src/main.c ****   // initializing variables & arrays in rte_wx
 248:../src/main.c ****   rte_wx_init();
 184              		.loc 1 248 0
 185 00b4 FFF7FEFF 		bl	rte_wx_init
 186              	.LVL15:
 249:../src/main.c ****   rte_rtu_init();
 187              		.loc 1 249 0
 188 00b8 FFF7FEFF 		bl	rte_rtu_init
 189              	.LVL16:
 250:../src/main.c **** 
 251:../src/main.c ****   // calculate CRC over configuration blocks
 252:../src/main.c ****   main_crc_result = configuration_handler_check_crc();
 190              		.loc 1 252 0
 191 00bc FFF7FEFF 		bl	configuration_handler_check_crc
 192              	.LVL17:
 193 00c0 6B4B     		ldr	r3, .L115+40
 194 00c2 1860     		str	r0, [r3]
 253:../src/main.c **** 
 254:../src/main.c ****   // if first section has wrong CRC and it hasn't been restored before
 255:../src/main.c ****   if ((main_crc_result & 0x01) == 0 && (BKP->DR3 & CONFIG_FIRST_FAIL_RESTORING) == 0) {
 195              		.loc 1 255 0
 196 00c4 10F0010F 		tst	r0, #1
 197 00c8 77D1     		bne	.L4
 198              		.loc 1 255 0 is_stmt 0 discriminator 1
 199 00ca 664B     		ldr	r3, .L115+28
 200 00cc 9B89     		ldrh	r3, [r3, #12]
 201 00ce 13F0020F 		tst	r3, #2
 202 00d2 72D1     		bne	.L4
 256:../src/main.c **** 	  // restore default configuration
 257:../src/main.c **** 	  if (configuration_handler_restore_default_first() == 0) {
 203              		.loc 1 257 0 is_stmt 1
 204 00d4 FFF7FEFF 		bl	configuration_handler_restore_default_first
 205              	.LVL18:
 206 00d8 0028     		cmp	r0, #0
 207 00da 68D1     		bne	.L5
 258:../src/main.c **** 
 259:../src/main.c **** 		  // if configuration has been restored successfully
 260:../src/main.c **** 		  BKP->DR3 |= CONFIG_FIRST_RESTORED;
 208              		.loc 1 260 0
 209 00dc 614B     		ldr	r3, .L115+28
 210 00de 9A89     		ldrh	r2, [r3, #12]
 211 00e0 42F00102 		orr	r2, r2, #1
 212 00e4 9A81     		strh	r2, [r3, #12]	@ movhi
 261:../src/main.c **** 
 262:../src/main.c **** 		  // set also CRC flag because if restoring is successfull the region has good CRC
 263:../src/main.c **** 		  BKP->DR3 |= CONFIG_FIRST_CRC_OK;
 213              		.loc 1 263 0
 214 00e6 9A89     		ldrh	r2, [r3, #12]
 215 00e8 42F00402 		orr	r2, r2, #4
 216 00ec 9A81     		strh	r2, [r3, #12]	@ movhi
 217              	.L6:
 264:../src/main.c **** 
 265:../src/main.c **** 	  }
 266:../src/main.c **** 	  else {
 267:../src/main.c **** 		  // if not store the flag in the backup register to block
 268:../src/main.c **** 		  // reinitializing once again in the consecutive restart
 269:../src/main.c **** 		  BKP->DR3 |= CONFIG_FIRST_FAIL_RESTORING;
 270:../src/main.c **** 	  }
 271:../src/main.c **** 
 272:../src/main.c **** 
 273:../src/main.c ****   }
 274:../src/main.c ****   else {
 275:../src/main.c **** 	  // if the combined confition is not met check failed restoring flag
 276:../src/main.c **** 	  if ((BKP->DR3 & CONFIG_FIRST_FAIL_RESTORING) == 0) {
 277:../src/main.c **** 		  // a CRC checksum is ok, so first configuration section can be used further
 278:../src/main.c **** 		  BKP->DR3 |= CONFIG_FIRST_CRC_OK;
 279:../src/main.c **** 	  }
 280:../src/main.c **** 	  else {
 281:../src/main.c **** 		  ;
 282:../src/main.c **** 	  }
 283:../src/main.c ****   }
 284:../src/main.c **** 
 285:../src/main.c ****   // if second section has wrong CRC and it hasn't been restored before
 286:../src/main.c ****   if ((main_crc_result & 0x02) == 0 && (BKP->DR3 & CONFIG_SECOND_FAIL_RESTORING) == 0) {
 218              		.loc 1 286 0
 219 00ee 604B     		ldr	r3, .L115+40
 220 00f0 1B68     		ldr	r3, [r3]
 221 00f2 13F0020F 		tst	r3, #2
 222 00f6 77D1     		bne	.L7
 223              		.loc 1 286 0 is_stmt 0 discriminator 1
 224 00f8 5A4B     		ldr	r3, .L115+28
 225 00fa 9B89     		ldrh	r3, [r3, #12]
 226 00fc 13F0100F 		tst	r3, #16
 227 0100 72D1     		bne	.L7
 287:../src/main.c **** 	  // restore default configuration
 288:../src/main.c **** 	  if (configuration_handler_restore_default_second() == 0) {
 228              		.loc 1 288 0 is_stmt 1
 229 0102 FFF7FEFF 		bl	configuration_handler_restore_default_second
 230              	.LVL19:
 231 0106 0028     		cmp	r0, #0
 232 0108 62D1     		bne	.L8
 289:../src/main.c **** 
 290:../src/main.c **** 		  // if configuration has been restored successfully
 291:../src/main.c **** 		  BKP->DR3 |= CONFIG_SECOND_RESTORED;
 233              		.loc 1 291 0
 234 010a 564B     		ldr	r3, .L115+28
 235 010c 9A89     		ldrh	r2, [r3, #12]
 236 010e 42F00802 		orr	r2, r2, #8
 237 0112 9A81     		strh	r2, [r3, #12]	@ movhi
 292:../src/main.c **** 
 293:../src/main.c **** 		  // set also CRC flag as if restoring is successfull the region has good CRC
 294:../src/main.c **** 		  BKP->DR3 |= CONFIG_SECOND_CRC_OK;
 238              		.loc 1 294 0
 239 0114 9A89     		ldrh	r2, [r3, #12]
 240 0116 42F02002 		orr	r2, r2, #32
 241 011a 9A81     		strh	r2, [r3, #12]	@ movhi
 242              	.L9:
 295:../src/main.c **** 
 296:../src/main.c **** 	  }
 297:../src/main.c **** 	  else {
 298:../src/main.c **** 		  // if not store the flag in the backup register
 299:../src/main.c **** 		  BKP->DR3 |= CONFIG_SECOND_FAIL_RESTORING;
 300:../src/main.c **** 
 301:../src/main.c **** 		  BKP->DR3 &= (0xFFFF ^ CONFIG_SECOND_CRC_OK);
 302:../src/main.c **** 	  }
 303:../src/main.c **** 
 304:../src/main.c **** 
 305:../src/main.c ****   }
 306:../src/main.c ****   else {
 307:../src/main.c **** 	  // check failed restoring flag
 308:../src/main.c **** 	  if ((BKP->DR3 & CONFIG_SECOND_FAIL_RESTORING) == 0) {
 309:../src/main.c **** 		  // second configuration section has good CRC and can be used further
 310:../src/main.c **** 		  BKP->DR3 |= CONFIG_SECOND_CRC_OK;
 311:../src/main.c **** 	  }
 312:../src/main.c **** 	  else {
 313:../src/main.c **** 		  ;
 314:../src/main.c **** 	  }
 315:../src/main.c ****   }
 316:../src/main.c **** 
 317:../src/main.c ****   // at this point both sections have either verified CRC or restored values to default
 318:../src/main.c ****   if ((BKP->DR3 & CONFIG_FIRST_CRC_OK) != 0 && (BKP->DR3 & CONFIG_SECOND_CRC_OK) != 0) {
 243              		.loc 1 318 0
 244 011c 514B     		ldr	r3, .L115+28
 245 011e 9B89     		ldrh	r3, [r3, #12]
 246 0120 13F0040F 		tst	r3, #4
 247 0124 6FD0     		beq	.L10
 248              		.loc 1 318 0 is_stmt 0 discriminator 1
 249 0126 4F4B     		ldr	r3, .L115+28
 250 0128 9B89     		ldrh	r3, [r3, #12]
 251 012a 13F0200F 		tst	r3, #32
 252 012e 6AD0     		beq	.L10
 319:../src/main.c **** 	  // if both sections are OK check programming counters
 320:../src/main.c **** 	  if (config_data_pgm_cntr_first > config_data_pgm_cntr_second) {
 253              		.loc 1 320 0 is_stmt 1
 254 0130 504B     		ldr	r3, .L115+44
 255 0132 1A88     		ldrh	r2, [r3]
 256 0134 504B     		ldr	r3, .L115+48
 257 0136 1B88     		ldrh	r3, [r3]
 258 0138 9A42     		cmp	r2, r3
 259 013a 60D9     		bls	.L11
 321:../src/main.c **** 		  // if first section has bigger programing counter use it
 322:../src/main.c **** 		  configuration_handler_load_configuration(REGION_FIRST);
 260              		.loc 1 322 0
 261 013c 0120     		movs	r0, #1
 262 013e FFF7FEFF 		bl	configuration_handler_load_configuration
 263              	.LVL20:
 264              	.L12:
 323:../src/main.c **** 	  }
 324:../src/main.c **** 	  else {
 325:../src/main.c **** 		  configuration_handler_load_configuration(REGION_SECOND);
 326:../src/main.c **** 
 327:../src/main.c **** 	  }
 328:../src/main.c ****   }
 329:../src/main.c ****   else if ((BKP->DR3 & CONFIG_FIRST_CRC_OK) != 0 && (BKP->DR3 & CONFIG_SECOND_CRC_OK) == 0) {
 330:../src/main.c **** 	  // if only first region is OK use it
 331:../src/main.c **** 	  configuration_handler_load_configuration(REGION_FIRST);
 332:../src/main.c ****   }
 333:../src/main.c ****   else if ((BKP->DR3 & CONFIG_FIRST_CRC_OK) == 0 && (BKP->DR3 & CONFIG_SECOND_CRC_OK) != 0) {
 334:../src/main.c **** 	  // if only first region is OK use it
 335:../src/main.c **** 	  configuration_handler_load_configuration(REGION_FIRST);
 336:../src/main.c ****   }
 337:../src/main.c ****   else {
 338:../src/main.c **** 	  configuration_handler_load_configuration(REGION_DEFAULT);
 339:../src/main.c ****   }
 340:../src/main.c **** 
 341:../src/main.c ****   // disabling access to BKP registers
 342:../src/main.c ****   RCC->APB1ENR &= (0xFFFFFFFF ^ (RCC_APB1ENR_PWREN | RCC_APB1ENR_BKPEN));
 265              		.loc 1 342 0
 266 0142 414A     		ldr	r2, .L115
 267 0144 D369     		ldr	r3, [r2, #28]
 268 0146 23F0C053 		bic	r3, r3, #402653184
 269 014a D361     		str	r3, [r2, #28]
 343:../src/main.c ****   PWR->CR &= (0xFFFFFFFF ^ PWR_CR_DBP);
 270              		.loc 1 343 0
 271 014c A2F5D032 		sub	r2, r2, #106496
 272 0150 1368     		ldr	r3, [r2]
 273 0152 23F48073 		bic	r3, r3, #256
 274 0156 1360     		str	r3, [r2]
 344:../src/main.c **** 
 345:../src/main.c ****   // converting latitude into string
 346:../src/main.c ****   memset(main_string_latitude, 0x00, sizeof(main_string_latitude));
 275              		.loc 1 346 0
 276 0158 484E     		ldr	r6, .L115+52
 277 015a 0922     		movs	r2, #9
 278 015c 0021     		movs	r1, #0
 279 015e 3046     		mov	r0, r6
 280 0160 FFF7FEFF 		bl	memset
 281              	.LVL21:
 347:../src/main.c ****   float_to_string(main_config_data_basic->latitude, main_string_latitude, sizeof(main_string_latitu
 282              		.loc 1 347 0
 283 0164 464C     		ldr	r4, .L115+56
 284 0166 2368     		ldr	r3, [r4]
 285 0168 9868     		ldr	r0, [r3, #8]	@ float
 286 016a 0225     		movs	r5, #2
 287 016c 0095     		str	r5, [sp]
 288 016e 2B46     		mov	r3, r5
 289 0170 0922     		movs	r2, #9
 290 0172 3146     		mov	r1, r6
 291 0174 FFF7FEFF 		bl	float_to_string
 292              	.LVL22:
 348:../src/main.c **** 
 349:../src/main.c ****   // converting longitude into string
 350:../src/main.c ****   memset(main_string_longitude, 0x00, sizeof(main_string_longitude));
 293              		.loc 1 350 0
 294 0178 424E     		ldr	r6, .L115+60
 295 017a 0922     		movs	r2, #9
 296 017c 0021     		movs	r1, #0
 297 017e 3046     		mov	r0, r6
 298 0180 FFF7FEFF 		bl	memset
 299              	.LVL23:
 351:../src/main.c ****   float_to_string(main_config_data_basic->longitude, main_string_longitude, sizeof(main_string_long
 300              		.loc 1 351 0
 301 0184 2368     		ldr	r3, [r4]
 302 0186 1869     		ldr	r0, [r3, #16]	@ float
 303 0188 0523     		movs	r3, #5
 304 018a 0093     		str	r3, [sp]
 305 018c 2B46     		mov	r3, r5
 306 018e 0922     		movs	r2, #9
 307 0190 3146     		mov	r1, r6
 308 0192 FFF7FEFF 		bl	float_to_string
 309              	.LVL24:
 352:../src/main.c **** 
 353:../src/main.c ****   switch(main_config_data_basic->symbol) {
 310              		.loc 1 353 0
 311 0196 2368     		ldr	r3, [r4]
 312 0198 93F89530 		ldrb	r3, [r3, #149]	@ zero_extendqisi2
 313 019c 032B     		cmp	r3, #3
 314 019e 00F2A281 		bhi	.L15
 315 01a2 DFE813F0 		tbh	[pc, r3, lsl #1]
 316              	.L17:
 317 01a6 7100     		.2byte	(.L16-.L17)/2
 318 01a8 8B01     		.2byte	(.L18-.L17)/2
 319 01aa 9201     		.2byte	(.L19-.L17)/2
 320 01ac 9901     		.2byte	(.L20-.L17)/2
 321              		.p2align 1
 322              	.L5:
 269:../src/main.c **** 	  }
 323              		.loc 1 269 0
 324 01ae 2D4A     		ldr	r2, .L115+28
 325 01b0 9389     		ldrh	r3, [r2, #12]
 326 01b2 43F00203 		orr	r3, r3, #2
 327 01b6 9381     		strh	r3, [r2, #12]	@ movhi
 328 01b8 99E7     		b	.L6
 329              	.L4:
 276:../src/main.c **** 		  // a CRC checksum is ok, so first configuration section can be used further
 330              		.loc 1 276 0
 331 01ba 2A4B     		ldr	r3, .L115+28
 332 01bc 9B89     		ldrh	r3, [r3, #12]
 333 01be 13F0020F 		tst	r3, #2
 334 01c2 94D1     		bne	.L6
 278:../src/main.c **** 	  }
 335              		.loc 1 278 0
 336 01c4 274A     		ldr	r2, .L115+28
 337 01c6 9389     		ldrh	r3, [r2, #12]
 338 01c8 43F00403 		orr	r3, r3, #4
 339 01cc 9381     		strh	r3, [r2, #12]	@ movhi
 340 01ce 8EE7     		b	.L6
 341              	.L8:
 299:../src/main.c **** 
 342              		.loc 1 299 0
 343 01d0 244A     		ldr	r2, .L115+28
 344 01d2 9389     		ldrh	r3, [r2, #12]
 345 01d4 43F01003 		orr	r3, r3, #16
 346 01d8 9381     		strh	r3, [r2, #12]	@ movhi
 301:../src/main.c **** 	  }
 347              		.loc 1 301 0
 348 01da 9389     		ldrh	r3, [r2, #12]
 349 01dc 9BB2     		uxth	r3, r3
 350 01de 23F02003 		bic	r3, r3, #32
 351 01e2 9BB2     		uxth	r3, r3
 352 01e4 9381     		strh	r3, [r2, #12]	@ movhi
 353 01e6 99E7     		b	.L9
 354              	.L7:
 308:../src/main.c **** 		  // second configuration section has good CRC and can be used further
 355              		.loc 1 308 0
 356 01e8 1E4B     		ldr	r3, .L115+28
 357 01ea 9B89     		ldrh	r3, [r3, #12]
 358 01ec 13F0100F 		tst	r3, #16
 359 01f0 94D1     		bne	.L9
 310:../src/main.c **** 	  }
 360              		.loc 1 310 0
 361 01f2 1C4A     		ldr	r2, .L115+28
 362 01f4 9389     		ldrh	r3, [r2, #12]
 363 01f6 43F02003 		orr	r3, r3, #32
 364 01fa 9381     		strh	r3, [r2, #12]	@ movhi
 365 01fc 8EE7     		b	.L9
 366              	.L11:
 325:../src/main.c **** 
 367              		.loc 1 325 0
 368 01fe 0220     		movs	r0, #2
 369 0200 FFF7FEFF 		bl	configuration_handler_load_configuration
 370              	.LVL25:
 371 0204 9DE7     		b	.L12
 372              	.L10:
 329:../src/main.c **** 	  // if only first region is OK use it
 373              		.loc 1 329 0
 374 0206 174B     		ldr	r3, .L115+28
 375 0208 9B89     		ldrh	r3, [r3, #12]
 376 020a 13F0040F 		tst	r3, #4
 377 020e 08D0     		beq	.L13
 329:../src/main.c **** 	  // if only first region is OK use it
 378              		.loc 1 329 0 is_stmt 0 discriminator 1
 379 0210 144B     		ldr	r3, .L115+28
 380 0212 9B89     		ldrh	r3, [r3, #12]
 381 0214 13F0200F 		tst	r3, #32
 382 0218 03D1     		bne	.L13
 331:../src/main.c ****   }
 383              		.loc 1 331 0 is_stmt 1
 384 021a 0120     		movs	r0, #1
 385 021c FFF7FEFF 		bl	configuration_handler_load_configuration
 386              	.LVL26:
 387 0220 8FE7     		b	.L12
 388              	.L13:
 333:../src/main.c **** 	  // if only first region is OK use it
 389              		.loc 1 333 0
 390 0222 104B     		ldr	r3, .L115+28
 391 0224 9B89     		ldrh	r3, [r3, #12]
 392 0226 13F0040F 		tst	r3, #4
 393 022a 08D1     		bne	.L14
 333:../src/main.c **** 	  // if only first region is OK use it
 394              		.loc 1 333 0 is_stmt 0 discriminator 1
 395 022c 0D4B     		ldr	r3, .L115+28
 396 022e 9B89     		ldrh	r3, [r3, #12]
 397 0230 13F0200F 		tst	r3, #32
 398 0234 03D0     		beq	.L14
 335:../src/main.c ****   }
 399              		.loc 1 335 0 is_stmt 1
 400 0236 0120     		movs	r0, #1
 401 0238 FFF7FEFF 		bl	configuration_handler_load_configuration
 402              	.LVL27:
 403 023c 81E7     		b	.L12
 404              	.L14:
 338:../src/main.c ****   }
 405              		.loc 1 338 0
 406 023e 0020     		movs	r0, #0
 407 0240 FFF7FEFF 		bl	configuration_handler_load_configuration
 408              	.LVL28:
 409 0244 7DE7     		b	.L12
 410              	.L116:
 411 0246 00BF     		.align	2
 412              	.L115:
 413 0248 00100240 		.word	1073876992
 414 024c 00000000 		.word	main_own_aprs_msg
 415 0250 00000000 		.word	SystemCoreClock
 416 0254 1F85EB51 		.word	1374389535
 417 0258 10E000E0 		.word	-536813552
 418 025c 00ED00E0 		.word	-536810240
 419 0260 00000000 		.word	rte_main_reboot_req
 420 0264 006C0040 		.word	1073769472
 421 0268 00000000 		.word	rte_main_hard_faults
 422 026c 00000000 		.word	rte_main_boot_cycles
 423 0270 00000000 		.word	.LANCHOR0
 424 0274 00000000 		.word	config_data_pgm_cntr_first
 425 0278 00000000 		.word	config_data_pgm_cntr_second
 426 027c 00000000 		.word	main_string_latitude
 427 0280 00000000 		.word	.LANCHOR1
 428 0284 00000000 		.word	main_string_longitude
 429              	.L16:
 354:../src/main.c ****   case 0:		// _SYMBOL_DIGI
 355:../src/main.c **** 	  main_symbol_f = '/';
 430              		.loc 1 355 0
 431 0288 BB4B     		ldr	r3, .L117
 432 028a 2F22     		movs	r2, #47
 433 028c 1A70     		strb	r2, [r3]
 356:../src/main.c **** 	  main_symbol_s = '#';
 434              		.loc 1 356 0
 435 028e BB4B     		ldr	r3, .L117+4
 436 0290 2322     		movs	r2, #35
 437 0292 1A70     		strb	r2, [r3]
 438              	.L21:
 357:../src/main.c **** 	  break;
 358:../src/main.c ****   case 1:		// _SYMBOL_WIDE1_DIGI
 359:../src/main.c **** 	  main_symbol_f = '1';
 360:../src/main.c **** 	  main_symbol_s = '#';
 361:../src/main.c **** 	  break;
 362:../src/main.c ****   case 2:		// _SYMBOL_HOUSE
 363:../src/main.c **** 	  main_symbol_f = '/';
 364:../src/main.c **** 	  main_symbol_s = '-';
 365:../src/main.c **** 	  break;
 366:../src/main.c ****   case 3:		// _SYMBOL_RXIGATE
 367:../src/main.c **** 	  main_symbol_f = 'I';
 368:../src/main.c **** 	  main_symbol_s = '&';
 369:../src/main.c **** 	  break;
 370:../src/main.c ****   default:		// _SYMBOL_IGATE
 371:../src/main.c **** 	  main_symbol_f = 'R';
 372:../src/main.c **** 	  main_symbol_s = '&';
 373:../src/main.c **** 	  break;
 374:../src/main.c **** 
 375:../src/main.c ****   }
 376:../src/main.c **** 
 377:../src/main.c **** #if defined _RANDOM_DELAY
 378:../src/main.c ****   // configuring a default delay value
 379:../src/main.c ****   delay_set(_DELAY_BASE, 1);
 380:../src/main.c **** #elif !defined _RANDOM_DELAY
 381:../src/main.c ****   delay_set(_DELAY_BASE, 0);
 439              		.loc 1 381 0
 440 0294 0021     		movs	r1, #0
 441 0296 1420     		movs	r0, #20
 442 0298 FFF7FEFF 		bl	delay_set
 443              	.LVL29:
 382:../src/main.c **** 
 383:../src/main.c **** #endif
 384:../src/main.c **** 
 385:../src/main.c ****   // initalizing separated Open Collector output
 386:../src/main.c ****   io_oc_init();
 444              		.loc 1 386 0
 445 029c FFF7FEFF 		bl	io_oc_init
 446              	.LVL30:
 387:../src/main.c **** 
 388:../src/main.c ****   // initialize sensor power control and switch off supply voltage
 389:../src/main.c ****   wx_pwr_init();
 447              		.loc 1 389 0
 448 02a0 FFF7FEFF 		bl	wx_pwr_init
 449              	.LVL31:
 390:../src/main.c **** 
 391:../src/main.c ****   // call periodic handle to wait for 1 second and then switch on voltage
 392:../src/main.c ****   wx_pwr_periodic_handle();
 450              		.loc 1 392 0
 451 02a4 FFF7FEFF 		bl	wx_pwr_periodic_handle
 452              	.LVL32:
 393:../src/main.c **** 
 394:../src/main.c ****   // waiting for 1 second to count number of ticks when the CPU is idle
 395:../src/main.c ****   main_idle_cpu_ticks = delay_fixed_with_count(1000);
 453              		.loc 1 395 0
 454 02a8 4FF47A70 		mov	r0, #1000
 455 02ac FFF7FEFF 		bl	delay_fixed_with_count
 456              	.LVL33:
 457 02b0 B34B     		ldr	r3, .L117+8
 458 02b2 1860     		str	r0, [r3]
 396:../src/main.c **** 
 397:../src/main.c ****   // Configure I/O pins for USART1 (Kiss modem)
 398:../src/main.c ****   Configure_GPIO(GPIOA,10,PUD_INPUT);		// RX
 459              		.loc 1 398 0
 460 02b4 B34C     		ldr	r4, .L117+12
 461 02b6 0822     		movs	r2, #8
 462 02b8 0A21     		movs	r1, #10
 463 02ba 2046     		mov	r0, r4
 464 02bc FFF7FEFF 		bl	Configure_GPIO
 465              	.LVL34:
 399:../src/main.c ****   Configure_GPIO(GPIOA,9,AFPP_OUTPUT_2MHZ);	// TX
 466              		.loc 1 399 0
 467 02c0 0922     		movs	r2, #9
 468 02c2 1146     		mov	r1, r2
 469 02c4 2046     		mov	r0, r4
 470 02c6 FFF7FEFF 		bl	Configure_GPIO
 471              	.LVL35:
 400:../src/main.c **** 
 401:../src/main.c ****   // Configure I/O pins for USART2 (wx meteo comm)
 402:../src/main.c ****   Configure_GPIO(GPIOA,3,PUD_INPUT);		// RX
 472              		.loc 1 402 0
 473 02ca 0822     		movs	r2, #8
 474 02cc 0321     		movs	r1, #3
 475 02ce 2046     		mov	r0, r4
 476 02d0 FFF7FEFF 		bl	Configure_GPIO
 477              	.LVL36:
 403:../src/main.c ****   Configure_GPIO(GPIOA,2,AFPP_OUTPUT_2MHZ);	// TX
 478              		.loc 1 403 0
 479 02d4 0922     		movs	r2, #9
 480 02d6 0221     		movs	r1, #2
 481 02d8 2046     		mov	r0, r4
 482 02da FFF7FEFF 		bl	Configure_GPIO
 483              	.LVL37:
 404:../src/main.c **** 
 405:../src/main.c **** #if defined(PARATNC_HWREV_A) || defined(PARATNC_HWREV_B)
 406:../src/main.c ****   Configure_GPIO(GPIOA,7,GPPP_OUTPUT_2MHZ);	// re/te
 484              		.loc 1 406 0
 485 02de 0122     		movs	r2, #1
 486 02e0 0721     		movs	r1, #7
 487 02e2 2046     		mov	r0, r4
 488 02e4 FFF7FEFF 		bl	Configure_GPIO
 489              	.LVL38:
 407:../src/main.c ****   GPIO_ResetBits(GPIOA, GPIO_Pin_7);
 490              		.loc 1 407 0
 491 02e8 8021     		movs	r1, #128
 492 02ea 2046     		mov	r0, r4
 493 02ec FFF7FEFF 		bl	GPIO_ResetBits
 494              	.LVL39:
 408:../src/main.c **** #endif
 409:../src/main.c **** #if defined(PARATNC_HWREV_C)
 410:../src/main.c ****   Configure_GPIO(GPIOA,8,GPPP_OUTPUT_2MHZ);	// re/te
 411:../src/main.c ****   GPIO_ResetBits(GPIOA, GPIO_Pin_8);
 412:../src/main.c **** #endif
 413:../src/main.c **** 
 414:../src/main.c ****   // enabling the clock for both USARTs
 415:../src/main.c ****   RCC->APB2ENR |= RCC_APB2ENR_USART1EN;
 495              		.loc 1 415 0
 496 02f0 A54B     		ldr	r3, .L117+16
 497 02f2 9A69     		ldr	r2, [r3, #24]
 498 02f4 42F48042 		orr	r2, r2, #16384
 499 02f8 9A61     		str	r2, [r3, #24]
 416:../src/main.c ****   RCC->APB1ENR |= RCC_APB1ENR_USART2EN;
 500              		.loc 1 416 0
 501 02fa DA69     		ldr	r2, [r3, #28]
 502 02fc 42F40032 		orr	r2, r2, #131072
 503 0300 DA61     		str	r2, [r3, #28]
 417:../src/main.c **** 
 418:../src/main.c ****   main_kiss_srl_ctx_ptr = &main_kiss_srl_ctx;
 504              		.loc 1 418 0
 505 0302 A24B     		ldr	r3, .L117+20
 506 0304 A24A     		ldr	r2, .L117+24
 507 0306 1A60     		str	r2, [r3]
 419:../src/main.c ****   main_wx_srl_ctx_ptr = &main_wx_srl_ctx;
 508              		.loc 1 419 0
 509 0308 A24B     		ldr	r3, .L117+28
 510 030a A34A     		ldr	r2, .L117+32
 511 030c 1A60     		str	r2, [r3]
 420:../src/main.c **** 
 421:../src/main.c ****   main_target_kiss_baudrate = 9600u;
 512              		.loc 1 421 0
 513 030e A34B     		ldr	r3, .L117+36
 514 0310 4FF41652 		mov	r2, #9600
 515 0314 1A60     		str	r2, [r3]
 422:../src/main.c ****   main_target_wx_baudrate = _SERIAL_BAUDRATE;
 516              		.loc 1 422 0
 517 0316 A24B     		ldr	r3, .L117+40
 518 0318 4FF49642 		mov	r2, #19200
 519 031c 1A60     		str	r2, [r3]
 423:../src/main.c **** 
 424:../src/main.c ****   // if Victron VE-direct protocol is enabled set the baudrate to the 19200u
 425:../src/main.c ****   if (main_config_data_mode->victron == 1) {
 520              		.loc 1 425 0
 521 031e A14B     		ldr	r3, .L117+44
 522 0320 1B68     		ldr	r3, [r3]
 523 0322 9A79     		ldrb	r2, [r3, #6]	@ zero_extendqisi2
 524 0324 012A     		cmp	r2, #1
 525 0326 00F0E580 		beq	.L80
 526              	.L22:
 426:../src/main.c ****     main_target_kiss_baudrate = 19200u;
 427:../src/main.c **** 
 428:../src/main.c ****     // and disable the kiss TNC option as it shares the same port
 429:../src/main.c ****     main_kiss_enabled = 0;
 430:../src/main.c ****   }
 431:../src/main.c **** 
 432:../src/main.c **** 
 433:../src/main.c ****   if (main_config_data_mode->wx_davis == 1) {
 527              		.loc 1 433 0
 528 032a 1A79     		ldrb	r2, [r3, #4]	@ zero_extendqisi2
 529 032c 012A     		cmp	r2, #1
 530 032e 00F0E980 		beq	.L81
 434:../src/main.c **** 	  // reinitialize the KISS serial port temporary to davis baudrate
 435:../src/main.c **** 	  main_target_kiss_baudrate = DAVIS_DEFAULT_BAUDRATE;
 436:../src/main.c **** 
 437:../src/main.c **** 	  // reset RX state to allow reinitialization with changed baudrate
 438:../src/main.c **** 	  main_kiss_srl_ctx_ptr->srl_rx_state = SRL_RX_NOT_CONFIG;
 439:../src/main.c **** 
 440:../src/main.c **** 	  // reinitializing serial hardware to wake up Davis wx station
 441:../src/main.c **** 	  srl_init(main_kiss_srl_ctx_ptr, USART1, srl_usart1_rx_buffer, RX_BUFFER_1_LN, srl_usart1_tx_buff
 442:../src/main.c **** 
 443:../src/main.c **** 	  srl_switch_timeout(main_kiss_srl_ctx_ptr, SRL_TIMEOUT_ENABLE, 3000);
 444:../src/main.c **** 
 445:../src/main.c **** 	  davis_init(main_kiss_srl_ctx_ptr);
 446:../src/main.c **** 
 447:../src/main.c **** 	  // try to wake up the davis base
 448:../src/main.c **** 	  rte_wx_davis_station_avaliable = (davis_wake_up(DAVIS_BLOCKING_IO) == 0 ? 1 : 0);
 449:../src/main.c **** 
 450:../src/main.c **** 	  // if davis weather stations is connected to SERIAL port
 451:../src/main.c **** 	  if (rte_wx_davis_station_avaliable == 1) {
 452:../src/main.c **** 		  // turn LCD backlight on..
 453:../src/main.c **** 		  davis_control_backlight(1);
 454:../src/main.c **** 
 455:../src/main.c **** 		  // wait for a while
 456:../src/main.c **** 		  delay_fixed(1000);
 457:../src/main.c **** 
 458:../src/main.c **** 		  // and then off to let the user know that communication is working
 459:../src/main.c **** 		  davis_control_backlight(0);
 460:../src/main.c **** 
 461:../src/main.c **** 		  // disable the KISS modem as the UART will be used for DAVIS wx station
 462:../src/main.c **** 		  main_kiss_enabled = 0;
 463:../src/main.c **** 
 464:../src/main.c **** 		  // enable the davis serial protocol client to allow pooling callbacks to be called in main loop
 465:../src/main.c **** 		  // This only controls the callback it doesn't mean that the station itself is responding to
 466:../src/main.c **** 		  // communication. It stays set to one event if Davis station
 467:../src/main.c **** 		  main_davis_serial_enabled = 1;
 468:../src/main.c **** 
 469:../src/main.c **** 		  // trigger the rxcheck to get all counter values
 470:../src/main.c **** 		  davis_trigger_rxcheck_packet();
 471:../src/main.c **** 
 472:../src/main.c **** 	  }
 473:../src/main.c **** 	  else {
 474:../src/main.c **** 		  // if not revert back to KISS configuration
 475:../src/main.c **** 		  main_target_kiss_baudrate = 9600u;
 476:../src/main.c **** 		  main_kiss_srl_ctx_ptr->srl_rx_state = SRL_RX_NOT_CONFIG;
 477:../src/main.c **** 
 478:../src/main.c **** 		  // initializing UART drvier
 479:../src/main.c **** 		  srl_init(main_kiss_srl_ctx_ptr, USART1, srl_usart1_rx_buffer, RX_BUFFER_1_LN, srl_usart1_tx_buf
 480:../src/main.c **** 		  srl_init(main_wx_srl_ctx_ptr, USART2, srl_usart2_rx_buffer, RX_BUFFER_2_LN, srl_usart2_tx_buffe
 481:../src/main.c **** 
 482:../src/main.c **** 	  }
 483:../src/main.c ****   }
 484:../src/main.c ****   else if (main_config_data_mode->wx_modbus == 1) {
 531              		.loc 1 484 0
 532 0332 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 533 0334 012B     		cmp	r3, #1
 534 0336 00F07B81 		beq	.L82
 485:../src/main.c **** 
 486:../src/main.c **** 	  rtu_serial_init(&rte_rtu_pool_queue, 1, main_wx_srl_ctx_ptr, main_config_data_rtu);
 487:../src/main.c **** 
 488:../src/main.c **** 	  main_target_wx_baudrate = main_config_data_rtu->slave_speed;
 489:../src/main.c **** 
 490:../src/main.c **** 	  // initialize serial ports according to RS485 network configuration for Modbus-RTU
 491:../src/main.c **** 	  srl_init(main_kiss_srl_ctx_ptr, USART1, srl_usart1_rx_buffer, RX_BUFFER_1_LN, srl_usart1_tx_buff
 492:../src/main.c **** 	  srl_init(main_wx_srl_ctx_ptr, USART2, srl_usart2_rx_buffer, RX_BUFFER_2_LN, srl_usart2_tx_buffer
 493:../src/main.c **** 	  srl_switch_tx_delay(main_wx_srl_ctx_ptr, 1);
 494:../src/main.c **** 
 495:../src/main.c **** 	  // enabling rtu master code
 496:../src/main.c **** 	  main_modbus_rtu_master_enabled = 1;
 497:../src/main.c **** 
 498:../src/main.c **** 	  rtu_serial_start();
 499:../src/main.c ****   }
 500:../src/main.c ****   else {
 501:../src/main.c **** 	  // initializing UART drvier
 502:../src/main.c **** 	  srl_init(main_kiss_srl_ctx_ptr, USART1, srl_usart1_rx_buffer, RX_BUFFER_1_LN, srl_usart1_tx_buff
 535              		.loc 1 502 0
 536 033a 0124     		movs	r4, #1
 537 033c 0394     		str	r4, [sp, #12]
 538 033e 974B     		ldr	r3, .L117+36
 539 0340 1B68     		ldr	r3, [r3]
 540 0342 0293     		str	r3, [sp, #8]
 541 0344 4FF40073 		mov	r3, #512
 542 0348 0193     		str	r3, [sp, #4]
 543 034a 974A     		ldr	r2, .L117+48
 544 034c 0092     		str	r2, [sp]
 545 034e 974A     		ldr	r2, .L117+52
 546 0350 9749     		ldr	r1, .L117+56
 547 0352 8F48     		ldr	r0, .L117+24
 548 0354 FFF7FEFF 		bl	srl_init
 549              	.LVL40:
 503:../src/main.c **** 	  srl_init(main_wx_srl_ctx_ptr, USART2, srl_usart2_rx_buffer, RX_BUFFER_2_LN, srl_usart2_tx_buffer
 550              		.loc 1 503 0
 551 0358 8E4B     		ldr	r3, .L117+28
 552 035a 1868     		ldr	r0, [r3]
 553 035c 0394     		str	r4, [sp, #12]
 554 035e 904B     		ldr	r3, .L117+40
 555 0360 1B68     		ldr	r3, [r3]
 556 0362 0293     		str	r3, [sp, #8]
 557 0364 6023     		movs	r3, #96
 558 0366 0193     		str	r3, [sp, #4]
 559 0368 924A     		ldr	r2, .L117+60
 560 036a 0092     		str	r2, [sp]
 561 036c 924A     		ldr	r2, .L117+64
 562 036e 9349     		ldr	r1, .L117+68
 563 0370 FFF7FEFF 		bl	srl_init
 564              	.LVL41:
 565              	.L25:
 504:../src/main.c ****   }
 505:../src/main.c **** 
 506:../src/main.c **** #if defined(PARATNC_HWREV_A) || defined(PARATNC_HWREV_B)
 507:../src/main.c ****   main_wx_srl_ctx_ptr->te_pin = GPIO_Pin_7;
 566              		.loc 1 507 0
 567 0374 874B     		ldr	r3, .L117+28
 568 0376 1B68     		ldr	r3, [r3]
 569 0378 8022     		movs	r2, #128
 570 037a 1A82     		strh	r2, [r3, #16]	@ movhi
 508:../src/main.c ****   main_wx_srl_ctx_ptr->te_port = GPIOA;
 571              		.loc 1 508 0
 572 037c 814C     		ldr	r4, .L117+12
 573 037e DC60     		str	r4, [r3, #12]
 509:../src/main.c **** #endif
 510:../src/main.c **** #if defined(PARATNC_HWREV_C)
 511:../src/main.c ****   main_wx_srl_ctx_ptr->te_pin = GPIO_Pin_8;
 512:../src/main.c ****   main_wx_srl_ctx_ptr->te_port = GPIOA;
 513:../src/main.c **** #endif
 514:../src/main.c **** 
 515:../src/main.c ****   // initialize APRS path with zeros
 516:../src/main.c ****   memset (main_own_path, 0x00, sizeof(main_own_path));
 574              		.loc 1 516 0
 575 0380 8F4D     		ldr	r5, .L117+72
 576 0382 1522     		movs	r2, #21
 577 0384 0021     		movs	r1, #0
 578 0386 2846     		mov	r0, r5
 579 0388 FFF7FEFF 		bl	memset
 580              	.LVL42:
 517:../src/main.c **** 
 518:../src/main.c ****   // configuring an APRS path used to transmit own packets (telemetry, wx, beacons)
 519:../src/main.c ****   main_own_path_ln = ConfigPath(main_own_path, main_config_data_basic);
 581              		.loc 1 519 0
 582 038c 8D4B     		ldr	r3, .L117+76
 583 038e 1968     		ldr	r1, [r3]
 584 0390 2846     		mov	r0, r5
 585 0392 FFF7FEFF 		bl	ConfigPath
 586              	.LVL43:
 587 0396 8C4B     		ldr	r3, .L117+80
 588 0398 1870     		strb	r0, [r3]
 520:../src/main.c **** 
 521:../src/main.c **** #ifdef INTERNAL_WATCHDOG
 522:../src/main.c ****   // enable write access to watchdog registers
 523:../src/main.c ****   IWDG_WriteAccessCmd(IWDG_WriteAccess_Enable);
 589              		.loc 1 523 0
 590 039a 45F25550 		movw	r0, #21845
 591 039e FFF7FEFF 		bl	IWDG_WriteAccessCmd
 592              	.LVL44:
 524:../src/main.c **** 
 525:../src/main.c ****   // Set watchdog prescaler
 526:../src/main.c ****   IWDG_SetPrescaler(IWDG_Prescaler_128);
 593              		.loc 1 526 0
 594 03a2 0520     		movs	r0, #5
 595 03a4 FFF7FEFF 		bl	IWDG_SetPrescaler
 596              	.LVL45:
 527:../src/main.c **** 
 528:../src/main.c ****   // Set the counter value to program watchdog for about 13 seconds
 529:../src/main.c ****   IWDG_SetReload(0xFFF);
 597              		.loc 1 529 0
 598 03a8 40F6FF70 		movw	r0, #4095
 599 03ac FFF7FEFF 		bl	IWDG_SetReload
 600              	.LVL46:
 530:../src/main.c **** 
 531:../src/main.c ****   // enable the watchdog
 532:../src/main.c ****   IWDG_Enable();
 601              		.loc 1 532 0
 602 03b0 FFF7FEFF 		bl	IWDG_Enable
 603              	.LVL47:
 533:../src/main.c **** 
 534:../src/main.c ****   // do not disable the watchdog when the core is halted on a breakpoint
 535:../src/main.c ****   DBGMCU_Config(DBGMCU_IWDG_STOP, ENABLE);
 604              		.loc 1 535 0
 605 03b4 0121     		movs	r1, #1
 606 03b6 4FF48070 		mov	r0, #256
 607 03ba FFF7FEFF 		bl	DBGMCU_Config
 608              	.LVL48:
 536:../src/main.c **** 
 537:../src/main.c ****   // reload watchdog counter
 538:../src/main.c ****   IWDG_ReloadCounter();
 609              		.loc 1 538 0
 610 03be FFF7FEFF 		bl	IWDG_ReloadCounter
 611              	.LVL49:
 539:../src/main.c **** #endif
 540:../src/main.c **** 
 541:../src/main.c **** #ifdef _METEO
 542:../src/main.c ****   // initialize i2c controller
 543:../src/main.c ****   i2cConfigure();
 612              		.loc 1 543 0
 613 03c2 FFF7FEFF 		bl	i2cConfigure
 614              	.LVL50:
 544:../src/main.c **** #endif
 545:../src/main.c **** 
 546:../src/main.c ****   // initialize GPIO pins leds are connecting to
 547:../src/main.c ****   led_init();
 615              		.loc 1 547 0
 616 03c6 FFF7FEFF 		bl	led_init
 617              	.LVL51:
 548:../src/main.c **** 
 549:../src/main.c ****   // initialize AX25 & APRS stuff
 550:../src/main.c ****   AFSK_Init(&main_afsk);
 618              		.loc 1 550 0
 619 03ca 804D     		ldr	r5, .L117+84
 620 03cc 2846     		mov	r0, r5
 621 03ce FFF7FEFF 		bl	AFSK_Init
 622              	.LVL52:
 551:../src/main.c ****   ax25_init(&main_ax25, &main_afsk, 0, 0x00);
 623              		.loc 1 551 0
 624 03d2 0023     		movs	r3, #0
 625 03d4 1A46     		mov	r2, r3
 626 03d6 2946     		mov	r1, r5
 627 03d8 7D48     		ldr	r0, .L117+88
 628 03da FFF7FEFF 		bl	ax25_init
 629              	.LVL53:
 552:../src/main.c ****   DA_Init();
 630              		.loc 1 552 0
 631 03de FFF7FEFF 		bl	DA_Init
 632              	.LVL54:
 553:../src/main.c **** 
 554:../src/main.c ****   // initialize Watchdog output
 555:../src/main.c ****   Configure_GPIO(GPIOA,12,GPPP_OUTPUT_50MHZ);
 633              		.loc 1 555 0
 634 03e2 0322     		movs	r2, #3
 635 03e4 0C21     		movs	r1, #12
 636 03e6 2046     		mov	r0, r4
 637 03e8 FFF7FEFF 		bl	Configure_GPIO
 638              	.LVL55:
 556:../src/main.c **** 
 557:../src/main.c ****   // initializing the digipeater configuration
 558:../src/main.c ****   digi_init(main_config_data_mode);
 639              		.loc 1 558 0
 640 03ec 6D4C     		ldr	r4, .L117+44
 641 03ee 2068     		ldr	r0, [r4]
 642 03f0 FFF7FEFF 		bl	digi_init
 643              	.LVL56:
 559:../src/main.c **** 
 560:../src/main.c ****   if ((main_config_data_mode->wx & WX_ENABLED) == 1) {
 644              		.loc 1 560 0
 645 03f4 2368     		ldr	r3, [r4]
 646 03f6 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 647 03f8 13F0010F 		tst	r3, #1
 648 03fc 40F04B81 		bne	.L83
 649              	.L27:
 561:../src/main.c **** 
 562:../src/main.c **** 	  dallas_init(GPIOC, GPIO_Pin_11, GPIO_PinSource11, &rte_wx_dallas_average);
 563:../src/main.c **** 
 564:../src/main.c **** 	  if (main_config_data_mode->wx_umb == 1) {
 565:../src/main.c **** 		  // client initialization
 566:../src/main.c **** 		  umb_master_init(&rte_wx_umb_context, main_wx_srl_ctx_ptr, main_config_data_umb);
 567:../src/main.c **** 	  }
 568:../src/main.c **** 
 569:../src/main.c **** 	  if ((main_config_data_mode->wx & WX_INTERNAL_SPARKFUN_WIND) == 0) {
 570:../src/main.c **** 		  analog_anemometer_init(_ANEMOMETER_PULSES_IN_10SEC_PER_ONE_MS_OF_WINDSPEED, 38, 100, 1);
 571:../src/main.c **** 	  }
 572:../src/main.c **** 	  else {
 573:../src/main.c **** 		  analog_anemometer_init(_ANEMOMETER_PULSES_IN_10SEC_PER_ONE_MS_OF_WINDSPEED, 38, 100, 1);
 574:../src/main.c **** 	  }
 575:../src/main.c ****   }
 576:../src/main.c **** 
 577:../src/main.c **** //#ifdef _DALLAS_AS_TELEM
 578:../src/main.c **** //	#ifndef _DALLAS_SPLIT_PIN
 579:../src/main.c **** //	  dallas_init(GPIOC, GPIO_Pin_6, GPIO_PinSource6, &rte_wx_dallas_average);
 580:../src/main.c **** //	#else
 581:../src/main.c **** //	  dallas_init(GPIOC, GPIO_Pin_11, GPIO_PinSource11, &rte_wx_dallas_average);
 582:../src/main.c **** //	#endif
 583:../src/main.c **** //#endif
 584:../src/main.c **** 
 585:../src/main.c ****   // configuring interrupt priorities
 586:../src/main.c ****   it_handlers_set_priorities();
 650              		.loc 1 586 0
 651 0400 FFF7FEFF 		bl	it_handlers_set_priorities
 652              	.LVL57:
 587:../src/main.c **** 
 588:../src/main.c **** 	if (main_config_data_mode->wx_ms5611_or_bme == 0) {
 653              		.loc 1 588 0
 654 0404 674B     		ldr	r3, .L117+44
 655 0406 1B68     		ldr	r3, [r3]
 656 0408 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 657 040a 002B     		cmp	r3, #0
 658 040c 00F06981 		beq	.L84
 589:../src/main.c **** 	 ms5611_reset(&rte_wx_ms5611_qf);
 590:../src/main.c **** 	 ms5611_read_calibration(SensorCalData, &rte_wx_ms5611_qf);
 591:../src/main.c **** 	 ms5611_trigger_measure(0, 0);
 592:../src/main.c **** 	}
 593:../src/main.c **** 	else if (main_config_data_mode->wx_ms5611_or_bme == 1) {
 659              		.loc 1 593 0
 660 0410 012B     		cmp	r3, #1
 661 0412 00F07381 		beq	.L85
 662              	.L31:
 594:../src/main.c **** 	 bme280_reset(&rte_wx_bme280_qf);
 595:../src/main.c **** 	 bme280_setup();
 596:../src/main.c **** 	 bme280_read_calibration(bme280_calibration_data);
 597:../src/main.c **** 	}
 598:../src/main.c **** 
 599:../src/main.c ****  if (main_kiss_enabled == 1) {
 663              		.loc 1 599 0
 664 0416 6F4B     		ldr	r3, .L117+92
 665 0418 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 666 041a 012B     		cmp	r3, #1
 667 041c 00F07781 		beq	.L86
 668              	.L32:
 600:../src/main.c **** 	  // preparing initial beacon which will be sent to host PC using KISS protocol via UART
 601:../src/main.c **** 	  main_own_aprs_msg_len = sprintf(main_own_aprs_msg, "=%s%c%c%s%c%c %s", main_string_latitude, mai
 602:../src/main.c **** 
 603:../src/main.c **** 	  // terminating the aprs message
 604:../src/main.c **** 	  main_own_aprs_msg[main_own_aprs_msg_len] = 0;
 605:../src/main.c **** 
 606:../src/main.c **** 	  // 'sending' the message which will only encapsulate it inside AX25 protocol (ax25_starttx is no
 607:../src/main.c **** 	  //ax25_sendVia(&main_ax25, main_own_path, (sizeof(main_own_path) / sizeof(*(main_own_path))), ma
 608:../src/main.c **** 	  ln = ax25_sendVia_toBuffer(main_own_path, (sizeof(main_own_path) / sizeof(*(main_own_path))), ma
 609:../src/main.c **** 
 610:../src/main.c **** 	  // SendKISSToHost function cleares the output buffer hence routine need to wait till the UART wi
 611:../src/main.c **** 	  // Here this could be omitted because UART isn't used before but general idea
 612:../src/main.c **** 	  while(main_kiss_srl_ctx.srl_tx_state != SRL_TX_IDLE && main_kiss_srl_ctx.srl_tx_state != SRL_TX_
 613:../src/main.c **** 
 614:../src/main.c **** 	  // converting AX25 with beacon to KISS format
 615:../src/main.c **** 	  //ln = SendKISSToHost(main_afsk.tx_buf + 1, main_afsk.tx_fifo.tail - main_afsk.tx_fifo.head - 4,
 616:../src/main.c **** 
 617:../src/main.c **** 
 618:../src/main.c **** 	  // checking if KISS-framing was done correctly
 619:../src/main.c **** 	  if (ln != KISS_TOO_LONG_FRM) {
 620:../src/main.c **** 	#ifdef SERIAL_TX_TEST_MODE
 621:../src/main.c **** 		  // infinite loop for testing UART transmission
 622:../src/main.c **** 		  for (;;) {
 623:../src/main.c **** 
 624:../src/main.c **** 			  retval = srl_receive_data(main_kiss_srl_ctx_ptr, 100, FEND, FEND, 0, 0, 0);
 625:../src/main.c **** 	#endif
 626:../src/main.c **** 			  retval = srl_start_tx(main_kiss_srl_ctx_ptr, ln);
 627:../src/main.c **** 
 628:../src/main.c **** 	#ifdef SERIAL_TX_TEST_MODE
 629:../src/main.c **** 			  while(main_kiss_srl_ctx_ptr->srl_tx_state != SRL_TX_IDLE);
 630:../src/main.c **** 	//		  while(srl_rx_state != SRL_RX_DONE);
 631:../src/main.c **** 
 632:../src/main.c **** 			  GPIOC->ODR = (GPIOC->ODR ^ GPIO_Pin_9);
 633:../src/main.c **** 
 634:../src/main.c **** 			  if (main_kiss_srl_ctx_ptr->srl_rx_state == SRL_RX_DONE) {
 635:../src/main.c **** 				  GPIOC->ODR = (GPIOC->ODR ^ GPIO_Pin_8);
 636:../src/main.c **** 
 637:../src/main.c **** 				  retval = 200;
 638:../src/main.c **** 			  }
 639:../src/main.c **** 		  }
 640:../src/main.c **** 	#endif
 641:../src/main.c **** 	  }
 642:../src/main.c **** 
 643:../src/main.c ****  }
 644:../src/main.c **** 
 645:../src/main.c ****   // reinitializing AFSK and AX25 driver
 646:../src/main.c ****   AFSK_Init(&main_afsk);
 669              		.loc 1 646 0
 670 0420 6A4C     		ldr	r4, .L117+84
 671 0422 2046     		mov	r0, r4
 672 0424 FFF7FEFF 		bl	AFSK_Init
 673              	.LVL58:
 647:../src/main.c **** 
 648:../src/main.c ****   ADCStartConfig();
 674              		.loc 1 648 0
 675 0428 FFF7FEFF 		bl	ADCStartConfig
 676              	.LVL59:
 649:../src/main.c ****   DACStartConfig();
 677              		.loc 1 649 0
 678 042c FFF7FEFF 		bl	DACStartConfig
 679              	.LVL60:
 650:../src/main.c ****   AFSK_Init(&main_afsk);
 680              		.loc 1 650 0
 681 0430 2046     		mov	r0, r4
 682 0432 FFF7FEFF 		bl	AFSK_Init
 683              	.LVL61:
 651:../src/main.c ****   ax25_init(&main_ax25, &main_afsk, 0, message_callback);
 684              		.loc 1 651 0
 685 0436 684B     		ldr	r3, .L117+96
 686 0438 0022     		movs	r2, #0
 687 043a 2146     		mov	r1, r4
 688 043c 6448     		ldr	r0, .L117+88
 689 043e FFF7FEFF 		bl	ax25_init
 690              	.LVL62:
 652:../src/main.c **** 
 653:../src/main.c **** 	if ((main_config_data_mode->wx & WX_ENABLED) == 1) {
 691              		.loc 1 653 0
 692 0442 584B     		ldr	r3, .L117+44
 693 0444 1968     		ldr	r1, [r3]
 694 0446 4B78     		ldrb	r3, [r1, #1]	@ zero_extendqisi2
 695 0448 13F0010F 		tst	r3, #1
 696 044c 40F09881 		bne	.L87
 697              	.L35:
 654:../src/main.c **** 	  // getting all meteo measuremenets to be sure that WX frames want be sent with zeros
 655:../src/main.c **** 	  wx_get_all_measurements(main_config_data_wx_sources, main_config_data_mode, main_config_data_umb
 656:../src/main.c **** 	}
 657:../src/main.c **** 
 658:../src/main.c ****   // start serial port i/o transaction depending on station configuration
 659:../src/main.c ****   if (main_config_data_mode->victron == 1) {
 698              		.loc 1 659 0
 699 0450 544B     		ldr	r3, .L117+44
 700 0452 1B68     		ldr	r3, [r3]
 701 0454 9B79     		ldrb	r3, [r3, #6]	@ zero_extendqisi2
 702 0456 012B     		cmp	r3, #1
 703 0458 00F09B81 		beq	.L88
 660:../src/main.c **** 	  // initializing protocol parser
 661:../src/main.c **** 	  ve_direct_parser_init(&rte_pv_struct, &rte_pv_average);
 662:../src/main.c **** 
 663:../src/main.c **** 	  // enabling timeout handling for serial port. This is required because VE protocol frame may var
 664:../src/main.c **** 	  // and serial port driver could finish reception only either on stop character or when declared 
 665:../src/main.c **** 	  // has been received.
 666:../src/main.c **** 	  srl_switch_timeout(main_kiss_srl_ctx_ptr, 1, 50);
 667:../src/main.c **** 
 668:../src/main.c **** 	  // switching UART to receive mode to be ready for data from charging controller
 669:../src/main.c **** 	  srl_receive_data(main_kiss_srl_ctx_ptr, VE_DIRECT_MAX_FRAME_LN, 0, 0, 0, 0, 0);
 670:../src/main.c ****   }
 671:../src/main.c ****   else {
 672:../src/main.c **** 	  // switching UART to receive mode to be ready for KISS frames from host
 673:../src/main.c **** 	  srl_receive_data(main_kiss_srl_ctx_ptr, 100, FEND, FEND, 0, 0, 0);
 704              		.loc 1 673 0
 705 045c 4B4B     		ldr	r3, .L117+20
 706 045e 1868     		ldr	r0, [r3]
 707 0460 0023     		movs	r3, #0
 708 0462 0293     		str	r3, [sp, #8]
 709 0464 0193     		str	r3, [sp, #4]
 710 0466 0093     		str	r3, [sp]
 711 0468 6FF03F03 		mvn	r3, #63
 712 046c 1A46     		mov	r2, r3
 713 046e 6421     		movs	r1, #100
 714 0470 FFF7FEFF 		bl	srl_receive_data
 715              	.LVL63:
 716              	.L37:
 674:../src/main.c ****   }
 675:../src/main.c **** 
 676:../src/main.c ****   io_oc_output_low();
 717              		.loc 1 676 0
 718 0474 FFF7FEFF 		bl	io_oc_output_low
 719              	.LVL64:
 677:../src/main.c ****   GPIO_ResetBits(GPIOC, GPIO_Pin_8 | GPIO_Pin_9);
 720              		.loc 1 677 0
 721 0478 4FF44071 		mov	r1, #768
 722 047c 5748     		ldr	r0, .L117+100
 723 047e FFF7FEFF 		bl	GPIO_ResetBits
 724              	.LVL65:
 678:../src/main.c **** 
 679:../src/main.c ****   // configuting system timers
 680:../src/main.c ****   TimerConfig();
 725              		.loc 1 680 0
 726 0482 FFF7FEFF 		bl	TimerConfig
 727              	.LVL66:
 681:../src/main.c **** 
 682:../src/main.c ****   if (main_config_data_basic-> beacon_at_bootup == 1)
 728              		.loc 1 682 0
 729 0486 4F4B     		ldr	r3, .L117+76
 730 0488 1B68     		ldr	r3, [r3]
 731 048a 93F89730 		ldrb	r3, [r3, #151]	@ zero_extendqisi2
 732 048e 012B     		cmp	r3, #1
 733 0490 00F09381 		beq	.L89
 734              	.L38:
 683:../src/main.c **** 	  beacon_send_own();
 684:../src/main.c **** 
 685:../src/main.c ****   // initialize UMB transaction
 686:../src/main.c ****   if (main_config_data_mode->wx_umb == 1) {
 735              		.loc 1 686 0
 736 0494 434B     		ldr	r3, .L117+44
 737 0496 1B68     		ldr	r3, [r3]
 738 0498 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 739 049a 012B     		cmp	r3, #1
 740 049c 00F09081 		beq	.L90
 741              	.L39:
 687:../src/main.c **** 	umb_0x26_status_request(&rte_wx_umb, &rte_wx_umb_context, main_config_data_umb);
 688:../src/main.c ****   }
 689:../src/main.c **** 
 690:../src/main.c **** #ifdef INTERNAL_WATCHDOG
 691:../src/main.c ****    // reload watchdog counter
 692:../src/main.c ****    IWDG_ReloadCounter();
 742              		.loc 1 692 0
 743 04a0 FFF7FEFF 		bl	IWDG_ReloadCounter
 744              	.LVL67:
 693:../src/main.c **** #endif
 694:../src/main.c **** 
 695:../src/main.c **** #ifdef EXTERNAL_WATCHDOG
 696:../src/main.c ****    Configure_GPIO(GPIOA,12,GPPP_OUTPUT_2MHZ);	// external watchdog
 745              		.loc 1 696 0
 746 04a4 374C     		ldr	r4, .L117+12
 747 04a6 0122     		movs	r2, #1
 748 04a8 0C21     		movs	r1, #12
 749 04aa 2046     		mov	r0, r4
 750 04ac FFF7FEFF 		bl	Configure_GPIO
 751              	.LVL68:
 697:../src/main.c **** 
 698:../src/main.c ****    GPIOA->ODR ^= GPIO_Pin_12; // Flip the watchdog pin
 752              		.loc 1 698 0
 753 04b0 E368     		ldr	r3, [r4, #12]
 754 04b2 83F48053 		eor	r3, r3, #4096
 755 04b6 E360     		str	r3, [r4, #12]
 198:../src/main.c **** 
 756              		.loc 1 198 0
 757 04b8 0024     		movs	r4, #0
 758 04ba F0E2     		b	.L40
 759              	.L18:
 359:../src/main.c **** 	  main_symbol_s = '#';
 760              		.loc 1 359 0
 761 04bc 2E4B     		ldr	r3, .L117
 762 04be 3122     		movs	r2, #49
 763 04c0 1A70     		strb	r2, [r3]
 360:../src/main.c **** 	  break;
 764              		.loc 1 360 0
 765 04c2 2E4B     		ldr	r3, .L117+4
 766 04c4 2322     		movs	r2, #35
 767 04c6 1A70     		strb	r2, [r3]
 361:../src/main.c ****   case 2:		// _SYMBOL_HOUSE
 768              		.loc 1 361 0
 769 04c8 E4E6     		b	.L21
 770              	.L19:
 363:../src/main.c **** 	  main_symbol_s = '-';
 771              		.loc 1 363 0
 772 04ca 2B4B     		ldr	r3, .L117
 773 04cc 2F22     		movs	r2, #47
 774 04ce 1A70     		strb	r2, [r3]
 364:../src/main.c **** 	  break;
 775              		.loc 1 364 0
 776 04d0 2A4B     		ldr	r3, .L117+4
 777 04d2 2D22     		movs	r2, #45
 778 04d4 1A70     		strb	r2, [r3]
 365:../src/main.c ****   case 3:		// _SYMBOL_RXIGATE
 779              		.loc 1 365 0
 780 04d6 DDE6     		b	.L21
 781              	.L20:
 367:../src/main.c **** 	  main_symbol_s = '&';
 782              		.loc 1 367 0
 783 04d8 274B     		ldr	r3, .L117
 784 04da 4922     		movs	r2, #73
 785 04dc 1A70     		strb	r2, [r3]
 368:../src/main.c **** 	  break;
 786              		.loc 1 368 0
 787 04de 274B     		ldr	r3, .L117+4
 788 04e0 2622     		movs	r2, #38
 789 04e2 1A70     		strb	r2, [r3]
 369:../src/main.c ****   default:		// _SYMBOL_IGATE
 790              		.loc 1 369 0
 791 04e4 D6E6     		b	.L21
 792              	.L15:
 371:../src/main.c **** 	  main_symbol_s = '&';
 793              		.loc 1 371 0
 794 04e6 244B     		ldr	r3, .L117
 795 04e8 5222     		movs	r2, #82
 796 04ea 1A70     		strb	r2, [r3]
 372:../src/main.c **** 	  break;
 797              		.loc 1 372 0
 798 04ec 234B     		ldr	r3, .L117+4
 799 04ee 2622     		movs	r2, #38
 800 04f0 1A70     		strb	r2, [r3]
 373:../src/main.c **** 
 801              		.loc 1 373 0
 802 04f2 CFE6     		b	.L21
 803              	.L80:
 426:../src/main.c **** 
 804              		.loc 1 426 0
 805 04f4 294A     		ldr	r2, .L117+36
 806 04f6 4FF49641 		mov	r1, #19200
 807 04fa 1160     		str	r1, [r2]
 429:../src/main.c ****   }
 808              		.loc 1 429 0
 809 04fc 354A     		ldr	r2, .L117+92
 810 04fe 0021     		movs	r1, #0
 811 0500 1170     		strb	r1, [r2]
 812 0502 12E7     		b	.L22
 813              	.L81:
 435:../src/main.c **** 
 814              		.loc 1 435 0
 815 0504 4FF49643 		mov	r3, #19200
 816 0508 244A     		ldr	r2, .L117+36
 817 050a 1360     		str	r3, [r2]
 438:../src/main.c **** 
 818              		.loc 1 438 0
 819 050c 2048     		ldr	r0, .L117+24
 820 050e 0022     		movs	r2, #0
 821 0510 80F84420 		strb	r2, [r0, #68]
 441:../src/main.c **** 
 822              		.loc 1 441 0
 823 0514 0124     		movs	r4, #1
 824 0516 0394     		str	r4, [sp, #12]
 825 0518 0293     		str	r3, [sp, #8]
 826 051a 4FF40073 		mov	r3, #512
 827 051e 0193     		str	r3, [sp, #4]
 828 0520 214A     		ldr	r2, .L117+48
 829 0522 0092     		str	r2, [sp]
 830 0524 214A     		ldr	r2, .L117+52
 831 0526 2249     		ldr	r1, .L117+56
 832 0528 FFF7FEFF 		bl	srl_init
 833              	.LVL69:
 443:../src/main.c **** 
 834              		.loc 1 443 0
 835 052c 174D     		ldr	r5, .L117+20
 836 052e 40F6B832 		movw	r2, #3000
 837 0532 2146     		mov	r1, r4
 838 0534 2868     		ldr	r0, [r5]
 839 0536 FFF7FEFF 		bl	srl_switch_timeout
 840              	.LVL70:
 445:../src/main.c **** 
 841              		.loc 1 445 0
 842 053a 2868     		ldr	r0, [r5]
 843 053c FFF7FEFF 		bl	davis_init
 844              	.LVL71:
 448:../src/main.c **** 
 845              		.loc 1 448 0
 846 0540 2046     		mov	r0, r4
 847 0542 FFF7FEFF 		bl	davis_wake_up
 848              	.LVL72:
 849 0546 B0FA80F0 		clz	r0, r0
 850 054a 4009     		lsrs	r0, r0, #5
 851 054c 244B     		ldr	r3, .L117+104
 852 054e 1870     		strb	r0, [r3]
 451:../src/main.c **** 		  // turn LCD backlight on..
 853              		.loc 1 451 0
 854 0550 0028     		cmp	r0, #0
 855 0552 49D0     		beq	.L24
 453:../src/main.c **** 
 856              		.loc 1 453 0
 857 0554 2046     		mov	r0, r4
 858 0556 FFF7FEFF 		bl	davis_control_backlight
 859              	.LVL73:
 456:../src/main.c **** 
 860              		.loc 1 456 0
 861 055a 4FF47A70 		mov	r0, #1000
 862 055e FFF7FEFF 		bl	delay_fixed
 863              	.LVL74:
 459:../src/main.c **** 
 864              		.loc 1 459 0
 865 0562 0020     		movs	r0, #0
 866 0564 FFF7FEFF 		bl	davis_control_backlight
 867              	.LVL75:
 462:../src/main.c **** 
 868              		.loc 1 462 0
 869 0568 1A4B     		ldr	r3, .L117+92
 870 056a 0022     		movs	r2, #0
 871 056c 1A70     		strb	r2, [r3]
 467:../src/main.c **** 
 872              		.loc 1 467 0
 873 056e 1D4B     		ldr	r3, .L117+108
 874 0570 1C70     		strb	r4, [r3]
 470:../src/main.c **** 
 875              		.loc 1 470 0
 876 0572 FFF7FEFF 		bl	davis_trigger_rxcheck_packet
 877              	.LVL76:
 878 0576 FDE6     		b	.L25
 879              	.L118:
 880              		.align	2
 881              	.L117:
 882 0578 00000000 		.word	.LANCHOR2
 883 057c 00000000 		.word	.LANCHOR3
 884 0580 00000000 		.word	.LANCHOR4
 885 0584 00080140 		.word	1073809408
 886 0588 00100240 		.word	1073876992
 887 058c 00000000 		.word	main_kiss_srl_ctx_ptr
 888 0590 00000000 		.word	main_kiss_srl_ctx
 889 0594 00000000 		.word	main_wx_srl_ctx_ptr
 890 0598 00000000 		.word	main_wx_srl_ctx
 891 059c 00000000 		.word	main_target_kiss_baudrate
 892 05a0 00000000 		.word	main_target_wx_baudrate
 893 05a4 00000000 		.word	.LANCHOR5
 894 05a8 00000000 		.word	srl_usart1_tx_buffer
 895 05ac 00000000 		.word	srl_usart1_rx_buffer
 896 05b0 00380140 		.word	1073821696
 897 05b4 00000000 		.word	srl_usart2_tx_buffer
 898 05b8 00000000 		.word	srl_usart2_rx_buffer
 899 05bc 00440040 		.word	1073759232
 900 05c0 00000000 		.word	main_own_path
 901 05c4 00000000 		.word	.LANCHOR1
 902 05c8 00000000 		.word	.LANCHOR10
 903 05cc 00000000 		.word	main_afsk
 904 05d0 00000000 		.word	main_ax25
 905 05d4 00000000 		.word	.LANCHOR6
 906 05d8 00000000 		.word	message_callback
 907 05dc 00100140 		.word	1073811456
 908 05e0 00000000 		.word	rte_wx_davis_station_avaliable
 909 05e4 00000000 		.word	.LANCHOR7
 910              	.L24:
 475:../src/main.c **** 		  main_kiss_srl_ctx_ptr->srl_rx_state = SRL_RX_NOT_CONFIG;
 911              		.loc 1 475 0
 912 05e8 4FF41653 		mov	r3, #9600
 913 05ec 924A     		ldr	r2, .L119
 914 05ee 1360     		str	r3, [r2]
 476:../src/main.c **** 
 915              		.loc 1 476 0
 916 05f0 924A     		ldr	r2, .L119+4
 917 05f2 1068     		ldr	r0, [r2]
 918 05f4 0022     		movs	r2, #0
 919 05f6 80F84420 		strb	r2, [r0, #68]
 479:../src/main.c **** 		  srl_init(main_wx_srl_ctx_ptr, USART2, srl_usart2_rx_buffer, RX_BUFFER_2_LN, srl_usart2_tx_buffe
 920              		.loc 1 479 0
 921 05fa 0124     		movs	r4, #1
 922 05fc 0394     		str	r4, [sp, #12]
 923 05fe 0293     		str	r3, [sp, #8]
 924 0600 4FF40073 		mov	r3, #512
 925 0604 0193     		str	r3, [sp, #4]
 926 0606 8E4A     		ldr	r2, .L119+8
 927 0608 0092     		str	r2, [sp]
 928 060a 8E4A     		ldr	r2, .L119+12
 929 060c 8E49     		ldr	r1, .L119+16
 930 060e FFF7FEFF 		bl	srl_init
 931              	.LVL77:
 480:../src/main.c **** 
 932              		.loc 1 480 0
 933 0612 0394     		str	r4, [sp, #12]
 934 0614 8D4B     		ldr	r3, .L119+20
 935 0616 1B68     		ldr	r3, [r3]
 936 0618 0293     		str	r3, [sp, #8]
 937 061a 6023     		movs	r3, #96
 938 061c 0193     		str	r3, [sp, #4]
 939 061e 8C4A     		ldr	r2, .L119+24
 940 0620 0092     		str	r2, [sp]
 941 0622 8C4A     		ldr	r2, .L119+28
 942 0624 8C49     		ldr	r1, .L119+32
 943 0626 8D48     		ldr	r0, .L119+36
 944 0628 0068     		ldr	r0, [r0]
 945 062a FFF7FEFF 		bl	srl_init
 946              	.LVL78:
 947 062e A1E6     		b	.L25
 948              	.L82:
 486:../src/main.c **** 
 949              		.loc 1 486 0
 950 0630 8B4D     		ldr	r5, .L119+40
 951 0632 2B68     		ldr	r3, [r5]
 952 0634 8B4A     		ldr	r2, .L119+44
 953 0636 0121     		movs	r1, #1
 954 0638 8B48     		ldr	r0, .L119+48
 955 063a FFF7FEFF 		bl	rtu_serial_init
 956              	.LVL79:
 488:../src/main.c **** 
 957              		.loc 1 488 0
 958 063e 2B68     		ldr	r3, [r5]
 959 0640 1B88     		ldrh	r3, [r3]
 960 0642 824E     		ldr	r6, .L119+20
 961 0644 3360     		str	r3, [r6]
 491:../src/main.c **** 	  srl_init(main_wx_srl_ctx_ptr, USART2, srl_usart2_rx_buffer, RX_BUFFER_2_LN, srl_usart2_tx_buffer
 962              		.loc 1 491 0
 963 0646 0124     		movs	r4, #1
 964 0648 0394     		str	r4, [sp, #12]
 965 064a 7B4B     		ldr	r3, .L119
 966 064c 1B68     		ldr	r3, [r3]
 967 064e 0293     		str	r3, [sp, #8]
 968 0650 4FF40073 		mov	r3, #512
 969 0654 0193     		str	r3, [sp, #4]
 970 0656 7A4A     		ldr	r2, .L119+8
 971 0658 0092     		str	r2, [sp]
 972 065a 7A4A     		ldr	r2, .L119+12
 973 065c 7A49     		ldr	r1, .L119+16
 974 065e 7748     		ldr	r0, .L119+4
 975 0660 0068     		ldr	r0, [r0]
 976 0662 FFF7FEFF 		bl	srl_init
 977              	.LVL80:
 492:../src/main.c **** 	  srl_switch_tx_delay(main_wx_srl_ctx_ptr, 1);
 978              		.loc 1 492 0
 979 0666 2B68     		ldr	r3, [r5]
 980 0668 7C4D     		ldr	r5, .L119+36
 981 066a DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 982 066c 0393     		str	r3, [sp, #12]
 983 066e 3368     		ldr	r3, [r6]
 984 0670 0293     		str	r3, [sp, #8]
 985 0672 6023     		movs	r3, #96
 986 0674 0193     		str	r3, [sp, #4]
 987 0676 764A     		ldr	r2, .L119+24
 988 0678 0092     		str	r2, [sp]
 989 067a 764A     		ldr	r2, .L119+28
 990 067c 7649     		ldr	r1, .L119+32
 991 067e 2868     		ldr	r0, [r5]
 992 0680 FFF7FEFF 		bl	srl_init
 993              	.LVL81:
 493:../src/main.c **** 
 994              		.loc 1 493 0
 995 0684 2146     		mov	r1, r4
 996 0686 2868     		ldr	r0, [r5]
 997 0688 FFF7FEFF 		bl	srl_switch_tx_delay
 998              	.LVL82:
 496:../src/main.c **** 
 999              		.loc 1 496 0
 1000 068c 774B     		ldr	r3, .L119+52
 1001 068e 1C70     		strb	r4, [r3]
 498:../src/main.c ****   }
 1002              		.loc 1 498 0
 1003 0690 FFF7FEFF 		bl	rtu_serial_start
 1004              	.LVL83:
 1005 0694 6EE6     		b	.L25
 1006              	.L83:
 562:../src/main.c **** 
 1007              		.loc 1 562 0
 1008 0696 764B     		ldr	r3, .L119+56
 1009 0698 0B22     		movs	r2, #11
 1010 069a 4FF40061 		mov	r1, #2048
 1011 069e 7548     		ldr	r0, .L119+60
 1012 06a0 FFF7FEFF 		bl	dallas_init
 1013              	.LVL84:
 564:../src/main.c **** 		  // client initialization
 1014              		.loc 1 564 0
 1015 06a4 2368     		ldr	r3, [r4]
 1016 06a6 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 1017 06a8 012B     		cmp	r3, #1
 1018 06aa 06D1     		bne	.L28
 566:../src/main.c **** 	  }
 1019              		.loc 1 566 0
 1020 06ac 724B     		ldr	r3, .L119+64
 1021 06ae 1A68     		ldr	r2, [r3]
 1022 06b0 6A4B     		ldr	r3, .L119+36
 1023 06b2 1968     		ldr	r1, [r3]
 1024 06b4 7148     		ldr	r0, .L119+68
 1025 06b6 FFF7FEFF 		bl	umb_master_init
 1026              	.LVL85:
 1027              	.L28:
 569:../src/main.c **** 		  analog_anemometer_init(_ANEMOMETER_PULSES_IN_10SEC_PER_ONE_MS_OF_WINDSPEED, 38, 100, 1);
 1028              		.loc 1 569 0
 1029 06ba 714B     		ldr	r3, .L119+72
 1030 06bc 1B68     		ldr	r3, [r3]
 1031 06be 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 1032 06c0 13F0040F 		tst	r3, #4
 1033 06c4 06D1     		bne	.L29
 570:../src/main.c **** 	  }
 1034              		.loc 1 570 0
 1035 06c6 0123     		movs	r3, #1
 1036 06c8 6422     		movs	r2, #100
 1037 06ca 2621     		movs	r1, #38
 1038 06cc 0A20     		movs	r0, #10
 1039 06ce FFF7FEFF 		bl	analog_anemometer_init
 1040              	.LVL86:
 1041 06d2 95E6     		b	.L27
 1042              	.L29:
 573:../src/main.c **** 	  }
 1043              		.loc 1 573 0
 1044 06d4 0123     		movs	r3, #1
 1045 06d6 6422     		movs	r2, #100
 1046 06d8 2621     		movs	r1, #38
 1047 06da 0A20     		movs	r0, #10
 1048 06dc FFF7FEFF 		bl	analog_anemometer_init
 1049              	.LVL87:
 1050 06e0 8EE6     		b	.L27
 1051              	.L84:
 589:../src/main.c **** 	 ms5611_read_calibration(SensorCalData, &rte_wx_ms5611_qf);
 1052              		.loc 1 589 0
 1053 06e2 684C     		ldr	r4, .L119+76
 1054 06e4 2046     		mov	r0, r4
 1055 06e6 FFF7FEFF 		bl	ms5611_reset
 1056              	.LVL88:
 590:../src/main.c **** 	 ms5611_trigger_measure(0, 0);
 1057              		.loc 1 590 0
 1058 06ea 2146     		mov	r1, r4
 1059 06ec 6648     		ldr	r0, .L119+80
 1060 06ee FFF7FEFF 		bl	ms5611_read_calibration
 1061              	.LVL89:
 591:../src/main.c **** 	}
 1062              		.loc 1 591 0
 1063 06f2 0021     		movs	r1, #0
 1064 06f4 0846     		mov	r0, r1
 1065 06f6 FFF7FEFF 		bl	ms5611_trigger_measure
 1066              	.LVL90:
 1067 06fa 8CE6     		b	.L31
 1068              	.L85:
 594:../src/main.c **** 	 bme280_setup();
 1069              		.loc 1 594 0
 1070 06fc 6348     		ldr	r0, .L119+84
 1071 06fe FFF7FEFF 		bl	bme280_reset
 1072              	.LVL91:
 595:../src/main.c **** 	 bme280_read_calibration(bme280_calibration_data);
 1073              		.loc 1 595 0
 1074 0702 FFF7FEFF 		bl	bme280_setup
 1075              	.LVL92:
 596:../src/main.c **** 	}
 1076              		.loc 1 596 0
 1077 0706 6248     		ldr	r0, .L119+88
 1078 0708 FFF7FEFF 		bl	bme280_read_calibration
 1079              	.LVL93:
 1080 070c 83E6     		b	.L31
 1081              	.L86:
 601:../src/main.c **** 
 1082              		.loc 1 601 0
 1083 070e 614B     		ldr	r3, .L119+92
 1084 0710 1A68     		ldr	r2, [r3]
 1085 0712 92F90C30 		ldrsb	r3, [r2, #12]
 1086 0716 92F91410 		ldrsb	r1, [r2, #20]
 1087 071a 1532     		adds	r2, r2, #21
 1088 071c 5E4C     		ldr	r4, .L119+96
 1089 071e 0492     		str	r2, [sp, #16]
 1090 0720 5E4A     		ldr	r2, .L119+100
 1091 0722 92F90020 		ldrsb	r2, [r2]
 1092 0726 0392     		str	r2, [sp, #12]
 1093 0728 0291     		str	r1, [sp, #8]
 1094 072a 5D4A     		ldr	r2, .L119+104
 1095 072c 0192     		str	r2, [sp, #4]
 1096 072e 5D4A     		ldr	r2, .L119+108
 1097 0730 92F90020 		ldrsb	r2, [r2]
 1098 0734 0092     		str	r2, [sp]
 1099 0736 5C4A     		ldr	r2, .L119+112
 1100 0738 5C49     		ldr	r1, .L119+116
 1101 073a 2046     		mov	r0, r4
 1102 073c FFF7FEFF 		bl	sprintf
 1103              	.LVL94:
 1104 0740 C3B2     		uxtb	r3, r0
 1105 0742 5B4A     		ldr	r2, .L119+120
 1106 0744 1370     		strb	r3, [r2]
 604:../src/main.c **** 
 1107              		.loc 1 604 0
 1108 0746 0022     		movs	r2, #0
 1109 0748 E254     		strb	r2, [r4, r3]
 608:../src/main.c **** 
 1110              		.loc 1 608 0
 1111 074a 4FF40072 		mov	r2, #512
 1112 074e 0192     		str	r2, [sp, #4]
 1113 0750 584A     		ldr	r2, .L119+124
 1114 0752 5269     		ldr	r2, [r2, #20]
 1115 0754 0092     		str	r2, [sp]
 1116 0756 2246     		mov	r2, r4
 1117 0758 0321     		movs	r1, #3
 1118 075a 5748     		ldr	r0, .L119+128
 1119 075c FFF7FEFF 		bl	ax25_sendVia_toBuffer
 1120              	.LVL95:
 1121 0760 0790     		str	r0, [sp, #28]
 1122              	.L34:
 612:../src/main.c **** 
 1123              		.loc 1 612 0 discriminator 2
 1124 0762 544B     		ldr	r3, .L119+124
 1125 0764 93F84530 		ldrb	r3, [r3, #69]	@ zero_extendqisi2
 1126 0768 012B     		cmp	r3, #1
 1127 076a 01D0     		beq	.L33
 612:../src/main.c **** 
 1128              		.loc 1 612 0 is_stmt 0 discriminator 1
 1129 076c 042B     		cmp	r3, #4
 1130 076e F8D1     		bne	.L34
 1131              	.L33:
 626:../src/main.c **** 
 1132              		.loc 1 626 0 is_stmt 1
 1133 0770 01B2     		sxth	r1, r0
 1134 0772 324B     		ldr	r3, .L119+4
 1135 0774 1868     		ldr	r0, [r3]
 1136 0776 FFF7FEFF 		bl	srl_start_tx
 1137              	.LVL96:
 1138 077a 504B     		ldr	r3, .L119+132
 1139 077c 1870     		strb	r0, [r3]
 1140 077e 4FE6     		b	.L32
 1141              	.L87:
 655:../src/main.c **** 	}
 1142              		.loc 1 655 0
 1143 0780 374B     		ldr	r3, .L119+40
 1144 0782 1B68     		ldr	r3, [r3]
 1145 0784 3C4A     		ldr	r2, .L119+64
 1146 0786 1268     		ldr	r2, [r2]
 1147 0788 4D48     		ldr	r0, .L119+136
 1148 078a 0068     		ldr	r0, [r0]
 1149 078c FFF7FEFF 		bl	wx_get_all_measurements
 1150              	.LVL97:
 1151 0790 5EE6     		b	.L35
 1152              	.L88:
 661:../src/main.c **** 
 1153              		.loc 1 661 0
 1154 0792 4C49     		ldr	r1, .L119+140
 1155 0794 4C48     		ldr	r0, .L119+144
 1156 0796 FFF7FEFF 		bl	ve_direct_parser_init
 1157              	.LVL98:
 666:../src/main.c **** 
 1158              		.loc 1 666 0
 1159 079a 284C     		ldr	r4, .L119+4
 1160 079c 3222     		movs	r2, #50
 1161 079e 0121     		movs	r1, #1
 1162 07a0 2068     		ldr	r0, [r4]
 1163 07a2 FFF7FEFF 		bl	srl_switch_timeout
 1164              	.LVL99:
 669:../src/main.c ****   }
 1165              		.loc 1 669 0
 1166 07a6 0022     		movs	r2, #0
 1167 07a8 0292     		str	r2, [sp, #8]
 1168 07aa 0192     		str	r2, [sp, #4]
 1169 07ac 0092     		str	r2, [sp]
 1170 07ae 1346     		mov	r3, r2
 1171 07b0 BA21     		movs	r1, #186
 1172 07b2 2068     		ldr	r0, [r4]
 1173 07b4 FFF7FEFF 		bl	srl_receive_data
 1174              	.LVL100:
 1175 07b8 5CE6     		b	.L37
 1176              	.L89:
 683:../src/main.c **** 
 1177              		.loc 1 683 0
 1178 07ba FFF7FEFF 		bl	beacon_send_own
 1179              	.LVL101:
 1180 07be 69E6     		b	.L38
 1181              	.L90:
 687:../src/main.c ****   }
 1182              		.loc 1 687 0
 1183 07c0 2D4B     		ldr	r3, .L119+64
 1184 07c2 1A68     		ldr	r2, [r3]
 1185 07c4 2D49     		ldr	r1, .L119+68
 1186 07c6 4148     		ldr	r0, .L119+148
 1187 07c8 FFF7FEFF 		bl	umb_0x26_status_request
 1188              	.LVL102:
 1189 07cc 68E6     		b	.L39
 1190              	.LVL103:
 1191              	.L110:
 1192              	.LBB38:
 1193              	.LBB39:
 1194              	.LBB40:
 1195              	.LBB41:
 1196              		.file 3 "../system/include/cmsis/cmsis_gcc.h"
   1:../system/include/cmsis/cmsis_gcc.h **** /**************************************************************************//**
   2:../system/include/cmsis/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:../system/include/cmsis/cmsis_gcc.h ****  * @brief    CMSIS Cortex-M Core Function/Instruction Header File
   4:../system/include/cmsis/cmsis_gcc.h ****  * @version  V4.30
   5:../system/include/cmsis/cmsis_gcc.h ****  * @date     20. October 2015
   6:../system/include/cmsis/cmsis_gcc.h ****  ******************************************************************************/
   7:../system/include/cmsis/cmsis_gcc.h **** /* Copyright (c) 2009 - 2015 ARM LIMITED
   8:../system/include/cmsis/cmsis_gcc.h **** 
   9:../system/include/cmsis/cmsis_gcc.h ****    All rights reserved.
  10:../system/include/cmsis/cmsis_gcc.h ****    Redistribution and use in source and binary forms, with or without
  11:../system/include/cmsis/cmsis_gcc.h ****    modification, are permitted provided that the following conditions are met:
  12:../system/include/cmsis/cmsis_gcc.h ****    - Redistributions of source code must retain the above copyright
  13:../system/include/cmsis/cmsis_gcc.h ****      notice, this list of conditions and the following disclaimer.
  14:../system/include/cmsis/cmsis_gcc.h ****    - Redistributions in binary form must reproduce the above copyright
  15:../system/include/cmsis/cmsis_gcc.h ****      notice, this list of conditions and the following disclaimer in the
  16:../system/include/cmsis/cmsis_gcc.h ****      documentation and/or other materials provided with the distribution.
  17:../system/include/cmsis/cmsis_gcc.h ****    - Neither the name of ARM nor the names of its contributors may be used
  18:../system/include/cmsis/cmsis_gcc.h ****      to endorse or promote products derived from this software without
  19:../system/include/cmsis/cmsis_gcc.h ****      specific prior written permission.
  20:../system/include/cmsis/cmsis_gcc.h ****    *
  21:../system/include/cmsis/cmsis_gcc.h ****    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  22:../system/include/cmsis/cmsis_gcc.h ****    AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  23:../system/include/cmsis/cmsis_gcc.h ****    IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  24:../system/include/cmsis/cmsis_gcc.h ****    ARE DISCLAIMED. IN NO EVENT SHALL COPYRIGHT HOLDERS AND CONTRIBUTORS BE
  25:../system/include/cmsis/cmsis_gcc.h ****    LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  26:../system/include/cmsis/cmsis_gcc.h ****    CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  27:../system/include/cmsis/cmsis_gcc.h ****    SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  28:../system/include/cmsis/cmsis_gcc.h ****    INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  29:../system/include/cmsis/cmsis_gcc.h ****    CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  30:../system/include/cmsis/cmsis_gcc.h ****    ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  31:../system/include/cmsis/cmsis_gcc.h ****    POSSIBILITY OF SUCH DAMAGE.
  32:../system/include/cmsis/cmsis_gcc.h ****    ---------------------------------------------------------------------------*/
  33:../system/include/cmsis/cmsis_gcc.h **** 
  34:../system/include/cmsis/cmsis_gcc.h **** 
  35:../system/include/cmsis/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  36:../system/include/cmsis/cmsis_gcc.h **** #define __CMSIS_GCC_H
  37:../system/include/cmsis/cmsis_gcc.h **** 
  38:../system/include/cmsis/cmsis_gcc.h **** /* ignore some GCC warnings */
  39:../system/include/cmsis/cmsis_gcc.h **** #if defined ( __GNUC__ )
  40:../system/include/cmsis/cmsis_gcc.h **** #pragma GCC diagnostic push
  41:../system/include/cmsis/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  42:../system/include/cmsis/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  43:../system/include/cmsis/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  44:../system/include/cmsis/cmsis_gcc.h **** #endif
  45:../system/include/cmsis/cmsis_gcc.h **** 
  46:../system/include/cmsis/cmsis_gcc.h **** 
  47:../system/include/cmsis/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
  48:../system/include/cmsis/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
  49:../system/include/cmsis/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
  50:../system/include/cmsis/cmsis_gcc.h ****   @{
  51:../system/include/cmsis/cmsis_gcc.h ****  */
  52:../system/include/cmsis/cmsis_gcc.h **** 
  53:../system/include/cmsis/cmsis_gcc.h **** /**
  54:../system/include/cmsis/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
  55:../system/include/cmsis/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
  56:../system/include/cmsis/cmsis_gcc.h ****            Can only be executed in Privileged modes.
  57:../system/include/cmsis/cmsis_gcc.h ****  */
  58:../system/include/cmsis/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __enable_irq(void)
  59:../system/include/cmsis/cmsis_gcc.h **** {
  60:../system/include/cmsis/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
  61:../system/include/cmsis/cmsis_gcc.h **** }
  62:../system/include/cmsis/cmsis_gcc.h **** 
  63:../system/include/cmsis/cmsis_gcc.h **** 
  64:../system/include/cmsis/cmsis_gcc.h **** /**
  65:../system/include/cmsis/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
  66:../system/include/cmsis/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
  67:../system/include/cmsis/cmsis_gcc.h ****   Can only be executed in Privileged modes.
  68:../system/include/cmsis/cmsis_gcc.h ****  */
  69:../system/include/cmsis/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __disable_irq(void)
  70:../system/include/cmsis/cmsis_gcc.h **** {
  71:../system/include/cmsis/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
  72:../system/include/cmsis/cmsis_gcc.h **** }
  73:../system/include/cmsis/cmsis_gcc.h **** 
  74:../system/include/cmsis/cmsis_gcc.h **** 
  75:../system/include/cmsis/cmsis_gcc.h **** /**
  76:../system/include/cmsis/cmsis_gcc.h ****   \brief   Get Control Register
  77:../system/include/cmsis/cmsis_gcc.h ****   \details Returns the content of the Control Register.
  78:../system/include/cmsis/cmsis_gcc.h ****   \return               Control Register value
  79:../system/include/cmsis/cmsis_gcc.h ****  */
  80:../system/include/cmsis/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_CONTROL(void)
  81:../system/include/cmsis/cmsis_gcc.h **** {
  82:../system/include/cmsis/cmsis_gcc.h ****   uint32_t result;
  83:../system/include/cmsis/cmsis_gcc.h **** 
  84:../system/include/cmsis/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
  85:../system/include/cmsis/cmsis_gcc.h ****   return(result);
  86:../system/include/cmsis/cmsis_gcc.h **** }
  87:../system/include/cmsis/cmsis_gcc.h **** 
  88:../system/include/cmsis/cmsis_gcc.h **** 
  89:../system/include/cmsis/cmsis_gcc.h **** /**
  90:../system/include/cmsis/cmsis_gcc.h ****   \brief   Set Control Register
  91:../system/include/cmsis/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
  92:../system/include/cmsis/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
  93:../system/include/cmsis/cmsis_gcc.h ****  */
  94:../system/include/cmsis/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_CONTROL(uint32_t control)
  95:../system/include/cmsis/cmsis_gcc.h **** {
  96:../system/include/cmsis/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
  97:../system/include/cmsis/cmsis_gcc.h **** }
  98:../system/include/cmsis/cmsis_gcc.h **** 
  99:../system/include/cmsis/cmsis_gcc.h **** 
 100:../system/include/cmsis/cmsis_gcc.h **** /**
 101:../system/include/cmsis/cmsis_gcc.h ****   \brief   Get IPSR Register
 102:../system/include/cmsis/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 103:../system/include/cmsis/cmsis_gcc.h ****   \return               IPSR Register value
 104:../system/include/cmsis/cmsis_gcc.h ****  */
 105:../system/include/cmsis/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_IPSR(void)
 106:../system/include/cmsis/cmsis_gcc.h **** {
 107:../system/include/cmsis/cmsis_gcc.h ****   uint32_t result;
 108:../system/include/cmsis/cmsis_gcc.h **** 
 109:../system/include/cmsis/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 110:../system/include/cmsis/cmsis_gcc.h ****   return(result);
 111:../system/include/cmsis/cmsis_gcc.h **** }
 112:../system/include/cmsis/cmsis_gcc.h **** 
 113:../system/include/cmsis/cmsis_gcc.h **** 
 114:../system/include/cmsis/cmsis_gcc.h **** /**
 115:../system/include/cmsis/cmsis_gcc.h ****   \brief   Get APSR Register
 116:../system/include/cmsis/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 117:../system/include/cmsis/cmsis_gcc.h ****   \return               APSR Register value
 118:../system/include/cmsis/cmsis_gcc.h ****  */
 119:../system/include/cmsis/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_APSR(void)
 120:../system/include/cmsis/cmsis_gcc.h **** {
 121:../system/include/cmsis/cmsis_gcc.h ****   uint32_t result;
 122:../system/include/cmsis/cmsis_gcc.h **** 
 123:../system/include/cmsis/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 124:../system/include/cmsis/cmsis_gcc.h ****   return(result);
 125:../system/include/cmsis/cmsis_gcc.h **** }
 126:../system/include/cmsis/cmsis_gcc.h **** 
 127:../system/include/cmsis/cmsis_gcc.h **** 
 128:../system/include/cmsis/cmsis_gcc.h **** /**
 129:../system/include/cmsis/cmsis_gcc.h ****   \brief   Get xPSR Register
 130:../system/include/cmsis/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 131:../system/include/cmsis/cmsis_gcc.h **** 
 132:../system/include/cmsis/cmsis_gcc.h ****     \return               xPSR Register value
 133:../system/include/cmsis/cmsis_gcc.h ****  */
 134:../system/include/cmsis/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_xPSR(void)
 135:../system/include/cmsis/cmsis_gcc.h **** {
 136:../system/include/cmsis/cmsis_gcc.h ****   uint32_t result;
 137:../system/include/cmsis/cmsis_gcc.h **** 
 138:../system/include/cmsis/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 139:../system/include/cmsis/cmsis_gcc.h ****   return(result);
 140:../system/include/cmsis/cmsis_gcc.h **** }
 141:../system/include/cmsis/cmsis_gcc.h **** 
 142:../system/include/cmsis/cmsis_gcc.h **** 
 143:../system/include/cmsis/cmsis_gcc.h **** /**
 144:../system/include/cmsis/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 145:../system/include/cmsis/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 146:../system/include/cmsis/cmsis_gcc.h ****   \return               PSP Register value
 147:../system/include/cmsis/cmsis_gcc.h ****  */
 148:../system/include/cmsis/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_PSP(void)
 149:../system/include/cmsis/cmsis_gcc.h **** {
 150:../system/include/cmsis/cmsis_gcc.h ****   register uint32_t result;
 151:../system/include/cmsis/cmsis_gcc.h **** 
 152:../system/include/cmsis/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp\n"  : "=r" (result) );
 153:../system/include/cmsis/cmsis_gcc.h ****   return(result);
 154:../system/include/cmsis/cmsis_gcc.h **** }
 155:../system/include/cmsis/cmsis_gcc.h **** 
 156:../system/include/cmsis/cmsis_gcc.h **** 
 157:../system/include/cmsis/cmsis_gcc.h **** /**
 158:../system/include/cmsis/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 159:../system/include/cmsis/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 160:../system/include/cmsis/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 161:../system/include/cmsis/cmsis_gcc.h ****  */
 162:../system/include/cmsis/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_PSP(uint32_t topOfProcStack)
 163:../system/include/cmsis/cmsis_gcc.h **** {
 164:../system/include/cmsis/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0\n" : : "r" (topOfProcStack) : "sp");
 165:../system/include/cmsis/cmsis_gcc.h **** }
 166:../system/include/cmsis/cmsis_gcc.h **** 
 167:../system/include/cmsis/cmsis_gcc.h **** 
 168:../system/include/cmsis/cmsis_gcc.h **** /**
 169:../system/include/cmsis/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 170:../system/include/cmsis/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 171:../system/include/cmsis/cmsis_gcc.h ****   \return               MSP Register value
 172:../system/include/cmsis/cmsis_gcc.h ****  */
 173:../system/include/cmsis/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_MSP(void)
 174:../system/include/cmsis/cmsis_gcc.h **** {
 175:../system/include/cmsis/cmsis_gcc.h ****   register uint32_t result;
 176:../system/include/cmsis/cmsis_gcc.h **** 
 177:../system/include/cmsis/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp\n" : "=r" (result) );
 178:../system/include/cmsis/cmsis_gcc.h ****   return(result);
 179:../system/include/cmsis/cmsis_gcc.h **** }
 180:../system/include/cmsis/cmsis_gcc.h **** 
 181:../system/include/cmsis/cmsis_gcc.h **** 
 182:../system/include/cmsis/cmsis_gcc.h **** /**
 183:../system/include/cmsis/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 184:../system/include/cmsis/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 185:../system/include/cmsis/cmsis_gcc.h **** 
 186:../system/include/cmsis/cmsis_gcc.h ****     \param [in]    topOfMainStack  Main Stack Pointer value to set
 187:../system/include/cmsis/cmsis_gcc.h ****  */
 188:../system/include/cmsis/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_MSP(uint32_t topOfMainStack)
 189:../system/include/cmsis/cmsis_gcc.h **** {
 190:../system/include/cmsis/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0\n" : : "r" (topOfMainStack) : "sp");
 191:../system/include/cmsis/cmsis_gcc.h **** }
 192:../system/include/cmsis/cmsis_gcc.h **** 
 193:../system/include/cmsis/cmsis_gcc.h **** 
 194:../system/include/cmsis/cmsis_gcc.h **** /**
 195:../system/include/cmsis/cmsis_gcc.h ****   \brief   Get Priority Mask
 196:../system/include/cmsis/cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 197:../system/include/cmsis/cmsis_gcc.h ****   \return               Priority Mask value
 198:../system/include/cmsis/cmsis_gcc.h ****  */
 199:../system/include/cmsis/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_PRIMASK(void)
 200:../system/include/cmsis/cmsis_gcc.h **** {
 201:../system/include/cmsis/cmsis_gcc.h ****   uint32_t result;
 202:../system/include/cmsis/cmsis_gcc.h **** 
 203:../system/include/cmsis/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) );
 204:../system/include/cmsis/cmsis_gcc.h ****   return(result);
 205:../system/include/cmsis/cmsis_gcc.h **** }
 206:../system/include/cmsis/cmsis_gcc.h **** 
 207:../system/include/cmsis/cmsis_gcc.h **** 
 208:../system/include/cmsis/cmsis_gcc.h **** /**
 209:../system/include/cmsis/cmsis_gcc.h ****   \brief   Set Priority Mask
 210:../system/include/cmsis/cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 211:../system/include/cmsis/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 212:../system/include/cmsis/cmsis_gcc.h ****  */
 213:../system/include/cmsis/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_PRIMASK(uint32_t priMask)
 214:../system/include/cmsis/cmsis_gcc.h **** {
 215:../system/include/cmsis/cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 216:../system/include/cmsis/cmsis_gcc.h **** }
 217:../system/include/cmsis/cmsis_gcc.h **** 
 218:../system/include/cmsis/cmsis_gcc.h **** 
 219:../system/include/cmsis/cmsis_gcc.h **** #if       (__CORTEX_M >= 0x03U)
 220:../system/include/cmsis/cmsis_gcc.h **** 
 221:../system/include/cmsis/cmsis_gcc.h **** /**
 222:../system/include/cmsis/cmsis_gcc.h ****   \brief   Enable FIQ
 223:../system/include/cmsis/cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 224:../system/include/cmsis/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 225:../system/include/cmsis/cmsis_gcc.h ****  */
 226:../system/include/cmsis/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __enable_fault_irq(void)
 227:../system/include/cmsis/cmsis_gcc.h **** {
 228:../system/include/cmsis/cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 229:../system/include/cmsis/cmsis_gcc.h **** }
 230:../system/include/cmsis/cmsis_gcc.h **** 
 231:../system/include/cmsis/cmsis_gcc.h **** 
 232:../system/include/cmsis/cmsis_gcc.h **** /**
 233:../system/include/cmsis/cmsis_gcc.h ****   \brief   Disable FIQ
 234:../system/include/cmsis/cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 235:../system/include/cmsis/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 236:../system/include/cmsis/cmsis_gcc.h ****  */
 237:../system/include/cmsis/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __disable_fault_irq(void)
 238:../system/include/cmsis/cmsis_gcc.h **** {
 239:../system/include/cmsis/cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 240:../system/include/cmsis/cmsis_gcc.h **** }
 241:../system/include/cmsis/cmsis_gcc.h **** 
 242:../system/include/cmsis/cmsis_gcc.h **** 
 243:../system/include/cmsis/cmsis_gcc.h **** /**
 244:../system/include/cmsis/cmsis_gcc.h ****   \brief   Get Base Priority
 245:../system/include/cmsis/cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 246:../system/include/cmsis/cmsis_gcc.h ****   \return               Base Priority register value
 247:../system/include/cmsis/cmsis_gcc.h ****  */
 248:../system/include/cmsis/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_BASEPRI(void)
 249:../system/include/cmsis/cmsis_gcc.h **** {
 250:../system/include/cmsis/cmsis_gcc.h ****   uint32_t result;
 251:../system/include/cmsis/cmsis_gcc.h **** 
 252:../system/include/cmsis/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 253:../system/include/cmsis/cmsis_gcc.h ****   return(result);
 254:../system/include/cmsis/cmsis_gcc.h **** }
 255:../system/include/cmsis/cmsis_gcc.h **** 
 256:../system/include/cmsis/cmsis_gcc.h **** 
 257:../system/include/cmsis/cmsis_gcc.h **** /**
 258:../system/include/cmsis/cmsis_gcc.h ****   \brief   Set Base Priority
 259:../system/include/cmsis/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 260:../system/include/cmsis/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 261:../system/include/cmsis/cmsis_gcc.h ****  */
 262:../system/include/cmsis/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_BASEPRI(uint32_t value)
 263:../system/include/cmsis/cmsis_gcc.h **** {
 264:../system/include/cmsis/cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (value) : "memory");
 265:../system/include/cmsis/cmsis_gcc.h **** }
 266:../system/include/cmsis/cmsis_gcc.h **** 
 267:../system/include/cmsis/cmsis_gcc.h **** 
 268:../system/include/cmsis/cmsis_gcc.h **** /**
 269:../system/include/cmsis/cmsis_gcc.h ****   \brief   Set Base Priority with condition
 270:../system/include/cmsis/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register only if BASEPRI masking is disable
 271:../system/include/cmsis/cmsis_gcc.h ****            or the new value increases the BASEPRI priority level.
 272:../system/include/cmsis/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 273:../system/include/cmsis/cmsis_gcc.h ****  */
 274:../system/include/cmsis/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_BASEPRI_MAX(uint32_t value)
 275:../system/include/cmsis/cmsis_gcc.h **** {
 276:../system/include/cmsis/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_max, %0" : : "r" (value) : "memory");
 277:../system/include/cmsis/cmsis_gcc.h **** }
 278:../system/include/cmsis/cmsis_gcc.h **** 
 279:../system/include/cmsis/cmsis_gcc.h **** 
 280:../system/include/cmsis/cmsis_gcc.h **** /**
 281:../system/include/cmsis/cmsis_gcc.h ****   \brief   Get Fault Mask
 282:../system/include/cmsis/cmsis_gcc.h ****   \details Returns the current value of the Fault Mask register.
 283:../system/include/cmsis/cmsis_gcc.h ****   \return               Fault Mask register value
 284:../system/include/cmsis/cmsis_gcc.h ****  */
 285:../system/include/cmsis/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_FAULTMASK(void)
 286:../system/include/cmsis/cmsis_gcc.h **** {
 287:../system/include/cmsis/cmsis_gcc.h ****   uint32_t result;
 288:../system/include/cmsis/cmsis_gcc.h **** 
 289:../system/include/cmsis/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask" : "=r" (result) );
 290:../system/include/cmsis/cmsis_gcc.h ****   return(result);
 291:../system/include/cmsis/cmsis_gcc.h **** }
 292:../system/include/cmsis/cmsis_gcc.h **** 
 293:../system/include/cmsis/cmsis_gcc.h **** 
 294:../system/include/cmsis/cmsis_gcc.h **** /**
 295:../system/include/cmsis/cmsis_gcc.h ****   \brief   Set Fault Mask
 296:../system/include/cmsis/cmsis_gcc.h ****   \details Assigns the given value to the Fault Mask register.
 297:../system/include/cmsis/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 298:../system/include/cmsis/cmsis_gcc.h ****  */
 299:../system/include/cmsis/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_FAULTMASK(uint32_t faultMask)
 300:../system/include/cmsis/cmsis_gcc.h **** {
 301:../system/include/cmsis/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask, %0" : : "r" (faultMask) : "memory");
 302:../system/include/cmsis/cmsis_gcc.h **** }
 303:../system/include/cmsis/cmsis_gcc.h **** 
 304:../system/include/cmsis/cmsis_gcc.h **** #endif /* (__CORTEX_M >= 0x03U) */
 305:../system/include/cmsis/cmsis_gcc.h **** 
 306:../system/include/cmsis/cmsis_gcc.h **** 
 307:../system/include/cmsis/cmsis_gcc.h **** #if       (__CORTEX_M == 0x04U) || (__CORTEX_M == 0x07U)
 308:../system/include/cmsis/cmsis_gcc.h **** 
 309:../system/include/cmsis/cmsis_gcc.h **** /**
 310:../system/include/cmsis/cmsis_gcc.h ****   \brief   Get FPSCR
 311:../system/include/cmsis/cmsis_gcc.h ****   \details Returns the current value of the Floating Point Status/Control register.
 312:../system/include/cmsis/cmsis_gcc.h ****   \return               Floating Point Status/Control register value
 313:../system/include/cmsis/cmsis_gcc.h ****  */
 314:../system/include/cmsis/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_FPSCR(void)
 315:../system/include/cmsis/cmsis_gcc.h **** {
 316:../system/include/cmsis/cmsis_gcc.h **** #if (__FPU_PRESENT == 1U) && (__FPU_USED == 1U)
 317:../system/include/cmsis/cmsis_gcc.h ****   uint32_t result;
 318:../system/include/cmsis/cmsis_gcc.h **** 
 319:../system/include/cmsis/cmsis_gcc.h ****   /* Empty asm statement works as a scheduling barrier */
 320:../system/include/cmsis/cmsis_gcc.h ****   __ASM volatile ("");
 321:../system/include/cmsis/cmsis_gcc.h ****   __ASM volatile ("VMRS %0, fpscr" : "=r" (result) );
 322:../system/include/cmsis/cmsis_gcc.h ****   __ASM volatile ("");
 323:../system/include/cmsis/cmsis_gcc.h ****   return(result);
 324:../system/include/cmsis/cmsis_gcc.h **** #else
 325:../system/include/cmsis/cmsis_gcc.h ****    return(0);
 326:../system/include/cmsis/cmsis_gcc.h **** #endif
 327:../system/include/cmsis/cmsis_gcc.h **** }
 328:../system/include/cmsis/cmsis_gcc.h **** 
 329:../system/include/cmsis/cmsis_gcc.h **** 
 330:../system/include/cmsis/cmsis_gcc.h **** /**
 331:../system/include/cmsis/cmsis_gcc.h ****   \brief   Set FPSCR
 332:../system/include/cmsis/cmsis_gcc.h ****   \details Assigns the given value to the Floating Point Status/Control register.
 333:../system/include/cmsis/cmsis_gcc.h ****   \param [in]    fpscr  Floating Point Status/Control value to set
 334:../system/include/cmsis/cmsis_gcc.h ****  */
 335:../system/include/cmsis/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_FPSCR(uint32_t fpscr)
 336:../system/include/cmsis/cmsis_gcc.h **** {
 337:../system/include/cmsis/cmsis_gcc.h **** #if (__FPU_PRESENT == 1U) && (__FPU_USED == 1U)
 338:../system/include/cmsis/cmsis_gcc.h ****   /* Empty asm statement works as a scheduling barrier */
 339:../system/include/cmsis/cmsis_gcc.h ****   __ASM volatile ("");
 340:../system/include/cmsis/cmsis_gcc.h ****   __ASM volatile ("VMSR fpscr, %0" : : "r" (fpscr) : "vfpcc");
 341:../system/include/cmsis/cmsis_gcc.h ****   __ASM volatile ("");
 342:../system/include/cmsis/cmsis_gcc.h **** #endif
 343:../system/include/cmsis/cmsis_gcc.h **** }
 344:../system/include/cmsis/cmsis_gcc.h **** 
 345:../system/include/cmsis/cmsis_gcc.h **** #endif /* (__CORTEX_M == 0x04U) || (__CORTEX_M == 0x07U) */
 346:../system/include/cmsis/cmsis_gcc.h **** 
 347:../system/include/cmsis/cmsis_gcc.h **** 
 348:../system/include/cmsis/cmsis_gcc.h **** 
 349:../system/include/cmsis/cmsis_gcc.h **** /*@} end of CMSIS_Core_RegAccFunctions */
 350:../system/include/cmsis/cmsis_gcc.h **** 
 351:../system/include/cmsis/cmsis_gcc.h **** 
 352:../system/include/cmsis/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 353:../system/include/cmsis/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 354:../system/include/cmsis/cmsis_gcc.h ****   Access to dedicated instructions
 355:../system/include/cmsis/cmsis_gcc.h ****   @{
 356:../system/include/cmsis/cmsis_gcc.h **** */
 357:../system/include/cmsis/cmsis_gcc.h **** 
 358:../system/include/cmsis/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 359:../system/include/cmsis/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 360:../system/include/cmsis/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 361:../system/include/cmsis/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 362:../system/include/cmsis/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 363:../system/include/cmsis/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 364:../system/include/cmsis/cmsis_gcc.h **** #else
 365:../system/include/cmsis/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 366:../system/include/cmsis/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 367:../system/include/cmsis/cmsis_gcc.h **** #endif
 368:../system/include/cmsis/cmsis_gcc.h **** 
 369:../system/include/cmsis/cmsis_gcc.h **** /**
 370:../system/include/cmsis/cmsis_gcc.h ****   \brief   No Operation
 371:../system/include/cmsis/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 372:../system/include/cmsis/cmsis_gcc.h ****  */
 373:../system/include/cmsis/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __NOP(void)
 374:../system/include/cmsis/cmsis_gcc.h **** {
 375:../system/include/cmsis/cmsis_gcc.h ****   __ASM volatile ("nop");
 376:../system/include/cmsis/cmsis_gcc.h **** }
 377:../system/include/cmsis/cmsis_gcc.h **** 
 378:../system/include/cmsis/cmsis_gcc.h **** 
 379:../system/include/cmsis/cmsis_gcc.h **** /**
 380:../system/include/cmsis/cmsis_gcc.h ****   \brief   Wait For Interrupt
 381:../system/include/cmsis/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 382:../system/include/cmsis/cmsis_gcc.h ****  */
 383:../system/include/cmsis/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __WFI(void)
 384:../system/include/cmsis/cmsis_gcc.h **** {
 385:../system/include/cmsis/cmsis_gcc.h ****   __ASM volatile ("wfi");
 386:../system/include/cmsis/cmsis_gcc.h **** }
 387:../system/include/cmsis/cmsis_gcc.h **** 
 388:../system/include/cmsis/cmsis_gcc.h **** 
 389:../system/include/cmsis/cmsis_gcc.h **** /**
 390:../system/include/cmsis/cmsis_gcc.h ****   \brief   Wait For Event
 391:../system/include/cmsis/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 392:../system/include/cmsis/cmsis_gcc.h ****     a low-power state until one of a number of events occurs.
 393:../system/include/cmsis/cmsis_gcc.h ****  */
 394:../system/include/cmsis/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __WFE(void)
 395:../system/include/cmsis/cmsis_gcc.h **** {
 396:../system/include/cmsis/cmsis_gcc.h ****   __ASM volatile ("wfe");
 397:../system/include/cmsis/cmsis_gcc.h **** }
 398:../system/include/cmsis/cmsis_gcc.h **** 
 399:../system/include/cmsis/cmsis_gcc.h **** 
 400:../system/include/cmsis/cmsis_gcc.h **** /**
 401:../system/include/cmsis/cmsis_gcc.h ****   \brief   Send Event
 402:../system/include/cmsis/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 403:../system/include/cmsis/cmsis_gcc.h ****  */
 404:../system/include/cmsis/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __SEV(void)
 405:../system/include/cmsis/cmsis_gcc.h **** {
 406:../system/include/cmsis/cmsis_gcc.h ****   __ASM volatile ("sev");
 407:../system/include/cmsis/cmsis_gcc.h **** }
 408:../system/include/cmsis/cmsis_gcc.h **** 
 409:../system/include/cmsis/cmsis_gcc.h **** 
 410:../system/include/cmsis/cmsis_gcc.h **** /**
 411:../system/include/cmsis/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 412:../system/include/cmsis/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 413:../system/include/cmsis/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 414:../system/include/cmsis/cmsis_gcc.h ****            after the instruction has been completed.
 415:../system/include/cmsis/cmsis_gcc.h ****  */
 416:../system/include/cmsis/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __ISB(void)
 417:../system/include/cmsis/cmsis_gcc.h **** {
 418:../system/include/cmsis/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 419:../system/include/cmsis/cmsis_gcc.h **** }
 420:../system/include/cmsis/cmsis_gcc.h **** 
 421:../system/include/cmsis/cmsis_gcc.h **** 
 422:../system/include/cmsis/cmsis_gcc.h **** /**
 423:../system/include/cmsis/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 424:../system/include/cmsis/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 425:../system/include/cmsis/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 426:../system/include/cmsis/cmsis_gcc.h ****  */
 427:../system/include/cmsis/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __DSB(void)
 428:../system/include/cmsis/cmsis_gcc.h **** {
 429:../system/include/cmsis/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 1197              		.loc 3 429 0
 1198              		.syntax unified
 1199              	@ 429 "../system/include/cmsis/cmsis_gcc.h" 1
 1200 07ce BFF34F8F 		dsb 0xF
 1201              	@ 0 "" 2
 1202              		.thumb
 1203              		.syntax unified
 1204              	.LBE41:
 1205              	.LBE40:
1629:../system/include/cmsis/core_cm3.h ****                             SCB_AIRCR_SYSRESETREQ_Msk    );         /* Keep priority group unchange
 1206              		.loc 2 1629 0
 1207 07d2 3F49     		ldr	r1, .L119+152
 1208 07d4 CA68     		ldr	r2, [r1, #12]
 1209 07d6 02F4E062 		and	r2, r2, #1792
1628:../system/include/cmsis/core_cm3.h ****                            (SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) |
 1210              		.loc 2 1628 0
 1211 07da 3E4B     		ldr	r3, .L119+156
 1212 07dc 1343     		orrs	r3, r3, r2
 1213 07de CB60     		str	r3, [r1, #12]
 1214              	.LBB42:
 1215              	.LBB43:
 1216              		.loc 3 429 0
 1217              		.syntax unified
 1218              	@ 429 "../system/include/cmsis/cmsis_gcc.h" 1
 1219 07e0 BFF34F8F 		dsb 0xF
 1220              	@ 0 "" 2
 1221              		.thumb
 1222              		.syntax unified
 1223              	.L42:
 1224              	.LBE43:
 1225              	.LBE42:
 1226              	.LBB44:
 1227              	.LBB45:
 375:../system/include/cmsis/cmsis_gcc.h **** }
 1228              		.loc 3 375 0
 1229              		.syntax unified
 1230              	@ 375 "../system/include/cmsis/cmsis_gcc.h" 1
 1231 07e4 00BF     		nop
 1232              	@ 0 "" 2
 1233              		.thumb
 1234              		.syntax unified
 1235 07e6 FDE7     		b	.L42
 1236              	.L45:
 1237              	.LBE45:
 1238              	.LBE44:
 1239              	.LBE39:
 1240              	.LBE38:
 699:../src/main.c **** 
 700:../src/main.c **** #endif
 701:../src/main.c **** 
 702:../src/main.c ****   // Infinite loop
 703:../src/main.c ****   while (1)
 704:../src/main.c ****     {
 705:../src/main.c **** 	  // incrementing current cpu ticks
 706:../src/main.c **** 	  main_current_cpu_idle_ticks++;
 707:../src/main.c **** 
 708:../src/main.c **** 	    if (rte_main_reboot_req == 1) {
 709:../src/main.c **** 	    	NVIC_SystemReset();
 710:../src/main.c **** 	    }
 711:../src/main.c **** 	    else {
 712:../src/main.c **** 	    	;
 713:../src/main.c **** 	    }
 714:../src/main.c **** 
 715:../src/main.c **** 	    // read the state of a button input
 716:../src/main.c **** 	  	if (GPIO_ReadInputDataBit(GPIOA, GPIO_Pin_0)) {
 717:../src/main.c **** 
 718:../src/main.c **** 	  		// if modem is not busy on transmitting something and the button is not
 719:../src/main.c **** 	  		// inhibited
 720:../src/main.c **** 	  		if (main_afsk.sending == false && button_inhibit == 0) {
 721:../src/main.c **** 
 722:../src/main.c **** 	  			// wait for radio channel to be released
 723:../src/main.c **** 	  			while(main_ax25.dcd == true);
 724:../src/main.c **** 
 725:../src/main.c **** 	  			if ((main_config_data_mode->wx & WX_ENABLED) == 0) {
 726:../src/main.c **** 
 727:../src/main.c **** 	  				beacon_send_own();
 728:../src/main.c **** 	  			}
 729:../src/main.c **** 	  			else {
 730:../src/main.c **** 
 731:../src/main.c **** 					srl_wait_for_tx_completion(main_kiss_srl_ctx_ptr);
 1241              		.loc 1 731 0
 1242 07e8 144B     		ldr	r3, .L119+4
 1243 07ea 1868     		ldr	r0, [r3]
 1244 07ec FFF7FEFF 		bl	srl_wait_for_tx_completion
 1245              	.LVL104:
 732:../src/main.c **** 
 733:../src/main.c **** 					SendWXFrameToBuffer(rte_wx_average_windspeed, rte_wx_max_windspeed, rte_wx_average_winddirecti
 1246              		.loc 1 733 0
 1247 07f0 394B     		ldr	r3, .L119+160
 1248 07f2 1A88     		ldrh	r2, [r3]
 1249 07f4 394B     		ldr	r3, .L119+164
 1250 07f6 1988     		ldrh	r1, [r3]
 1251 07f8 394B     		ldr	r3, .L119+168
 1252 07fa 1888     		ldrh	r0, [r3]
 1253 07fc 07AB     		add	r3, sp, #28
 1254 07fe 0493     		str	r3, [sp, #16]
 1255 0800 4FF40073 		mov	r3, #512
 1256 0804 0393     		str	r3, [sp, #12]
 1257 0806 2B4B     		ldr	r3, .L119+124
 1258 0808 5B69     		ldr	r3, [r3, #20]
 1259 080a 0293     		str	r3, [sp, #8]
 1260 080c 354B     		ldr	r3, .L119+172
 1261 080e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1262 0810 0193     		str	r3, [sp, #4]
 1263 0812 354B     		ldr	r3, .L119+176
 1264 0814 1B68     		ldr	r3, [r3]	@ float
 1265 0816 0093     		str	r3, [sp]	@ float
 1266 0818 344B     		ldr	r3, .L119+180
 1267 081a 1B68     		ldr	r3, [r3]	@ float
 1268 081c FFF7FEFF 		bl	SendWXFrameToBuffer
 1269              	.LVL105:
 734:../src/main.c **** 
 735:../src/main.c **** 					if (main_kiss_enabled == 1) {
 1270              		.loc 1 735 0
 1271 0820 334B     		ldr	r3, .L119+184
 1272 0822 1C78     		ldrb	r4, [r3]	@ zero_extendqisi2
 1273              	.LVL106:
 1274 0824 012C     		cmp	r4, #1
 1275 0826 40F09680 		bne	.L78
 736:../src/main.c **** 						srl_start_tx(main_kiss_srl_ctx_ptr, ln);
 1276              		.loc 1 736 0
 1277 082a BDF91C10 		ldrsh	r1, [sp, #28]
 1278 082e 034B     		ldr	r3, .L119+4
 1279 0830 1868     		ldr	r0, [r3]
 1280 0832 FFF7FEFF 		bl	srl_start_tx
 1281              	.LVL107:
 1282 0836 5EE0     		b	.L43
 1283              	.L120:
 1284              		.align	2
 1285              	.L119:
 1286 0838 00000000 		.word	main_target_kiss_baudrate
 1287 083c 00000000 		.word	main_kiss_srl_ctx_ptr
 1288 0840 00000000 		.word	srl_usart1_tx_buffer
 1289 0844 00000000 		.word	srl_usart1_rx_buffer
 1290 0848 00380140 		.word	1073821696
 1291 084c 00000000 		.word	main_target_wx_baudrate
 1292 0850 00000000 		.word	srl_usart2_tx_buffer
 1293 0854 00000000 		.word	srl_usart2_rx_buffer
 1294 0858 00440040 		.word	1073759232
 1295 085c 00000000 		.word	main_wx_srl_ctx_ptr
 1296 0860 00000000 		.word	.LANCHOR8
 1297 0864 00000000 		.word	main_wx_srl_ctx
 1298 0868 00000000 		.word	rte_rtu_pool_queue
 1299 086c 00000000 		.word	.LANCHOR9
 1300 0870 00000000 		.word	rte_wx_dallas_average
 1301 0874 00100140 		.word	1073811456
 1302 0878 00000000 		.word	.LANCHOR11
 1303 087c 00000000 		.word	rte_wx_umb_context
 1304 0880 00000000 		.word	.LANCHOR5
 1305 0884 00000000 		.word	rte_wx_ms5611_qf
 1306 0888 00000000 		.word	SensorCalData
 1307 088c 00000000 		.word	rte_wx_bme280_qf
 1308 0890 00000000 		.word	bme280_calibration_data
 1309 0894 00000000 		.word	.LANCHOR1
 1310 0898 00000000 		.word	main_own_aprs_msg
 1311 089c 00000000 		.word	.LANCHOR3
 1312 08a0 00000000 		.word	main_string_longitude
 1313 08a4 00000000 		.word	.LANCHOR2
 1314 08a8 00000000 		.word	main_string_latitude
 1315 08ac 00000000 		.word	.LC0
 1316 08b0 00000000 		.word	main_own_aprs_msg_len
 1317 08b4 00000000 		.word	main_kiss_srl_ctx
 1318 08b8 00000000 		.word	main_own_path
 1319 08bc 00000000 		.word	.LANCHOR12
 1320 08c0 00000000 		.word	.LANCHOR13
 1321 08c4 00000000 		.word	rte_pv_average
 1322 08c8 00000000 		.word	rte_pv_struct
 1323 08cc 00000000 		.word	rte_wx_umb
 1324 08d0 00ED00E0 		.word	-536810240
 1325 08d4 0400FA05 		.word	100270084
 1326 08d8 00000000 		.word	rte_wx_average_winddirection
 1327 08dc 00000000 		.word	rte_wx_max_windspeed
 1328 08e0 00000000 		.word	rte_wx_average_windspeed
 1329 08e4 00000000 		.word	rte_wx_humidity
 1330 08e8 00000000 		.word	rte_wx_pressure_valid
 1331 08ec 00000000 		.word	rte_wx_temperature_average_external_valid
 1332 08f0 00000000 		.word	.LANCHOR6
 1333              	.LVL108:
 1334              	.L76:
 737:../src/main.c **** 					}
 738:../src/main.c **** 	  			}
 739:../src/main.c **** 	  		}
 740:../src/main.c **** 
 741:../src/main.c **** 	  		button_inhibit = 1;
 742:../src/main.c **** 	  	}
 743:../src/main.c **** 	  	else {
 744:../src/main.c **** 	  		button_inhibit = 0;
 1335              		.loc 1 744 0
 1336 08f4 0446     		mov	r4, r0
 1337              	.LVL109:
 1338              	.L43:
 745:../src/main.c **** 	  	}
 746:../src/main.c **** 
 747:../src/main.c **** 	  	// if new packet has been received from radio channel
 748:../src/main.c **** 		if(ax25_new_msg_rx_flag == 1) {
 1339              		.loc 1 748 0
 1340 08f6 A44B     		ldr	r3, .L121
 1341 08f8 93F90030 		ldrsb	r3, [r3]
 1342 08fc 012B     		cmp	r3, #1
 1343 08fe 2CD0     		beq	.L91
 1344              	.L46:
 749:../src/main.c **** 			memset(main_kiss_srl_ctx.srl_tx_buf_pointer, 0x00, main_kiss_srl_ctx.srl_tx_buf_ln);
 750:../src/main.c **** 
 751:../src/main.c **** 			if (main_kiss_enabled == 1) {
 752:../src/main.c **** 				// convert message to kiss format and send it to host
 753:../src/main.c **** 				srl_start_tx(main_kiss_srl_ctx_ptr, SendKISSToHost(ax25_rxed_frame.raw_data, (ax25_rxed_frame.r
 754:../src/main.c **** 			}
 755:../src/main.c **** 
 756:../src/main.c **** 			main_ax25.dcd = false;
 757:../src/main.c **** 
 758:../src/main.c **** #ifndef _MUTE_OWN
 759:../src/main.c **** 	#ifdef _DIGI
 760:../src/main.c **** 			//digi_check_with_viscous(&ax25_rxed_frame);
 761:../src/main.c **** 
 762:../src/main.c **** 			// check if this packet needs to be repeated (digipeated) and do it if it is necessary
 763:../src/main.c **** 			digi_process(&ax25_rxed_frame, main_config_data_basic, main_config_data_mode);
 764:../src/main.c **** 	#endif
 765:../src/main.c **** #endif
 766:../src/main.c **** 			ax25_new_msg_rx_flag = 0;
 767:../src/main.c **** 			rx10m++;
 768:../src/main.c **** 		}
 769:../src/main.c **** 
 770:../src/main.c **** 		// if Victron VE.direct client is enabled
 771:../src/main.c **** 		if (main_config_data_mode->victron == 1) {
 1345              		.loc 1 771 0
 1346 0900 A24B     		ldr	r3, .L121+4
 1347 0902 1B68     		ldr	r3, [r3]
 1348 0904 9A79     		ldrb	r2, [r3, #6]	@ zero_extendqisi2
 1349 0906 012A     		cmp	r2, #1
 1350 0908 55D0     		beq	.L92
 772:../src/main.c **** 
 773:../src/main.c **** 			// if new KISS message has been received from the host
 774:../src/main.c **** 			if (main_kiss_srl_ctx_ptr->srl_rx_state == SRL_RX_DONE || main_kiss_srl_ctx_ptr->srl_rx_state ==
 775:../src/main.c **** 
 776:../src/main.c **** 				// cutting received string to Checksum, everything after will be skipped
 777:../src/main.c **** 				ve_direct_cut_to_checksum(srl_get_rx_buffer(main_kiss_srl_ctx_ptr), TX_BUFFER_1_LN, &buffer_len
 778:../src/main.c **** 
 779:../src/main.c **** 				// checking if this frame is ok
 780:../src/main.c **** 				ve_direct_validate_checksum(srl_get_rx_buffer(main_kiss_srl_ctx_ptr), buffer_len, &retval);
 781:../src/main.c **** 
 782:../src/main.c **** 				if (retval == 1) {
 783:../src/main.c **** 					// parsing data from input serial buffer to
 784:../src/main.c **** 					retval = ve_direct_parse_to_raw_struct(srl_get_rx_buffer(main_kiss_srl_ctx_ptr), buffer_len, &
 785:../src/main.c **** 
 786:../src/main.c **** 					if (retval == 0) {
 787:../src/main.c **** 						ve_direct_add_to_average(&rte_pv_struct, &rte_pv_average);
 788:../src/main.c **** 
 789:../src/main.c **** 						ve_direct_get_averages(&rte_pv_average, &rte_pv_battery_current, &rte_pv_battery_voltage, &rt
 790:../src/main.c **** 
 791:../src/main.c **** 						ve_direct_set_sys_voltage(&rte_pv_struct, &rte_pv_sys_voltage);
 792:../src/main.c **** 
 793:../src/main.c **** 						ve_direct_store_errors(&rte_pv_struct, &rte_pv_last_error);
 794:../src/main.c **** 
 795:../src/main.c **** 						rte_pv_messages_count++;
 796:../src/main.c **** 					}
 797:../src/main.c **** 				}
 798:../src/main.c **** 				else {
 799:../src/main.c **** 					rte_pv_corrupted_messages_count++;
 800:../src/main.c **** 				}
 801:../src/main.c **** 
 802:../src/main.c **** 				//memset(srl_get_rx_buffer(main_kiss_srl_ctx_ptr), 0x00, TX_BUFFER_1_LN);
 803:../src/main.c **** 
 804:../src/main.c **** 				srl_receive_data(main_kiss_srl_ctx_ptr, VE_DIRECT_MAX_FRAME_LN, 0, 0, 0, 0, 0);
 805:../src/main.c **** 			}
 806:../src/main.c **** 		}
 807:../src/main.c **** 		else if (main_config_data_mode->wx_umb == 1) {
 1351              		.loc 1 807 0
 1352 090a 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 1353 090c 012B     		cmp	r3, #1
 1354 090e 00F08381 		beq	.L93
 808:../src/main.c **** 			// if some UMB data have been received
 809:../src/main.c **** 			if (main_wx_srl_ctx_ptr->srl_rx_state == SRL_RX_DONE) {
 810:../src/main.c **** 				umb_pooling_handler(&rte_wx_umb_context, REASON_RECEIVE_IDLE, master_time, main_config_data_umb
 811:../src/main.c **** 			}
 812:../src/main.c **** 
 813:../src/main.c **** 			// if there were an error during receiving frame from host, restart rxing once again
 814:../src/main.c **** 			if (main_wx_srl_ctx_ptr->srl_rx_state == SRL_RX_ERROR) {
 815:../src/main.c **** 				umb_pooling_handler(&rte_wx_umb_context, REASON_RECEIVE_ERROR, master_time, main_config_data_um
 816:../src/main.c **** 			}
 817:../src/main.c **** 
 818:../src/main.c **** 			if (main_wx_srl_ctx_ptr->srl_tx_state == SRL_TX_IDLE) {
 819:../src/main.c **** 				umb_pooling_handler(&rte_wx_umb_context, REASON_TRANSMIT_IDLE, master_time, main_config_data_um
 820:../src/main.c **** 			}
 821:../src/main.c **** 		}
 822:../src/main.c **** 		else {
 823:../src/main.c **** 			// if new KISS message has been received from the host
 824:../src/main.c **** 			if (main_kiss_srl_ctx_ptr->srl_rx_state == SRL_RX_DONE && main_kiss_enabled == 1) {
 1355              		.loc 1 824 0
 1356 0912 9F4B     		ldr	r3, .L121+8
 1357 0914 1868     		ldr	r0, [r3]
 1358 0916 90F84430 		ldrb	r3, [r0, #68]	@ zero_extendqisi2
 1359 091a 042B     		cmp	r3, #4
 1360 091c 04D1     		bne	.L55
 1361              		.loc 1 824 0 is_stmt 0 discriminator 1
 1362 091e 9D4B     		ldr	r3, .L121+12
 1363 0920 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1364 0922 012B     		cmp	r3, #1
 1365 0924 00F0A681 		beq	.L94
 1366              	.L55:
 825:../src/main.c **** 				// parse incoming data and then transmit on radio freq
 826:../src/main.c **** 				short res = ParseReceivedKISS(srl_get_rx_buffer(main_kiss_srl_ctx_ptr), srl_get_num_bytes_rxed(
 827:../src/main.c **** 				if (res == 0)
 828:../src/main.c **** 					kiss10m++;	// increase kiss messages counter
 829:../src/main.c **** 
 830:../src/main.c **** 				// restart KISS receiving to be ready for next frame
 831:../src/main.c **** 				srl_receive_data(main_kiss_srl_ctx_ptr, 120, FEND, FEND, 0, 0, 0);
 832:../src/main.c **** 			}
 833:../src/main.c **** 
 834:../src/main.c **** 			// if there were an error during receiving frame from host, restart rxing once again
 835:../src/main.c **** 			if (main_kiss_srl_ctx_ptr->srl_rx_state == SRL_RX_ERROR && main_kiss_enabled == 1) {
 1367              		.loc 1 835 0 is_stmt 1
 1368 0928 994B     		ldr	r3, .L121+8
 1369 092a 1868     		ldr	r0, [r3]
 1370 092c 90F84430 		ldrb	r3, [r0, #68]	@ zero_extendqisi2
 1371 0930 052B     		cmp	r3, #5
 1372 0932 49D1     		bne	.L49
 1373              		.loc 1 835 0 is_stmt 0 discriminator 1
 1374 0934 974B     		ldr	r3, .L121+12
 1375 0936 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1376 0938 012B     		cmp	r3, #1
 1377 093a 45D1     		bne	.L49
 836:../src/main.c **** 				srl_receive_data(main_kiss_srl_ctx_ptr, 120, FEND, FEND, 0, 0, 0);
 1378              		.loc 1 836 0 is_stmt 1
 1379 093c 0023     		movs	r3, #0
 1380 093e 0293     		str	r3, [sp, #8]
 1381 0940 0193     		str	r3, [sp, #4]
 1382 0942 0093     		str	r3, [sp]
 1383 0944 6FF03F03 		mvn	r3, #63
 1384 0948 1A46     		mov	r2, r3
 1385 094a 7821     		movs	r1, #120
 1386 094c FFF7FEFF 		bl	srl_receive_data
 1387              	.LVL110:
 1388 0950 3AE0     		b	.L49
 1389              	.L77:
 741:../src/main.c **** 	  	}
 1390              		.loc 1 741 0
 1391 0952 0124     		movs	r4, #1
 1392              	.LVL111:
 1393 0954 CFE7     		b	.L43
 1394              	.L78:
 1395 0956 0124     		movs	r4, #1
 1396 0958 CDE7     		b	.L43
 1397              	.LVL112:
 1398              	.L91:
 749:../src/main.c **** 
 1399              		.loc 1 749 0
 1400 095a 8F4B     		ldr	r3, .L121+16
 1401 095c DA8B     		ldrh	r2, [r3, #30]
 1402 095e 0021     		movs	r1, #0
 1403 0960 5869     		ldr	r0, [r3, #20]
 1404 0962 FFF7FEFF 		bl	memset
 1405              	.LVL113:
 751:../src/main.c **** 				// convert message to kiss format and send it to host
 1406              		.loc 1 751 0
 1407 0966 8B4B     		ldr	r3, .L121+12
 1408 0968 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1409 096a 012B     		cmp	r3, #1
 1410 096c 11D0     		beq	.L95
 1411              	.L47:
 756:../src/main.c **** 
 1412              		.loc 1 756 0
 1413 096e 0025     		movs	r5, #0
 1414 0970 8A4B     		ldr	r3, .L121+20
 1415 0972 83F81452 		strb	r5, [r3, #532]
 763:../src/main.c **** 	#endif
 1416              		.loc 1 763 0
 1417 0976 854B     		ldr	r3, .L121+4
 1418 0978 1A68     		ldr	r2, [r3]
 1419 097a 894B     		ldr	r3, .L121+24
 1420 097c 1968     		ldr	r1, [r3]
 1421 097e 8948     		ldr	r0, .L121+28
 1422 0980 FFF7FEFF 		bl	digi_process
 1423              	.LVL114:
 766:../src/main.c **** 			rx10m++;
 1424              		.loc 1 766 0
 1425 0984 804B     		ldr	r3, .L121
 1426 0986 1D70     		strb	r5, [r3]
 767:../src/main.c **** 		}
 1427              		.loc 1 767 0
 1428 0988 874A     		ldr	r2, .L121+32
 1429 098a 1388     		ldrh	r3, [r2]
 1430 098c 0133     		adds	r3, r3, #1
 1431 098e 1380     		strh	r3, [r2]	@ movhi
 1432 0990 B6E7     		b	.L46
 1433              	.L95:
 753:../src/main.c **** 			}
 1434              		.loc 1 753 0
 1435 0992 7F4B     		ldr	r3, .L121+8
 1436 0994 1D68     		ldr	r5, [r3]
 1437 0996 8348     		ldr	r0, .L121+28
 1438 0998 B0F85212 		ldrh	r1, [r0, #594]
 1439 099c 7E4A     		ldr	r2, .L121+16
 1440 099e 0239     		subs	r1, r1, #2
 1441 09a0 D38B     		ldrh	r3, [r2, #30]
 1442 09a2 5269     		ldr	r2, [r2, #20]
 1443 09a4 89B2     		uxth	r1, r1
 1444 09a6 5230     		adds	r0, r0, #82
 1445 09a8 FFF7FEFF 		bl	SendKISSToHost
 1446              	.LVL115:
 1447 09ac 01B2     		sxth	r1, r0
 1448 09ae 2846     		mov	r0, r5
 1449 09b0 FFF7FEFF 		bl	srl_start_tx
 1450              	.LVL116:
 1451 09b4 DBE7     		b	.L47
 1452              	.L92:
 774:../src/main.c **** 
 1453              		.loc 1 774 0
 1454 09b6 764B     		ldr	r3, .L121+8
 1455 09b8 1868     		ldr	r0, [r3]
 1456 09ba 90F84430 		ldrb	r3, [r0, #68]	@ zero_extendqisi2
 1457 09be 043B     		subs	r3, r3, #4
 1458 09c0 DBB2     		uxtb	r3, r3
 1459 09c2 012B     		cmp	r3, #1
 1460 09c4 40F29480 		bls	.L96
 1461              	.L49:
 837:../src/main.c **** 			}
 838:../src/main.c **** 		}
 839:../src/main.c **** 
 840:../src/main.c **** 		// if Davis wx station is enabled and it is alive
 841:../src/main.c **** 		if (main_davis_serial_enabled == 1) {
 1462              		.loc 1 841 0
 1463 09c8 784B     		ldr	r3, .L121+36
 1464 09ca 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1465 09cc 012B     		cmp	r3, #1
 1466 09ce 00F07081 		beq	.L97
 1467              	.L57:
 842:../src/main.c **** 
 843:../src/main.c **** 			// pool the Davis wx station driver for LOOP packet
 844:../src/main.c **** 			davis_loop_packet_pooler(&rte_wx_davis_loop_packet_avaliable);
 845:../src/main.c **** 
 846:../src/main.c **** 			davis_rxcheck_packet_pooler();
 847:../src/main.c **** 		}
 848:../src/main.c **** 
 849:../src/main.c **** 		// if modbus rtu master is enabled
 850:../src/main.c **** 		if (main_modbus_rtu_master_enabled == 1) {
 1468              		.loc 1 850 0
 1469 09d2 774B     		ldr	r3, .L121+40
 1470 09d4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1471 09d6 012B     		cmp	r3, #1
 1472 09d8 00F07181 		beq	.L98
 1473              	.L58:
 851:../src/main.c **** 			rtu_serial_pool();
 852:../src/main.c **** 		}
 853:../src/main.c **** 
 854:../src/main.c **** 		// get all meteo measuremenets each 65 seconds. some values may not be
 855:../src/main.c **** 		// downloaded from sensors if _METEO and/or _DALLAS_AS_TELEM aren't defined
 856:../src/main.c **** 		if (main_wx_sensors_pool_timer < 10) {
 1474              		.loc 1 856 0
 1475 09dc 754B     		ldr	r3, .L121+44
 1476 09de 1B68     		ldr	r3, [r3]
 1477 09e0 092B     		cmp	r3, #9
 1478 09e2 1FDC     		bgt	.L59
 857:../src/main.c **** 
 858:../src/main.c **** 			if (main_modbus_rtu_master_enabled == 1) {
 1479              		.loc 1 858 0
 1480 09e4 724B     		ldr	r3, .L121+40
 1481 09e6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1482 09e8 012B     		cmp	r3, #1
 1483 09ea 00F06B81 		beq	.L99
 1484              	.L60:
 859:../src/main.c **** 				rtu_serial_start();
 860:../src/main.c **** 			}
 861:../src/main.c **** 
 862:../src/main.c **** 			if ((main_config_data_mode->wx & WX_ENABLED) == 1) {
 1485              		.loc 1 862 0
 1486 09ee 674B     		ldr	r3, .L121+4
 1487 09f0 1968     		ldr	r1, [r3]
 1488 09f2 4B78     		ldrb	r3, [r1, #1]	@ zero_extendqisi2
 1489 09f4 13F0010F 		tst	r3, #1
 1490 09f8 40F06781 		bne	.L100
 1491              	.L61:
 863:../src/main.c **** 				wx_get_all_measurements(main_config_data_wx_sources, main_config_data_mode, main_config_data_um
 864:../src/main.c **** 			}
 865:../src/main.c **** 
 866:../src/main.c **** 
 867:../src/main.c **** 			if (main_config_data_mode->wx_umb == 1) {
 1492              		.loc 1 867 0
 1493 09fc 634B     		ldr	r3, .L121+4
 1494 09fe 1B68     		ldr	r3, [r3]
 1495 0a00 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 1496 0a02 012B     		cmp	r3, #1
 1497 0a04 00F06A81 		beq	.L101
 1498              	.L62:
 868:../src/main.c **** 				//
 869:../src/main.c **** 				umb_0x26_status_request(&rte_wx_umb, &rte_wx_umb_context, main_config_data_umb);
 870:../src/main.c **** 			}
 871:../src/main.c **** 
 872:../src/main.c **** 			if (main_davis_serial_enabled == 1) {
 1499              		.loc 1 872 0
 1500 0a08 684B     		ldr	r3, .L121+36
 1501 0a0a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1502 0a0c 012B     		cmp	r3, #1
 1503 0a0e 00F06C81 		beq	.L102
 1504              	.L63:
 873:../src/main.c **** 				davis_trigger_rxcheck_packet();
 874:../src/main.c **** 			}
 875:../src/main.c **** 
 876:../src/main.c **** 			if (rte_main_trigger_modbus_status == 1 && main_modbus_rtu_master_enabled == 1) {
 1505              		.loc 1 876 0
 1506 0a12 694B     		ldr	r3, .L121+48
 1507 0a14 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1508 0a16 012B     		cmp	r3, #1
 1509 0a18 00F06A81 		beq	.L103
 1510              	.L64:
 877:../src/main.c **** 				rtu_serial_get_status_string(&rte_rtu_pool_queue, main_wx_srl_ctx_ptr, main_own_aprs_msg, OWN_A
 878:../src/main.c **** 
 879:../src/main.c **** 			 	ax25_sendVia(&main_ax25, main_own_path, main_own_path_ln, main_own_aprs_msg, main_own_aprs_msg
 880:../src/main.c **** 
 881:../src/main.c **** 			 	afsk_txStart(&main_afsk);
 882:../src/main.c **** 
 883:../src/main.c **** 			 	rte_main_trigger_modbus_status = 0;
 884:../src/main.c **** 
 885:../src/main.c **** 
 886:../src/main.c **** 			}
 887:../src/main.c **** 
 888:../src/main.c **** 			main_wx_sensors_pool_timer = 65500;
 1511              		.loc 1 888 0
 1512 0a1c 654B     		ldr	r3, .L121+44
 1513 0a1e 4FF6DC72 		movw	r2, #65500
 1514 0a22 1A60     		str	r2, [r3]
 1515              	.L59:
 889:../src/main.c **** 		}
 890:../src/main.c **** 
 891:../src/main.c **** 		if (main_one_minute_pool_timer < 10) {
 1516              		.loc 1 891 0
 1517 0a24 654B     		ldr	r3, .L121+52
 1518 0a26 1B68     		ldr	r3, [r3]
 1519 0a28 092B     		cmp	r3, #9
 1520 0a2a 40F38081 		ble	.L104
 1521              	.L65:
 892:../src/main.c **** 
 893:../src/main.c **** 			#ifndef _MUTE_OWN
 894:../src/main.c **** 			packet_tx_handler(main_config_data_basic, main_config_data_mode);
 895:../src/main.c **** 			#endif
 896:../src/main.c **** 
 897:../src/main.c **** 			main_one_minute_pool_timer = 60000;
 898:../src/main.c **** 		}
 899:../src/main.c **** 
 900:../src/main.c **** 		if (main_one_second_pool_timer < 10) {
 1522              		.loc 1 900 0
 1523 0a2e 644B     		ldr	r3, .L121+56
 1524 0a30 1B68     		ldr	r3, [r3]
 1525 0a32 092B     		cmp	r3, #9
 1526 0a34 00F38981 		bgt	.L66
 901:../src/main.c **** 
 902:../src/main.c **** 			//digi_pool_viscous();
 903:../src/main.c **** 
 904:../src/main.c **** 			if ((main_config_data_mode->wx & WX_ENABLED) == 1) {
 1527              		.loc 1 904 0
 1528 0a38 544B     		ldr	r3, .L121+4
 1529 0a3a 1B68     		ldr	r3, [r3]
 1530 0a3c 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 1531 0a3e 13F0010F 		tst	r3, #1
 1532 0a42 40F07F81 		bne	.L105
 1533              	.L67:
 905:../src/main.c **** 				analog_anemometer_direction_handler();
 906:../src/main.c **** 			}
 907:../src/main.c **** 
 908:../src/main.c **** 			main_one_second_pool_timer = 1000;
 1534              		.loc 1 908 0
 1535 0a46 5E4B     		ldr	r3, .L121+56
 1536 0a48 4FF47A72 		mov	r2, #1000
 1537 0a4c 1A60     		str	r2, [r3]
 1538              	.L68:
 909:../src/main.c **** 		}
 910:../src/main.c **** 		else if (main_one_second_pool_timer < -10) {
 911:../src/main.c **** 
 912:../src/main.c **** 			if ((main_config_data_mode->wx & WX_ENABLED) == 1) {
 913:../src/main.c **** 				analog_anemometer_direction_reset();
 914:../src/main.c **** 			}
 915:../src/main.c **** 
 916:../src/main.c **** 			main_one_second_pool_timer = 1000;
 917:../src/main.c **** 		}
 918:../src/main.c **** 
 919:../src/main.c **** 		if (main_two_second_pool_timer < 10) {
 1539              		.loc 1 919 0
 1540 0a4e 5D4B     		ldr	r3, .L121+60
 1541 0a50 1B68     		ldr	r3, [r3]
 1542 0a52 092B     		cmp	r3, #9
 1543 0a54 40F38B81 		ble	.L106
 1544              	.L70:
 920:../src/main.c **** 
 921:../src/main.c **** 			wx_check_force_i2c_reset();
 922:../src/main.c **** 
 923:../src/main.c **** 			wx_pwr_periodic_handle();
 924:../src/main.c **** 
 925:../src/main.c **** 			#ifdef INTERNAL_WATCHDOG
 926:../src/main.c **** 			IWDG_ReloadCounter();
 927:../src/main.c **** 			#endif
 928:../src/main.c **** 
 929:../src/main.c **** 			main_two_second_pool_timer = 2000;
 930:../src/main.c **** 		}
 931:../src/main.c **** 
 932:../src/main.c **** 		if (main_ten_second_pool_timer < 10) {
 1545              		.loc 1 932 0
 1546 0a58 5B4B     		ldr	r3, .L121+64
 1547 0a5a 1B68     		ldr	r3, [r3]
 1548 0a5c 092B     		cmp	r3, #9
 1549 0a5e 1EDC     		bgt	.L40
 933:../src/main.c **** 
 934:../src/main.c **** 			if (main_config_data_mode->wx_umb == 1) {
 1550              		.loc 1 934 0
 1551 0a60 4A4B     		ldr	r3, .L121+4
 1552 0a62 1B68     		ldr	r3, [r3]
 1553 0a64 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 1554 0a66 012B     		cmp	r3, #1
 1555 0a68 00F08C81 		beq	.L107
 1556              	.L72:
 935:../src/main.c **** 				umb_channel_pool(&rte_wx_umb, &rte_wx_umb_context, main_config_data_umb);
 936:../src/main.c **** 			}
 937:../src/main.c **** 
 938:../src/main.c **** 			if (main_config_data_mode->wx_umb == 1) {
 1557              		.loc 1 938 0
 1558 0a6c 474B     		ldr	r3, .L121+4
 1559 0a6e 1B68     		ldr	r3, [r3]
 1560 0a70 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 1561 0a72 012B     		cmp	r3, #1
 1562 0a74 00F08D81 		beq	.L108
 1563              	.L73:
 939:../src/main.c **** 				rte_wx_umb_qf = umb_get_current_qf(&rte_wx_umb_context, master_time);
 940:../src/main.c **** 			}
 941:../src/main.c **** 
 942:../src/main.c **** 			wx_pool_anemometer(main_config_data_wx_sources, main_config_data_mode, main_config_data_umb, mai
 1564              		.loc 1 942 0
 1565 0a78 544B     		ldr	r3, .L121+68
 1566 0a7a 1B68     		ldr	r3, [r3]
 1567 0a7c 544A     		ldr	r2, .L121+72
 1568 0a7e 1268     		ldr	r2, [r2]
 1569 0a80 4249     		ldr	r1, .L121+4
 1570 0a82 0968     		ldr	r1, [r1]
 1571 0a84 5348     		ldr	r0, .L121+76
 1572 0a86 0068     		ldr	r0, [r0]
 1573 0a88 FFF7FEFF 		bl	wx_pool_anemometer
 1574              	.LVL117:
 943:../src/main.c **** 
 944:../src/main.c **** 			if (main_davis_serial_enabled == 1) {
 1575              		.loc 1 944 0
 1576 0a8c 474B     		ldr	r3, .L121+36
 1577 0a8e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1578 0a90 012B     		cmp	r3, #1
 1579 0a92 00F08681 		beq	.L109
 1580              	.L74:
 945:../src/main.c **** 
 946:../src/main.c **** 				// if previous LOOP packet is ready for processing
 947:../src/main.c **** 				if (rte_wx_davis_loop_packet_avaliable == 1) {
 948:../src/main.c **** 					davis_parsers_loop(main_kiss_srl_ctx_ptr->srl_rx_buf_pointer, main_kiss_srl_ctx_ptr->srl_rx_bu
 949:../src/main.c **** 				}
 950:../src/main.c **** 
 951:../src/main.c **** 				// trigger consecutive LOOP packet
 952:../src/main.c **** 				davis_trigger_loop_packet();
 953:../src/main.c **** 			}
 954:../src/main.c **** 
 955:../src/main.c **** 			main_ten_second_pool_timer = 10000;
 1581              		.loc 1 955 0
 1582 0a96 4C4B     		ldr	r3, .L121+64
 1583 0a98 42F21072 		movw	r2, #10000
 1584 0a9c 1A60     		str	r2, [r3]
 1585              	.LVL118:
 1586              	.L40:
 706:../src/main.c **** 
 1587              		.loc 1 706 0
 1588 0a9e 4E4A     		ldr	r2, .L121+80
 1589 0aa0 1368     		ldr	r3, [r2]
 1590 0aa2 0133     		adds	r3, r3, #1
 1591 0aa4 1360     		str	r3, [r2]
 708:../src/main.c **** 	    	NVIC_SystemReset();
 1592              		.loc 1 708 0
 1593 0aa6 4D4B     		ldr	r3, .L121+84
 1594 0aa8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1595 0aaa 012B     		cmp	r3, #1
 1596 0aac 3FF48FAE 		beq	.L110
 716:../src/main.c **** 
 1597              		.loc 1 716 0
 1598 0ab0 0121     		movs	r1, #1
 1599 0ab2 4B48     		ldr	r0, .L121+88
 1600 0ab4 FFF7FEFF 		bl	GPIO_ReadInputDataBit
 1601              	.LVL119:
 1602 0ab8 0028     		cmp	r0, #0
 1603 0aba 3FF41BAF 		beq	.L76
 720:../src/main.c **** 
 1604              		.loc 1 720 0
 1605 0abe 494B     		ldr	r3, .L121+92
 1606 0ac0 93F83034 		ldrb	r3, [r3, #1072]	@ zero_extendqisi2
 1607 0ac4 002B     		cmp	r3, #0
 1608 0ac6 7FF444AF 		bne	.L77
 720:../src/main.c **** 
 1609              		.loc 1 720 0 is_stmt 0 discriminator 1
 1610 0aca 002C     		cmp	r4, #0
 1611 0acc 7FF413AF 		bne	.L43
 1612              	.L44:
 723:../src/main.c **** 
 1613              		.loc 1 723 0 is_stmt 1 discriminator 1
 1614 0ad0 324B     		ldr	r3, .L121+20
 1615 0ad2 93F81432 		ldrb	r3, [r3, #532]	@ zero_extendqisi2
 1616 0ad6 002B     		cmp	r3, #0
 1617 0ad8 FAD1     		bne	.L44
 725:../src/main.c **** 
 1618              		.loc 1 725 0
 1619 0ada 2C4B     		ldr	r3, .L121+4
 1620 0adc 1B68     		ldr	r3, [r3]
 1621 0ade 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 1622 0ae0 13F0010F 		tst	r3, #1
 1623 0ae4 7FF480AE 		bne	.L45
 727:../src/main.c **** 	  			}
 1624              		.loc 1 727 0
 1625 0ae8 FFF7FEFF 		bl	beacon_send_own
 1626              	.LVL120:
 741:../src/main.c **** 	  	}
 1627              		.loc 1 741 0
 1628 0aec 0124     		movs	r4, #1
 1629              	.LVL121:
 1630 0aee 02E7     		b	.L43
 1631              	.LVL122:
 1632              	.L96:
 777:../src/main.c **** 
 1633              		.loc 1 777 0
 1634 0af0 FFF7FEFF 		bl	srl_get_rx_buffer
 1635              	.LVL123:
 1636 0af4 3C4E     		ldr	r6, .L121+96
 1637 0af6 3246     		mov	r2, r6
 1638 0af8 4FF40071 		mov	r1, #512
 1639 0afc FFF7FEFF 		bl	ve_direct_cut_to_checksum
 1640              	.LVL124:
 780:../src/main.c **** 
 1641              		.loc 1 780 0
 1642 0b00 234B     		ldr	r3, .L121+8
 1643 0b02 1868     		ldr	r0, [r3]
 1644 0b04 FFF7FEFF 		bl	srl_get_rx_buffer
 1645              	.LVL125:
 1646 0b08 384D     		ldr	r5, .L121+100
 1647 0b0a 2A46     		mov	r2, r5
 1648 0b0c 3188     		ldrh	r1, [r6]
 1649 0b0e FFF7FEFF 		bl	ve_direct_validate_checksum
 1650              	.LVL126:
 782:../src/main.c **** 					// parsing data from input serial buffer to
 1651              		.loc 1 782 0
 1652 0b12 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 1653 0b14 DBB2     		uxtb	r3, r3
 1654 0b16 012B     		cmp	r3, #1
 1655 0b18 30D1     		bne	.L50
 784:../src/main.c **** 
 1656              		.loc 1 784 0
 1657 0b1a 1D4B     		ldr	r3, .L121+8
 1658 0b1c 1868     		ldr	r0, [r3]
 1659 0b1e FFF7FEFF 		bl	srl_get_rx_buffer
 1660              	.LVL127:
 1661 0b22 334A     		ldr	r2, .L121+104
 1662 0b24 3188     		ldrh	r1, [r6]
 1663 0b26 FFF7FEFF 		bl	ve_direct_parse_to_raw_struct
 1664              	.LVL128:
 1665 0b2a C0B2     		uxtb	r0, r0
 1666 0b2c 2870     		strb	r0, [r5]
 786:../src/main.c **** 						ve_direct_add_to_average(&rte_pv_struct, &rte_pv_average);
 1667              		.loc 1 786 0
 1668 0b2e 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 1669 0b30 CBB9     		cbnz	r3, .L51
 787:../src/main.c **** 
 1670              		.loc 1 787 0
 1671 0b32 304E     		ldr	r6, .L121+108
 1672 0b34 2E4D     		ldr	r5, .L121+104
 1673 0b36 3146     		mov	r1, r6
 1674 0b38 2846     		mov	r0, r5
 1675 0b3a FFF7FEFF 		bl	ve_direct_add_to_average
 1676              	.LVL129:
 789:../src/main.c **** 
 1677              		.loc 1 789 0
 1678 0b3e 2E4B     		ldr	r3, .L121+112
 1679 0b40 0093     		str	r3, [sp]
 1680 0b42 2E4B     		ldr	r3, .L121+116
 1681 0b44 2E4A     		ldr	r2, .L121+120
 1682 0b46 2F49     		ldr	r1, .L121+124
 1683 0b48 3046     		mov	r0, r6
 1684 0b4a FFF7FEFF 		bl	ve_direct_get_averages
 1685              	.LVL130:
 791:../src/main.c **** 
 1686              		.loc 1 791 0
 1687 0b4e 2E49     		ldr	r1, .L121+128
 1688 0b50 2846     		mov	r0, r5
 1689 0b52 FFF7FEFF 		bl	ve_direct_set_sys_voltage
 1690              	.LVL131:
 793:../src/main.c **** 
 1691              		.loc 1 793 0
 1692 0b56 2D49     		ldr	r1, .L121+132
 1693 0b58 2846     		mov	r0, r5
 1694 0b5a FFF7FEFF 		bl	ve_direct_store_errors
 1695              	.LVL132:
 795:../src/main.c **** 					}
 1696              		.loc 1 795 0
 1697 0b5e 2C4A     		ldr	r2, .L121+136
 1698 0b60 1388     		ldrh	r3, [r2]
 1699 0b62 0133     		adds	r3, r3, #1
 1700 0b64 1380     		strh	r3, [r2]	@ movhi
 1701              	.L51:
 804:../src/main.c **** 			}
 1702              		.loc 1 804 0
 1703 0b66 0022     		movs	r2, #0
 1704 0b68 0292     		str	r2, [sp, #8]
 1705 0b6a 0192     		str	r2, [sp, #4]
 1706 0b6c 0092     		str	r2, [sp]
 1707 0b6e 1346     		mov	r3, r2
 1708 0b70 BA21     		movs	r1, #186
 1709 0b72 0748     		ldr	r0, .L121+8
 1710 0b74 0068     		ldr	r0, [r0]
 1711 0b76 FFF7FEFF 		bl	srl_receive_data
 1712              	.LVL133:
 1713 0b7a 25E7     		b	.L49
 1714              	.L50:
 799:../src/main.c **** 				}
 1715              		.loc 1 799 0
 1716 0b7c 254A     		ldr	r2, .L121+140
 1717 0b7e 1388     		ldrh	r3, [r2]
 1718 0b80 0133     		adds	r3, r3, #1
 1719 0b82 1380     		strh	r3, [r2]	@ movhi
 1720 0b84 EFE7     		b	.L51
 1721              	.L122:
 1722 0b86 00BF     		.align	2
 1723              	.L121:
 1724 0b88 00000000 		.word	ax25_new_msg_rx_flag
 1725 0b8c 00000000 		.word	.LANCHOR5
 1726 0b90 00000000 		.word	main_kiss_srl_ctx_ptr
 1727 0b94 00000000 		.word	.LANCHOR6
 1728 0b98 00000000 		.word	main_kiss_srl_ctx
 1729 0b9c 00000000 		.word	main_ax25
 1730 0ba0 00000000 		.word	.LANCHOR1
 1731 0ba4 00000000 		.word	ax25_rxed_frame
 1732 0ba8 00000000 		.word	.LANCHOR15
 1733 0bac 00000000 		.word	.LANCHOR7
 1734 0bb0 00000000 		.word	.LANCHOR9
 1735 0bb4 00000000 		.word	.LANCHOR19
 1736 0bb8 00000000 		.word	rte_main_trigger_modbus_status
 1737 0bbc 00000000 		.word	.LANCHOR20
 1738 0bc0 00000000 		.word	.LANCHOR21
 1739 0bc4 00000000 		.word	.LANCHOR22
 1740 0bc8 00000000 		.word	.LANCHOR23
 1741 0bcc 00000000 		.word	.LANCHOR8
 1742 0bd0 00000000 		.word	.LANCHOR11
 1743 0bd4 00000000 		.word	.LANCHOR13
 1744 0bd8 00000000 		.word	.LANCHOR14
 1745 0bdc 00000000 		.word	rte_main_reboot_req
 1746 0be0 00080140 		.word	1073809408
 1747 0be4 00000000 		.word	main_afsk
 1748 0be8 00000000 		.word	.LANCHOR16
 1749 0bec 00000000 		.word	.LANCHOR12
 1750 0bf0 00000000 		.word	rte_pv_struct
 1751 0bf4 00000000 		.word	rte_pv_average
 1752 0bf8 00000000 		.word	rte_pv_load_current
 1753 0bfc 00000000 		.word	rte_pv_cell_voltage
 1754 0c00 00000000 		.word	rte_pv_battery_voltage
 1755 0c04 00000000 		.word	rte_pv_battery_current
 1756 0c08 00000000 		.word	rte_pv_sys_voltage
 1757 0c0c 00000000 		.word	rte_pv_last_error
 1758 0c10 00000000 		.word	rte_pv_messages_count
 1759 0c14 00000000 		.word	rte_pv_corrupted_messages_count
 1760              	.L93:
 809:../src/main.c **** 				umb_pooling_handler(&rte_wx_umb_context, REASON_RECEIVE_IDLE, master_time, main_config_data_umb
 1761              		.loc 1 809 0
 1762 0c18 694B     		ldr	r3, .L123
 1763 0c1a 1B68     		ldr	r3, [r3]
 1764 0c1c 93F84430 		ldrb	r3, [r3, #68]	@ zero_extendqisi2
 1765 0c20 042B     		cmp	r3, #4
 1766 0c22 15D0     		beq	.L111
 1767              	.L53:
 814:../src/main.c **** 				umb_pooling_handler(&rte_wx_umb_context, REASON_RECEIVE_ERROR, master_time, main_config_data_um
 1768              		.loc 1 814 0
 1769 0c24 664B     		ldr	r3, .L123
 1770 0c26 1B68     		ldr	r3, [r3]
 1771 0c28 93F84430 		ldrb	r3, [r3, #68]	@ zero_extendqisi2
 1772 0c2c 052B     		cmp	r3, #5
 1773 0c2e 18D0     		beq	.L112
 1774              	.L54:
 818:../src/main.c **** 				umb_pooling_handler(&rte_wx_umb_context, REASON_TRANSMIT_IDLE, master_time, main_config_data_um
 1775              		.loc 1 818 0
 1776 0c30 634B     		ldr	r3, .L123
 1777 0c32 1B68     		ldr	r3, [r3]
 1778 0c34 93F84530 		ldrb	r3, [r3, #69]	@ zero_extendqisi2
 1779 0c38 012B     		cmp	r3, #1
 1780 0c3a 7FF4C5AE 		bne	.L49
 819:../src/main.c **** 			}
 1781              		.loc 1 819 0
 1782 0c3e 614B     		ldr	r3, .L123+4
 1783 0c40 1B68     		ldr	r3, [r3]
 1784 0c42 614A     		ldr	r2, .L123+8
 1785 0c44 1268     		ldr	r2, [r2]
 1786 0c46 0021     		movs	r1, #0
 1787 0c48 6048     		ldr	r0, .L123+12
 1788 0c4a FFF7FEFF 		bl	umb_pooling_handler
 1789              	.LVL134:
 1790 0c4e BBE6     		b	.L49
 1791              	.L111:
 810:../src/main.c **** 			}
 1792              		.loc 1 810 0
 1793 0c50 5C4B     		ldr	r3, .L123+4
 1794 0c52 1B68     		ldr	r3, [r3]
 1795 0c54 5C4A     		ldr	r2, .L123+8
 1796 0c56 1268     		ldr	r2, [r2]
 1797 0c58 0121     		movs	r1, #1
 1798 0c5a 5C48     		ldr	r0, .L123+12
 1799 0c5c FFF7FEFF 		bl	umb_pooling_handler
 1800              	.LVL135:
 1801 0c60 E0E7     		b	.L53
 1802              	.L112:
 815:../src/main.c **** 			}
 1803              		.loc 1 815 0
 1804 0c62 584B     		ldr	r3, .L123+4
 1805 0c64 1B68     		ldr	r3, [r3]
 1806 0c66 584A     		ldr	r2, .L123+8
 1807 0c68 1268     		ldr	r2, [r2]
 1808 0c6a 0221     		movs	r1, #2
 1809 0c6c 5748     		ldr	r0, .L123+12
 1810 0c6e FFF7FEFF 		bl	umb_pooling_handler
 1811              	.LVL136:
 1812 0c72 DDE7     		b	.L54
 1813              	.L94:
 1814              	.LBB46:
 826:../src/main.c **** 				if (res == 0)
 1815              		.loc 1 826 0
 1816 0c74 FFF7FEFF 		bl	srl_get_rx_buffer
 1817              	.LVL137:
 1818 0c78 0546     		mov	r5, r0
 1819 0c7a 554B     		ldr	r3, .L123+16
 1820 0c7c 1868     		ldr	r0, [r3]
 1821 0c7e FFF7FEFF 		bl	srl_get_num_bytes_rxed
 1822              	.LVL138:
 1823 0c82 544B     		ldr	r3, .L123+20
 1824 0c84 544A     		ldr	r2, .L123+24
 1825 0c86 0146     		mov	r1, r0
 1826 0c88 2846     		mov	r0, r5
 1827 0c8a FFF7FEFF 		bl	ParseReceivedKISS
 1828              	.LVL139:
 827:../src/main.c **** 					kiss10m++;	// increase kiss messages counter
 1829              		.loc 1 827 0
 1830 0c8e 18B9     		cbnz	r0, .L56
 828:../src/main.c **** 
 1831              		.loc 1 828 0
 1832 0c90 524A     		ldr	r2, .L123+28
 1833 0c92 1388     		ldrh	r3, [r2]
 1834 0c94 0133     		adds	r3, r3, #1
 1835 0c96 1380     		strh	r3, [r2]	@ movhi
 1836              	.L56:
 831:../src/main.c **** 			}
 1837              		.loc 1 831 0
 1838 0c98 0023     		movs	r3, #0
 1839 0c9a 0293     		str	r3, [sp, #8]
 1840 0c9c 0193     		str	r3, [sp, #4]
 1841 0c9e 0093     		str	r3, [sp]
 1842 0ca0 6FF03F03 		mvn	r3, #63
 1843 0ca4 1A46     		mov	r2, r3
 1844 0ca6 7821     		movs	r1, #120
 1845 0ca8 4948     		ldr	r0, .L123+16
 1846              	.LVL140:
 1847 0caa 0068     		ldr	r0, [r0]
 1848 0cac FFF7FEFF 		bl	srl_receive_data
 1849              	.LVL141:
 1850 0cb0 3AE6     		b	.L55
 1851              	.L97:
 1852              	.LBE46:
 844:../src/main.c **** 
 1853              		.loc 1 844 0
 1854 0cb2 4B48     		ldr	r0, .L123+32
 1855 0cb4 FFF7FEFF 		bl	davis_loop_packet_pooler
 1856              	.LVL142:
 846:../src/main.c **** 		}
 1857              		.loc 1 846 0
 1858 0cb8 FFF7FEFF 		bl	davis_rxcheck_packet_pooler
 1859              	.LVL143:
 1860 0cbc 89E6     		b	.L57
 1861              	.L98:
 851:../src/main.c **** 		}
 1862              		.loc 1 851 0
 1863 0cbe FFF7FEFF 		bl	rtu_serial_pool
 1864              	.LVL144:
 1865 0cc2 8BE6     		b	.L58
 1866              	.L99:
 859:../src/main.c **** 			}
 1867              		.loc 1 859 0
 1868 0cc4 FFF7FEFF 		bl	rtu_serial_start
 1869              	.LVL145:
 1870 0cc8 91E6     		b	.L60
 1871              	.L100:
 863:../src/main.c **** 			}
 1872              		.loc 1 863 0
 1873 0cca 464B     		ldr	r3, .L123+36
 1874 0ccc 1B68     		ldr	r3, [r3]
 1875 0cce 3D4A     		ldr	r2, .L123+4
 1876 0cd0 1268     		ldr	r2, [r2]
 1877 0cd2 4548     		ldr	r0, .L123+40
 1878 0cd4 0068     		ldr	r0, [r0]
 1879 0cd6 FFF7FEFF 		bl	wx_get_all_measurements
 1880              	.LVL146:
 1881 0cda 8FE6     		b	.L61
 1882              	.L101:
 869:../src/main.c **** 			}
 1883              		.loc 1 869 0
 1884 0cdc 394B     		ldr	r3, .L123+4
 1885 0cde 1A68     		ldr	r2, [r3]
 1886 0ce0 3A49     		ldr	r1, .L123+12
 1887 0ce2 4248     		ldr	r0, .L123+44
 1888 0ce4 FFF7FEFF 		bl	umb_0x26_status_request
 1889              	.LVL147:
 1890 0ce8 8EE6     		b	.L62
 1891              	.L102:
 873:../src/main.c **** 			}
 1892              		.loc 1 873 0
 1893 0cea FFF7FEFF 		bl	davis_trigger_rxcheck_packet
 1894              	.LVL148:
 1895 0cee 90E6     		b	.L63
 1896              	.L103:
 876:../src/main.c **** 				rtu_serial_get_status_string(&rte_rtu_pool_queue, main_wx_srl_ctx_ptr, main_own_aprs_msg, OWN_A
 1897              		.loc 1 876 0 discriminator 1
 1898 0cf0 3F4B     		ldr	r3, .L123+48
 1899 0cf2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1900 0cf4 012B     		cmp	r3, #1
 1901 0cf6 7FF491AE 		bne	.L64
 877:../src/main.c **** 
 1902              		.loc 1 877 0
 1903 0cfa 3E4D     		ldr	r5, .L123+52
 1904 0cfc 3E4E     		ldr	r6, .L123+56
 1905 0cfe 0096     		str	r6, [sp]
 1906 0d00 A023     		movs	r3, #160
 1907 0d02 2A46     		mov	r2, r5
 1908 0d04 2E49     		ldr	r1, .L123
 1909 0d06 0968     		ldr	r1, [r1]
 1910 0d08 3C48     		ldr	r0, .L123+60
 1911 0d0a FFF7FEFF 		bl	rtu_serial_get_status_string
 1912              	.LVL149:
 879:../src/main.c **** 
 1913              		.loc 1 879 0
 1914 0d0e 3C4B     		ldr	r3, .L123+64
 1915 0d10 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1916 0d12 3378     		ldrb	r3, [r6]	@ zero_extendqisi2
 1917 0d14 0093     		str	r3, [sp]
 1918 0d16 2B46     		mov	r3, r5
 1919 0d18 3A49     		ldr	r1, .L123+68
 1920 0d1a 2F48     		ldr	r0, .L123+24
 1921 0d1c FFF7FEFF 		bl	ax25_sendVia
 1922              	.LVL150:
 881:../src/main.c **** 
 1923              		.loc 1 881 0
 1924 0d20 2C48     		ldr	r0, .L123+20
 1925 0d22 FFF7FEFF 		bl	afsk_txStart
 1926              	.LVL151:
 883:../src/main.c **** 
 1927              		.loc 1 883 0
 1928 0d26 384B     		ldr	r3, .L123+72
 1929 0d28 0022     		movs	r2, #0
 1930 0d2a 1A70     		strb	r2, [r3]
 1931 0d2c 76E6     		b	.L64
 1932              	.L104:
 894:../src/main.c **** 			#endif
 1933              		.loc 1 894 0
 1934 0d2e 374B     		ldr	r3, .L123+76
 1935 0d30 1968     		ldr	r1, [r3]
 1936 0d32 374B     		ldr	r3, .L123+80
 1937 0d34 1868     		ldr	r0, [r3]
 1938 0d36 FFF7FEFF 		bl	packet_tx_handler
 1939              	.LVL152:
 897:../src/main.c **** 		}
 1940              		.loc 1 897 0
 1941 0d3a 364B     		ldr	r3, .L123+84
 1942 0d3c 4EF66022 		movw	r2, #60000
 1943 0d40 1A60     		str	r2, [r3]
 1944 0d42 74E6     		b	.L65
 1945              	.L105:
 905:../src/main.c **** 			}
 1946              		.loc 1 905 0
 1947 0d44 FFF7FEFF 		bl	analog_anemometer_direction_handler
 1948              	.LVL153:
 1949 0d48 7DE6     		b	.L67
 1950              	.L66:
 910:../src/main.c **** 
 1951              		.loc 1 910 0
 1952 0d4a 13F10A0F 		cmn	r3, #10
 1953 0d4e BFF67EAE 		bge	.L68
 912:../src/main.c **** 				analog_anemometer_direction_reset();
 1954              		.loc 1 912 0
 1955 0d52 2E4B     		ldr	r3, .L123+76
 1956 0d54 1B68     		ldr	r3, [r3]
 1957 0d56 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 1958 0d58 13F0010F 		tst	r3, #1
 1959 0d5c 04D1     		bne	.L113
 1960              	.L69:
 916:../src/main.c **** 		}
 1961              		.loc 1 916 0
 1962 0d5e 2E4B     		ldr	r3, .L123+88
 1963 0d60 4FF47A72 		mov	r2, #1000
 1964 0d64 1A60     		str	r2, [r3]
 1965 0d66 72E6     		b	.L68
 1966              	.L113:
 913:../src/main.c **** 			}
 1967              		.loc 1 913 0
 1968 0d68 FFF7FEFF 		bl	analog_anemometer_direction_reset
 1969              	.LVL154:
 1970 0d6c F7E7     		b	.L69
 1971              	.L106:
 921:../src/main.c **** 
 1972              		.loc 1 921 0
 1973 0d6e FFF7FEFF 		bl	wx_check_force_i2c_reset
 1974              	.LVL155:
 923:../src/main.c **** 
 1975              		.loc 1 923 0
 1976 0d72 FFF7FEFF 		bl	wx_pwr_periodic_handle
 1977              	.LVL156:
 926:../src/main.c **** 			#endif
 1978              		.loc 1 926 0
 1979 0d76 FFF7FEFF 		bl	IWDG_ReloadCounter
 1980              	.LVL157:
 929:../src/main.c **** 		}
 1981              		.loc 1 929 0
 1982 0d7a 284B     		ldr	r3, .L123+92
 1983 0d7c 4FF4FA62 		mov	r2, #2000
 1984 0d80 1A60     		str	r2, [r3]
 1985 0d82 69E6     		b	.L70
 1986              	.L107:
 935:../src/main.c **** 			}
 1987              		.loc 1 935 0
 1988 0d84 0F4B     		ldr	r3, .L123+4
 1989 0d86 1A68     		ldr	r2, [r3]
 1990 0d88 1049     		ldr	r1, .L123+12
 1991 0d8a 1848     		ldr	r0, .L123+44
 1992 0d8c FFF7FEFF 		bl	umb_channel_pool
 1993              	.LVL158:
 1994 0d90 6CE6     		b	.L72
 1995              	.L108:
 939:../src/main.c **** 			}
 1996              		.loc 1 939 0
 1997 0d92 0D4B     		ldr	r3, .L123+8
 1998 0d94 1968     		ldr	r1, [r3]
 1999 0d96 0D48     		ldr	r0, .L123+12
 2000 0d98 FFF7FEFF 		bl	umb_get_current_qf
 2001              	.LVL159:
 2002 0d9c 204B     		ldr	r3, .L123+96
 2003 0d9e 1870     		strb	r0, [r3]
 2004 0da0 6AE6     		b	.L73
 2005              	.L109:
 947:../src/main.c **** 					davis_parsers_loop(main_kiss_srl_ctx_ptr->srl_rx_buf_pointer, main_kiss_srl_ctx_ptr->srl_rx_bu
 2006              		.loc 1 947 0
 2007 0da2 0F4B     		ldr	r3, .L123+32
 2008 0da4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2009 0da6 012B     		cmp	r3, #1
 2010 0da8 02D0     		beq	.L114
 2011              	.L75:
 952:../src/main.c **** 			}
 2012              		.loc 1 952 0
 2013 0daa FFF7FEFF 		bl	davis_trigger_loop_packet
 2014              	.LVL160:
 2015 0dae 72E6     		b	.L74
 2016              	.L114:
 948:../src/main.c **** 				}
 2017              		.loc 1 948 0
 2018 0db0 074B     		ldr	r3, .L123+16
 2019 0db2 1B68     		ldr	r3, [r3]
 2020 0db4 1B4A     		ldr	r2, .L123+100
 2021 0db6 998B     		ldrh	r1, [r3, #28]
 2022 0db8 9869     		ldr	r0, [r3, #24]
 2023 0dba FFF7FEFF 		bl	davis_parsers_loop
 2024              	.LVL161:
 2025 0dbe F4E7     		b	.L75
 2026              	.L124:
 2027              		.align	2
 2028              	.L123:
 2029 0dc0 00000000 		.word	main_wx_srl_ctx_ptr
 2030 0dc4 00000000 		.word	.LANCHOR11
 2031 0dc8 00000000 		.word	.LANCHOR17
 2032 0dcc 00000000 		.word	rte_wx_umb_context
 2033 0dd0 00000000 		.word	main_kiss_srl_ctx_ptr
 2034 0dd4 00000000 		.word	main_afsk
 2035 0dd8 00000000 		.word	main_ax25
 2036 0ddc 00000000 		.word	.LANCHOR18
 2037 0de0 00000000 		.word	rte_wx_davis_loop_packet_avaliable
 2038 0de4 00000000 		.word	.LANCHOR8
 2039 0de8 00000000 		.word	.LANCHOR13
 2040 0dec 00000000 		.word	rte_wx_umb
 2041 0df0 00000000 		.word	.LANCHOR9
 2042 0df4 00000000 		.word	main_own_aprs_msg
 2043 0df8 00000000 		.word	main_own_aprs_msg_len
 2044 0dfc 00000000 		.word	rte_rtu_pool_queue
 2045 0e00 00000000 		.word	.LANCHOR10
 2046 0e04 00000000 		.word	main_own_path
 2047 0e08 00000000 		.word	rte_main_trigger_modbus_status
 2048 0e0c 00000000 		.word	.LANCHOR5
 2049 0e10 00000000 		.word	.LANCHOR1
 2050 0e14 00000000 		.word	.LANCHOR20
 2051 0e18 00000000 		.word	.LANCHOR21
 2052 0e1c 00000000 		.word	.LANCHOR22
 2053 0e20 00000000 		.word	rte_wx_umb_qf
 2054 0e24 00000000 		.word	rte_wx_davis_loop_content
 2055              		.cfi_endproc
 2056              	.LFE105:
 2058              		.section	.text.main_get_adc_sample,"ax",%progbits
 2059              		.align	1
 2060              		.global	main_get_adc_sample
 2061              		.syntax unified
 2062              		.thumb
 2063              		.thumb_func
 2064              		.fpu softvfp
 2066              	main_get_adc_sample:
 2067              	.LFB106:
 956:../src/main.c **** 		}
 957:../src/main.c **** 
 958:../src/main.c **** 
 959:../src/main.c ****     }
 960:../src/main.c ****   // Infinite loop, never return.
 961:../src/main.c **** }
 962:../src/main.c **** 
 963:../src/main.c **** uint16_t main_get_adc_sample(void) {
 2068              		.loc 1 963 0
 2069              		.cfi_startproc
 2070              		@ args = 0, pretend = 0, frame = 0
 2071              		@ frame_needed = 0, uses_anonymous_args = 0
 2072              		@ link register save eliminated.
 964:../src/main.c **** 	return (uint16_t) ADC1->DR;
 2073              		.loc 1 964 0
 2074 0000 014B     		ldr	r3, .L126
 2075 0002 D86C     		ldr	r0, [r3, #76]
 965:../src/main.c **** }
 2076              		.loc 1 965 0
 2077 0004 80B2     		uxth	r0, r0
 2078 0006 7047     		bx	lr
 2079              	.L127:
 2080              		.align	2
 2081              	.L126:
 2082 0008 00240140 		.word	1073816576
 2083              		.cfi_endproc
 2084              	.LFE106:
 2086              		.section	.text.main_service_cpu_load_ticks,"ax",%progbits
 2087              		.align	1
 2088              		.global	main_service_cpu_load_ticks
 2089              		.syntax unified
 2090              		.thumb
 2091              		.thumb_func
 2092              		.fpu softvfp
 2094              	main_service_cpu_load_ticks:
 2095              	.LFB107:
 966:../src/main.c **** 
 967:../src/main.c **** void main_service_cpu_load_ticks(void) {
 2096              		.loc 1 967 0
 2097              		.cfi_startproc
 2098              		@ args = 0, pretend = 0, frame = 0
 2099              		@ frame_needed = 0, uses_anonymous_args = 0
 2100              		@ link register save eliminated.
 2101              	.LVL162:
 968:../src/main.c **** 
 969:../src/main.c **** 	uint32_t cpu_ticks_load = 0;
 970:../src/main.c **** 
 971:../src/main.c **** 	// the biggest this result will be the biggest load the CPU is handling
 972:../src/main.c **** 	cpu_ticks_load = main_idle_cpu_ticks - main_current_cpu_idle_ticks;
 2102              		.loc 1 972 0
 2103 0000 074B     		ldr	r3, .L129
 2104 0002 1868     		ldr	r0, [r3]
 2105 0004 0749     		ldr	r1, .L129+4
 2106 0006 0B68     		ldr	r3, [r1]
 2107 0008 C21A     		subs	r2, r0, r3
 2108              	.LVL163:
 973:../src/main.c **** 
 974:../src/main.c **** 	// calculate the cpu load
 975:../src/main.c **** 	main_cpu_load = (int8_t) ((cpu_ticks_load * 100) / main_idle_cpu_ticks);
 2109              		.loc 1 975 0
 2110 000a 6423     		movs	r3, #100
 2111 000c 03FB02F3 		mul	r3, r3, r2
 2112 0010 B3FBF0F3 		udiv	r3, r3, r0
 2113 0014 044A     		ldr	r2, .L129+8
 2114              	.LVL164:
 2115 0016 1370     		strb	r3, [r2]
 976:../src/main.c **** 
 977:../src/main.c **** 	// reset the tick counter back to zero;
 978:../src/main.c **** 	main_current_cpu_idle_ticks = 0;
 2116              		.loc 1 978 0
 2117 0018 0023     		movs	r3, #0
 2118 001a 0B60     		str	r3, [r1]
 2119              	.LVL165:
 979:../src/main.c **** }
 2120              		.loc 1 979 0
 2121 001c 7047     		bx	lr
 2122              	.L130:
 2123 001e 00BF     		.align	2
 2124              	.L129:
 2125 0020 00000000 		.word	.LANCHOR4
 2126 0024 00000000 		.word	.LANCHOR14
 2127 0028 00000000 		.word	.LANCHOR24
 2128              		.cfi_endproc
 2129              	.LFE107:
 2131              		.global	kiss10m
 2132              		.global	digidrop10m
 2133              		.global	digi10m
 2134              		.global	tx10m
 2135              		.global	rx10m
 2136              		.comm	after_tx_lock,1,1
 2137              		.global	main_crc_result
 2138              		.global	main_umb_retval
 2139              		.global	buffer_len
 2140              		.global	retval
 2141              		.global	main_symbol_s
 2142              		.global	main_symbol_f
 2143              		.comm	main_string_longitude,9,4
 2144              		.comm	main_string_latitude,9,4
 2145              		.comm	main_own_aprs_msg,160,4
 2146              		.comm	main_own_aprs_msg_len,1,1
 2147              		.global	main_own_path_ln
 2148              		.comm	main_own_path,21,4
 2149              		.comm	main_afsk,1092,4
 2150              		.comm	main_ax25,536,4
 2151              		.global	main_modbus_rtu_master_enabled
 2152              		.global	main_davis_serial_enabled
 2153              		.global	main_kiss_enabled
 2154              		.comm	main_target_wx_baudrate,4,4
 2155              		.comm	main_target_kiss_baudrate,4,4
 2156              		.comm	main_wx_srl_ctx_ptr,4,4
 2157              		.comm	main_kiss_srl_ctx_ptr,4,4
 2158              		.comm	main_wx_srl_ctx,88,4
 2159              		.comm	main_kiss_srl_ctx,88,4
 2160              		.global	main_ten_second_pool_timer
 2161              		.global	main_two_second_pool_timer
 2162              		.global	main_one_second_pool_timer
 2163              		.global	main_one_minute_pool_timer
 2164              		.global	main_wx_sensors_pool_timer
 2165              		.global	main_cpu_load
 2166              		.global	main_current_cpu_idle_ticks
 2167              		.global	main_idle_cpu_ticks
 2168              		.global	master_time
 2169              		.global	main_config_data_rtu
 2170              		.global	main_config_data_umb
 2171              		.global	main_config_data_wx_sources
 2172              		.global	main_config_data_basic
 2173              		.global	main_config_data_mode
 2174              		.section	.bss.buffer_len,"aw",%nobits
 2175              		.align	1
 2176              		.set	.LANCHOR16,. + 0
 2179              	buffer_len:
 2180 0000 0000     		.space	2
 2181              		.section	.bss.digi10m,"aw",%nobits
 2182              		.align	1
 2185              	digi10m:
 2186 0000 0000     		.space	2
 2187              		.section	.bss.digidrop10m,"aw",%nobits
 2188              		.align	1
 2191              	digidrop10m:
 2192 0000 0000     		.space	2
 2193              		.section	.bss.kiss10m,"aw",%nobits
 2194              		.align	1
 2195              		.set	.LANCHOR18,. + 0
 2198              	kiss10m:
 2199 0000 0000     		.space	2
 2200              		.section	.bss.main_config_data_basic,"aw",%nobits
 2201              		.align	2
 2202              		.set	.LANCHOR1,. + 0
 2205              	main_config_data_basic:
 2206 0000 00000000 		.space	4
 2207              		.section	.bss.main_config_data_mode,"aw",%nobits
 2208              		.align	2
 2209              		.set	.LANCHOR5,. + 0
 2212              	main_config_data_mode:
 2213 0000 00000000 		.space	4
 2214              		.section	.bss.main_config_data_rtu,"aw",%nobits
 2215              		.align	2
 2216              		.set	.LANCHOR8,. + 0
 2219              	main_config_data_rtu:
 2220 0000 00000000 		.space	4
 2221              		.section	.bss.main_config_data_umb,"aw",%nobits
 2222              		.align	2
 2223              		.set	.LANCHOR11,. + 0
 2226              	main_config_data_umb:
 2227 0000 00000000 		.space	4
 2228              		.section	.bss.main_config_data_wx_sources,"aw",%nobits
 2229              		.align	2
 2230              		.set	.LANCHOR13,. + 0
 2233              	main_config_data_wx_sources:
 2234 0000 00000000 		.space	4
 2235              		.section	.bss.main_cpu_load,"aw",%nobits
 2236              		.set	.LANCHOR24,. + 0
 2239              	main_cpu_load:
 2240 0000 00       		.space	1
 2241              		.section	.bss.main_crc_result,"aw",%nobits
 2242              		.align	2
 2243              		.set	.LANCHOR0,. + 0
 2246              	main_crc_result:
 2247 0000 00000000 		.space	4
 2248              		.section	.bss.main_current_cpu_idle_ticks,"aw",%nobits
 2249              		.align	2
 2250              		.set	.LANCHOR14,. + 0
 2253              	main_current_cpu_idle_ticks:
 2254 0000 00000000 		.space	4
 2255              		.section	.bss.main_davis_serial_enabled,"aw",%nobits
 2256              		.set	.LANCHOR7,. + 0
 2259              	main_davis_serial_enabled:
 2260 0000 00       		.space	1
 2261              		.section	.bss.main_idle_cpu_ticks,"aw",%nobits
 2262              		.align	2
 2263              		.set	.LANCHOR4,. + 0
 2266              	main_idle_cpu_ticks:
 2267 0000 00000000 		.space	4
 2268              		.section	.bss.main_modbus_rtu_master_enabled,"aw",%nobits
 2269              		.set	.LANCHOR9,. + 0
 2272              	main_modbus_rtu_master_enabled:
 2273 0000 00       		.space	1
 2274              		.section	.bss.main_own_path_ln,"aw",%nobits
 2275              		.set	.LANCHOR10,. + 0
 2278              	main_own_path_ln:
 2279 0000 00       		.space	1
 2280              		.section	.bss.master_time,"aw",%nobits
 2281              		.align	2
 2282              		.set	.LANCHOR17,. + 0
 2285              	master_time:
 2286 0000 00000000 		.space	4
 2287              		.section	.bss.rx10m,"aw",%nobits
 2288              		.align	1
 2289              		.set	.LANCHOR15,. + 0
 2292              	rx10m:
 2293 0000 0000     		.space	2
 2294              		.section	.bss.tx10m,"aw",%nobits
 2295              		.align	1
 2298              	tx10m:
 2299 0000 0000     		.space	2
 2300              		.section	.data.main_kiss_enabled,"aw",%progbits
 2301              		.set	.LANCHOR6,. + 0
 2304              	main_kiss_enabled:
 2305 0000 01       		.byte	1
 2306              		.section	.data.main_one_minute_pool_timer,"aw",%progbits
 2307              		.align	2
 2308              		.set	.LANCHOR20,. + 0
 2311              	main_one_minute_pool_timer:
 2312 0000 60EA0000 		.word	60000
 2313              		.section	.data.main_one_second_pool_timer,"aw",%progbits
 2314              		.align	2
 2315              		.set	.LANCHOR21,. + 0
 2318              	main_one_second_pool_timer:
 2319 0000 E8030000 		.word	1000
 2320              		.section	.data.main_symbol_f,"aw",%progbits
 2321              		.set	.LANCHOR2,. + 0
 2324              	main_symbol_f:
 2325 0000 2F       		.byte	47
 2326              		.section	.data.main_symbol_s,"aw",%progbits
 2327              		.set	.LANCHOR3,. + 0
 2330              	main_symbol_s:
 2331 0000 23       		.byte	35
 2332              		.section	.data.main_ten_second_pool_timer,"aw",%progbits
 2333              		.align	2
 2334              		.set	.LANCHOR23,. + 0
 2337              	main_ten_second_pool_timer:
 2338 0000 10270000 		.word	10000
 2339              		.section	.data.main_two_second_pool_timer,"aw",%progbits
 2340              		.align	2
 2341              		.set	.LANCHOR22,. + 0
 2344              	main_two_second_pool_timer:
 2345 0000 D0070000 		.word	2000
 2346              		.section	.data.main_umb_retval,"aw",%progbits
 2349              	main_umb_retval:
 2350 0000 7F       		.byte	127
 2351              		.section	.data.main_wx_sensors_pool_timer,"aw",%progbits
 2352              		.align	2
 2353              		.set	.LANCHOR19,. + 0
 2356              	main_wx_sensors_pool_timer:
 2357 0000 DCFF0000 		.word	65500
 2358              		.section	.data.retval,"aw",%progbits
 2359              		.set	.LANCHOR12,. + 0
 2362              	retval:
 2363 0000 64       		.byte	100
 2364              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 2365              		.align	2
 2366              	.LC0:
 2367 0000 3D257325 		.ascii	"=%s%c%c%s%c%c %s\000"
 2367      63256325 
 2367      73256325 
 2367      63202573 
 2367      00
 2368              		.text
 2369              	.Letext0:
 2370              		.file 4 "/usr/local/bin/gcc-arm-none-eabi-7-2018-q2-update/lib/gcc/arm-none-eabi/7.3.1/include/std
 2371              		.file 5 "../system/include/cmsis/stm32f10x.h"
 2372              		.file 6 "../system/include/cmsis/system_stm32f10x.h"
 2373              		.file 7 "../system/include/aprs/cfifo.h"
 2374              		.file 8 "../system/include/aprs/afsk.h"
 2375              		.file 9 "../system/include/aprs/ax25.h"
 2376              		.file 10 "../system/include/drivers/serial.h"
 2377              		.file 11 "../include/config_data.h"
 2378              		.file 12 "../include/main.h"
 2379              		.file 13 "../include/delay.h"
 2380              		.file 14 "../include/LedConfig.h"
 2381              		.file 15 "/usr/local/bin/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/lock.h"
 2382              		.file 16 "/usr/local/bin/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/_types.h"
 2383              		.file 17 "/usr/local/bin/gcc-arm-none-eabi-7-2018-q2-update/lib/gcc/arm-none-eabi/7.3.1/include/st
 2384              		.file 18 "/usr/local/bin/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/reent.h"
 2385              		.file 19 "/usr/local/bin/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/stdlib.h"
 2386              		.file 20 "../include/config_data_externs.h"
 2387              		.file 21 "../include/configuration_handler.h"
 2388              		.file 22 "/usr/local/bin/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/unistd.h"
 2389              		.file 23 "/usr/local/bin/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/math.h"
 2390              		.file 24 "../system/include/aprs/afsk_pr.h"
 2391              		.file 25 "../system/include/./drivers/dallas.h"
 2392              		.file 26 "../system/include/./drivers/ms5611.h"
 2393              		.file 27 "../system/include/./umb_master/umb_qf_t.h"
 2394              		.file 28 "../system/include/./ve_direct_protocol/raw_struct.h"
 2395              		.file 29 "../system/include/./ve_direct_protocol/average_struct.h"
 2396              		.file 30 "../system/include/drivers/analog_anemometer.h"
 2397              		.file 31 "../system/include/davis_vantage/davis_qf_t.h"
 2398              		.file 32 "../system/include/davis_vantage/davis_loop_t.h"
 2399              		.file 33 "../system/include/umb_master/umb_frame_t.h"
 2400              		.file 34 "../system/include/umb_master/umb_retval_t.h"
 2401              		.file 35 "../system/include/umb_master/umb_state_t.h"
 2402              		.file 36 "../system/include/umb_master/umb_context_t.h"
 2403              		.file 37 "../system/include/umb_master/umb_call_reason.h"
 2404              		.file 38 "../system/include/drivers/bme280.h"
 2405              		.file 39 "../include/rte_wx.h"
 2406              		.file 40 "../include/rte_pv.h"
 2407              		.file 41 "../include/rte_main.h"
 2408              		.file 42 "../system/include/modbus_rtu/rtu_register_data_t.h"
 2409              		.file 43 "../system/include/modbus_rtu/rtu_exception_t.h"
 2410              		.file 44 "../system/include/modbus_rtu/rtu_pool_queue_t.h"
 2411              		.file 45 "../include/rte_rtu.h"
 2412              		.file 46 "../include/wx_handler.h"
 2413              		.file 47 "../system/include/drivers/i2c.h"
 2414              		.file 48 "../src/../system/include/modbus_rtu/rtu_serial_io.h"
 2415              		.file 49 "../src/../system/include/davis_vantage/davis.h"
 2416              		.file 50 "../include/KissCommunication.h"
 2417              		.file 51 "/usr/local/bin/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/string.h"
 2418              		.file 52 "../system/include/stm32f1-stdperiph/misc.h"
 2419              		.file 53 "../include/float_to_string.h"
 2420              		.file 54 "../src/io.h"
 2421              		.file 55 "../system/include/drivers/gpio_conf.h"
 2422              		.file 56 "../system/include/stm32f1-stdperiph/stm32f10x_gpio.h"
 2423              		.file 57 "../include/PathConfig.h"
 2424              		.file 58 "../system/include/stm32f1-stdperiph/stm32f10x_iwdg.h"
 2425              		.file 59 "../system/include/stm32f1-stdperiph/stm32f10x_dbgmcu.h"
 2426              		.file 60 "../system/include/aprs/dac.h"
 2427              		.file 61 "../system/include/aprs/digi.h"
 2428              		.file 62 "../include/it_handlers.h"
 2429              		.file 63 "../include/TimerConfig.h"
 2430              		.file 64 "../system/include/umb_master/umb_master.h"
 2431              		.file 65 "/usr/local/bin/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/stdio.h"
 2432              		.file 66 "../system/include/ve_direct_protocol/parser.h"
 2433              		.file 67 "../system/include/aprs/beacon.h"
 2434              		.file 68 "../system/include/umb_master/umb_0x26_status.h"
 2435              		.file 69 "../system/include/aprs/wx.h"
 2436              		.file 70 "../include/packet_tx_handler.h"
 2437              		.file 71 "../system/include/umb_master/umb_channel_pool.h"
 2438              		.file 72 "../src/../system/include/davis_vantage/davis_parsers.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccx5BaCz.s:16     .text.message_callback:0000000000000000 $t
     /tmp/ccx5BaCz.s:22     .text.message_callback:0000000000000000 message_callback
     /tmp/ccx5BaCz.s:37     .text.main:0000000000000000 $t
     /tmp/ccx5BaCz.s:44     .text.main:0000000000000000 main
     /tmp/ccx5BaCz.s:317    .text.main:00000000000001a6 $d
     /tmp/ccx5BaCz.s:321    .text.main:00000000000001ae $t
     /tmp/ccx5BaCz.s:413    .text.main:0000000000000248 $d
                            *COM*:00000000000000a0 main_own_aprs_msg
                            *COM*:0000000000000009 main_string_latitude
                            *COM*:0000000000000009 main_string_longitude
     /tmp/ccx5BaCz.s:431    .text.main:0000000000000288 $t
     /tmp/ccx5BaCz.s:882    .text.main:0000000000000578 $d
                            *COM*:0000000000000004 main_kiss_srl_ctx_ptr
                            *COM*:0000000000000058 main_kiss_srl_ctx
                            *COM*:0000000000000004 main_wx_srl_ctx_ptr
                            *COM*:0000000000000058 main_wx_srl_ctx
                            *COM*:0000000000000004 main_target_kiss_baudrate
                            *COM*:0000000000000004 main_target_wx_baudrate
                            *COM*:0000000000000015 main_own_path
                            *COM*:0000000000000444 main_afsk
                            *COM*:0000000000000218 main_ax25
     /tmp/ccx5BaCz.s:912    .text.main:00000000000005e8 $t
     /tmp/ccx5BaCz.s:1286   .text.main:0000000000000838 $d
                            *COM*:0000000000000001 main_own_aprs_msg_len
     /tmp/ccx5BaCz.s:1336   .text.main:00000000000008f4 $t
     /tmp/ccx5BaCz.s:1724   .text.main:0000000000000b88 $d
     /tmp/ccx5BaCz.s:1762   .text.main:0000000000000c18 $t
     /tmp/ccx5BaCz.s:2029   .text.main:0000000000000dc0 $d
     /tmp/ccx5BaCz.s:2059   .text.main_get_adc_sample:0000000000000000 $t
     /tmp/ccx5BaCz.s:2066   .text.main_get_adc_sample:0000000000000000 main_get_adc_sample
     /tmp/ccx5BaCz.s:2082   .text.main_get_adc_sample:0000000000000008 $d
     /tmp/ccx5BaCz.s:2087   .text.main_service_cpu_load_ticks:0000000000000000 $t
     /tmp/ccx5BaCz.s:2094   .text.main_service_cpu_load_ticks:0000000000000000 main_service_cpu_load_ticks
     /tmp/ccx5BaCz.s:2125   .text.main_service_cpu_load_ticks:0000000000000020 $d
     /tmp/ccx5BaCz.s:2198   .bss.kiss10m:0000000000000000 kiss10m
     /tmp/ccx5BaCz.s:2191   .bss.digidrop10m:0000000000000000 digidrop10m
     /tmp/ccx5BaCz.s:2185   .bss.digi10m:0000000000000000 digi10m
     /tmp/ccx5BaCz.s:2298   .bss.tx10m:0000000000000000 tx10m
     /tmp/ccx5BaCz.s:2292   .bss.rx10m:0000000000000000 rx10m
                            *COM*:0000000000000001 after_tx_lock
     /tmp/ccx5BaCz.s:2246   .bss.main_crc_result:0000000000000000 main_crc_result
     /tmp/ccx5BaCz.s:2349   .data.main_umb_retval:0000000000000000 main_umb_retval
     /tmp/ccx5BaCz.s:2179   .bss.buffer_len:0000000000000000 buffer_len
     /tmp/ccx5BaCz.s:2362   .data.retval:0000000000000000 retval
     /tmp/ccx5BaCz.s:2330   .data.main_symbol_s:0000000000000000 main_symbol_s
     /tmp/ccx5BaCz.s:2324   .data.main_symbol_f:0000000000000000 main_symbol_f
     /tmp/ccx5BaCz.s:2278   .bss.main_own_path_ln:0000000000000000 main_own_path_ln
     /tmp/ccx5BaCz.s:2272   .bss.main_modbus_rtu_master_enabled:0000000000000000 main_modbus_rtu_master_enabled
     /tmp/ccx5BaCz.s:2259   .bss.main_davis_serial_enabled:0000000000000000 main_davis_serial_enabled
     /tmp/ccx5BaCz.s:2304   .data.main_kiss_enabled:0000000000000000 main_kiss_enabled
     /tmp/ccx5BaCz.s:2337   .data.main_ten_second_pool_timer:0000000000000000 main_ten_second_pool_timer
     /tmp/ccx5BaCz.s:2344   .data.main_two_second_pool_timer:0000000000000000 main_two_second_pool_timer
     /tmp/ccx5BaCz.s:2318   .data.main_one_second_pool_timer:0000000000000000 main_one_second_pool_timer
     /tmp/ccx5BaCz.s:2311   .data.main_one_minute_pool_timer:0000000000000000 main_one_minute_pool_timer
     /tmp/ccx5BaCz.s:2356   .data.main_wx_sensors_pool_timer:0000000000000000 main_wx_sensors_pool_timer
     /tmp/ccx5BaCz.s:2239   .bss.main_cpu_load:0000000000000000 main_cpu_load
     /tmp/ccx5BaCz.s:2253   .bss.main_current_cpu_idle_ticks:0000000000000000 main_current_cpu_idle_ticks
     /tmp/ccx5BaCz.s:2266   .bss.main_idle_cpu_ticks:0000000000000000 main_idle_cpu_ticks
     /tmp/ccx5BaCz.s:2285   .bss.master_time:0000000000000000 master_time
     /tmp/ccx5BaCz.s:2219   .bss.main_config_data_rtu:0000000000000000 main_config_data_rtu
     /tmp/ccx5BaCz.s:2226   .bss.main_config_data_umb:0000000000000000 main_config_data_umb
     /tmp/ccx5BaCz.s:2233   .bss.main_config_data_wx_sources:0000000000000000 main_config_data_wx_sources
     /tmp/ccx5BaCz.s:2205   .bss.main_config_data_basic:0000000000000000 main_config_data_basic
     /tmp/ccx5BaCz.s:2212   .bss.main_config_data_mode:0000000000000000 main_config_data_mode
     /tmp/ccx5BaCz.s:2175   .bss.buffer_len:0000000000000000 $d
     /tmp/ccx5BaCz.s:2182   .bss.digi10m:0000000000000000 $d
     /tmp/ccx5BaCz.s:2188   .bss.digidrop10m:0000000000000000 $d
     /tmp/ccx5BaCz.s:2194   .bss.kiss10m:0000000000000000 $d
     /tmp/ccx5BaCz.s:2201   .bss.main_config_data_basic:0000000000000000 $d
     /tmp/ccx5BaCz.s:2208   .bss.main_config_data_mode:0000000000000000 $d
     /tmp/ccx5BaCz.s:2215   .bss.main_config_data_rtu:0000000000000000 $d
     /tmp/ccx5BaCz.s:2222   .bss.main_config_data_umb:0000000000000000 $d
     /tmp/ccx5BaCz.s:2229   .bss.main_config_data_wx_sources:0000000000000000 $d
     /tmp/ccx5BaCz.s:2240   .bss.main_cpu_load:0000000000000000 $d
     /tmp/ccx5BaCz.s:2242   .bss.main_crc_result:0000000000000000 $d
     /tmp/ccx5BaCz.s:2249   .bss.main_current_cpu_idle_ticks:0000000000000000 $d
     /tmp/ccx5BaCz.s:2260   .bss.main_davis_serial_enabled:0000000000000000 $d
     /tmp/ccx5BaCz.s:2262   .bss.main_idle_cpu_ticks:0000000000000000 $d
     /tmp/ccx5BaCz.s:2273   .bss.main_modbus_rtu_master_enabled:0000000000000000 $d
     /tmp/ccx5BaCz.s:2279   .bss.main_own_path_ln:0000000000000000 $d
     /tmp/ccx5BaCz.s:2281   .bss.master_time:0000000000000000 $d
     /tmp/ccx5BaCz.s:2288   .bss.rx10m:0000000000000000 $d
     /tmp/ccx5BaCz.s:2295   .bss.tx10m:0000000000000000 $d
     /tmp/ccx5BaCz.s:2307   .data.main_one_minute_pool_timer:0000000000000000 $d
     /tmp/ccx5BaCz.s:2314   .data.main_one_second_pool_timer:0000000000000000 $d
     /tmp/ccx5BaCz.s:2333   .data.main_ten_second_pool_timer:0000000000000000 $d
     /tmp/ccx5BaCz.s:2340   .data.main_two_second_pool_timer:0000000000000000 $d
     /tmp/ccx5BaCz.s:2352   .data.main_wx_sensors_pool_timer:0000000000000000 $d
     /tmp/ccx5BaCz.s:2365   .rodata.main.str1.4:0000000000000000 $d
                           .group:0000000000000000 wm4.0.879aed89c359f5856fe69c61b3590d34
                           .group:0000000000000000 wm4.stdintgcc.h.29.6d480f4ba0f60596e88234283d42444f
                           .group:0000000000000000 wm4.stm32f10x.h.51.c58ea26c5150470d52680f0bbaa7049c
                           .group:0000000000000000 wm4.core_cm3.h.42.c33bb1302bf53de0580fb6140a46f2eb
                           .group:0000000000000000 wm4.cmsis_gcc.h.36.67d2dcde6a14ff518eedc1d545d89a76
                           .group:0000000000000000 wm4.core_cm3.h.183.ecfd9c316d6f10b73648f6e579b02c8b
                           .group:0000000000000000 wm4.stm32f10x.h.522.a925aafc848b1f088438cf0e9b167b78
                           .group:0000000000000000 wm4.stm32f10x.h.8317.9a8e476d96d33bb2df9a9ad0775bd4a7
                           .group:0000000000000000 wm4.stm32f10x_adc.h.89.9f2b285fa0070185d48a05b61a05798c
                           .group:0000000000000000 wm4.stm32f10x_bkp.h.25.4622919f1e30efdad5eb44e12edd5513
                           .group:0000000000000000 wm4.stm32f10x_can.h.25.e5e43f6bbc8fc7c8aa30ef2bc5610ced
                           .group:0000000000000000 wm4.stm32f10x_cec.h.25.8f03450e7bbb704d96e7bc73ec0f66a7
                           .group:0000000000000000 wm4.stm32f10x_dac.h.25.d946244edf026333094657d55ea894b8
                           .group:0000000000000000 wm4.stm32f10x_dbgmcu.h.25.d3351200fc7f9c8615d1ae81d40db08a
                           .group:0000000000000000 wm4.stm32f10x_dma.h.25.94e36204daa98cae5dcc70a10a9694d5
                           .group:0000000000000000 wm4.stm32f10x_exti.h.25.f52c69aad7d1994be5b2c4e2b8f4c595
                           .group:0000000000000000 wm4.stm32f10x_flash.h.25.4be61fcb02863962a1e006449d310650
                           .group:0000000000000000 wm4.stm32f10x_fsmc.h.25.bca154da2699cdb6024c0c6c4fc5aa89
                           .group:0000000000000000 wm4.stm32f10x_gpio.h.25.80c981af0e637567395034c576cfb3ce
                           .group:0000000000000000 wm4.stm32f10x_i2c.h.25.b124ac2c620f8ebddd92b6d95ca62176
                           .group:0000000000000000 wm4.stm32f10x_iwdg.h.25.da9374ab9856795610487f312ccf3122
                           .group:0000000000000000 wm4.stm32f10x_pwr.h.25.37ef75009f751ef5fe27910e0bf00a62
                           .group:0000000000000000 wm4.stm32f10x_rcc.h.25.fe8897e7491f2eb0cff54551d08eb765
                           .group:0000000000000000 wm4.stm32f10x_rtc.h.25.361142606ba98ddcd10369f321f6e636
                           .group:0000000000000000 wm4.stm32f10x_sdio.h.25.fb0db079f5c1412c40f359319f7c40b0
                           .group:0000000000000000 wm4.stm32f10x_spi.h.25.3f6dfa4abe177efb3c6f5a717c06b323
                           .group:0000000000000000 wm4.stm32f10x_tim.h.25.f709106ba77b314e6b070693f89f3c56
                           .group:0000000000000000 wm4.stm32f10x_usart.h.25.2e65e396239d0cc41fd0bf6faa2a32cb
                           .group:0000000000000000 wm4.stm32f10x_wwdg.h.25.dde12201d86b5aa9ecaafb5eccdc6549
                           .group:0000000000000000 wm4.misc.h.25.068e106f368fa5369a681ef57c106f4b
                           .group:0000000000000000 wm4.stdbool.h.29.07dce69c3b78884144b7f7bd19483461
                           .group:0000000000000000 wm4.macros.h.2.7a7a5ac48d4160b7481c806e80b68442
                           .group:0000000000000000 wm4.config.h.2.f5e96167cb26b0ce97c5e7513a95bc8b
                           .group:0000000000000000 wm4.afsk.h.17.cf8f922069680e152e1eddb76cd4cc82
                           .group:0000000000000000 wm4.ax25.h.18.077e42a4af9016476e34900472a8fe18
                           .group:0000000000000000 wm4.serial.h.2.3544b1c529a5f3b4e56f5aba673d9e30
                           .group:0000000000000000 wm4.config_data.h.9.6026a38cd2f39158a8fd50707ba1bf90
                           .group:0000000000000000 wm4.main.h.8.3d6ad69e5f061008d8c5cc5f5c9dd15a
                           .group:0000000000000000 wm4.LedConfig.h.9.4a74d08cbc106d05b2f378fae766cd79
                           .group:0000000000000000 wm4._newlib_version.h.4.875b979a44719054cd750d0952ad3fd6
                           .group:0000000000000000 wm4.newlib.h.18.5e5ca3429233af402d406a202f1fc1ac
                           .group:0000000000000000 wm4.ieeefp.h.77.220d9cccac42cd58761758bee2df4ce6
                           .group:0000000000000000 wm4.features.h.22.fad1cec3bc7ff06488171438dbdcfd02
                           .group:0000000000000000 wm4.config.h.220.6cac6a9685cfce5e83c17784171638d9
                           .group:0000000000000000 wm4._ansi.h.31.de524f58584151836e90d8620a16f8e8
                           .group:0000000000000000 wm4.stdio.h.31.7c0e28c411445f3f9c5b11accf882760
                           .group:0000000000000000 wm4._default_types.h.6.959254cf5f09734ea7516c89e8bb21bd
                           .group:0000000000000000 wm4.stddef.h.187.2ff233552538c6ff9b8575ca8ea52cb3
                           .group:0000000000000000 wm4.cdefs.h.47.0bcdf94cb40e176393dd1404056825b4
                           .group:0000000000000000 wm4.stddef.h.39.ec95e8feac892e292b69dc7ae75b0d64
                           .group:0000000000000000 wm4.stdarg.h.34.3a23a216c0c293b3d2ea2e89281481e6
                           .group:0000000000000000 wm4.lock.h.2.1461d1fff82dffe8bfddc23307f6484f
                           .group:0000000000000000 wm4._types.h.125.5cf8a495f1f7ef36777ad868a1e32068
                           .group:0000000000000000 wm4.stddef.h.161.5349cb105733e8777bfb0cf53c4e3f34
                           .group:0000000000000000 wm4._types.h.184.03611d4f6b5bec9997bcf4279eceba07
                           .group:0000000000000000 wm4.reent.h.17.90c2574d4acdcfce933db5cb09ff35fe
                           .group:0000000000000000 wm4.types.h.40.e8c16e7ec36ba55f133d0616070e25fc
                           .group:0000000000000000 wm4._stdint.h.10.c24fa3af3bc1706662bb5593a907e841
                           .group:0000000000000000 wm4._endian.h.31.65a10590763c3dde1ac4a7f66d7d4891
                           .group:0000000000000000 wm4.endian.h.9.49f3a4695c1b61e8a0808de3c4a106cb
                           .group:0000000000000000 wm4._timeval.h.30.0e8bfd94e85db17dda3286ee81496fe6
                           .group:0000000000000000 wm4.timespec.h.41.d855182eb0e690443ab8651bcedca6e1
                           .group:0000000000000000 wm4.select.h.19.97ca6fd0c752a0f3b6719fd314d361e6
                           .group:0000000000000000 wm4.types.h.69.ed3eae3cf73030a737515151ebcab7a1
                           .group:0000000000000000 wm4.sched.h.22.c60982713a5c428609783c78f9c78d95
                           .group:0000000000000000 wm4._pthreadtypes.h.36.fcee9961c35163dde6267ef772ad1972
                           .group:0000000000000000 wm4.stdio.h.2.4aa87247282eca6c8f36f9de33d8df1a
                           .group:0000000000000000 wm4.stdio.h.81.932d0c162786b883f622b8d05c120c78
                           .group:0000000000000000 wm4.stdlib.h.13.4ed386f5c1a80d71e72172885d946ef2
                           .group:0000000000000000 wm4.stddef.h.161.19e15733342b50ead2919490b095303e
                           .group:0000000000000000 wm4.alloca.h.8.dfc0c703c47ec3e69746825b17d9e66d
                           .group:0000000000000000 wm4.stdlib.h.56.d4493cd3736e51e9d56335045f26df45
                           .group:0000000000000000 wm4.string.h.8.c4b8571ce60dff2817f43fec8b86aecd
                           .group:0000000000000000 wm4.gpio_conf.h.2.69b8036899651cb596b9dee7090abf1b
                           .group:0000000000000000 wm4.station_config.h.9.75b6c5687acc8f60d219d6a552b2bf59
                           .group:0000000000000000 wm4.unistd.h.2.39165d5b7784d1815ef4b0c4be6df560
                           .group:0000000000000000 wm4.unistd.h.170.da6e816043042c61475c2b1f58468b37
                           .group:0000000000000000 wm4.antilib_adc.h.10.beb33c5f49564637478b9d419893c0dd
                           .group:0000000000000000 wm4.afsk_pr.h.2.c290e31eb7b451f1b12d808924cb83a5
                           .group:0000000000000000 wm4.math.h.13.adb102f7bd7860b1f241e149d6914a1e
                           .group:0000000000000000 wm4.digi.h.14.769ea2ae98162dd36806ccf4982c3c8a
                           .group:0000000000000000 wm4.dallas.h.9.37151f0644013066a1f9228af94bba9c
                           .group:0000000000000000 wm4.ms5611.h.2.e8d7d70736a1417e3bb355d7656eb450
                           .group:0000000000000000 wm4.average_struct.h.9.41820d0d7dc25dca8a9005c6d1a8bb5f
                           .group:0000000000000000 wm4.telemetry.h.21.a87436b8ee86f5e60170454e063be1e3
                           .group:0000000000000000 wm4.parser.h.9.2d68c8669e0bffa77926bbb9bf5a2aba
                           .group:0000000000000000 wm4.analog_anemometer.h.9.8c21570f6fc3dcd7763ba4d0d5168e3c
                           .group:0000000000000000 wm4.umb_frame_t.h.9.05796095a57acd1575f07118cb6ab058
                           .group:0000000000000000 wm4.umb_defines.h.9.77e79b84cd2dd9a74204aaeb1ca9d6be
                           .group:0000000000000000 wm4.bme280.h.9.aefe05f9329372f30337537cea488dce
                           .group:0000000000000000 wm4.rte_wx.h.30.cb80bd87f9fae81b43459954f1781e96
                           .group:0000000000000000 wm4.rtu_configuration.h.9.225559723a46d58da796e0ac6cb0b2ac
                           .group:0000000000000000 wm4.wx_handler.h.9.70f7141466ac521f5731794f4f690a16
                           .group:0000000000000000 wm4.davis_retval_def.h.9.025968613fbef7aa10339676702cdb4e
                           .group:0000000000000000 wm4.davis.h.18.aa92228551d9a3484fe55d6024d1b87b
                           .group:0000000000000000 wm4.davis_parsers.h.15.1cf20b7725fbc6387ea18eb1ec35046c
                           .group:0000000000000000 wm4.KissCommunication.h.17.f1e76db053f07badac1040f3bea74fb3

UNDEFINED SYMBOLS
memset
NVIC_PriorityGroupConfig
SysTick_CLKSourceConfig
rte_wx_init
rte_rtu_init
configuration_handler_check_crc
configuration_handler_restore_default_first
configuration_handler_restore_default_second
configuration_handler_load_configuration
float_to_string
SystemCoreClock
rte_main_reboot_req
rte_main_hard_faults
rte_main_boot_cycles
config_data_pgm_cntr_first
config_data_pgm_cntr_second
delay_set
io_oc_init
wx_pwr_init
wx_pwr_periodic_handle
delay_fixed_with_count
Configure_GPIO
GPIO_ResetBits
srl_init
ConfigPath
IWDG_WriteAccessCmd
IWDG_SetPrescaler
IWDG_SetReload
IWDG_Enable
DBGMCU_Config
IWDG_ReloadCounter
i2cConfigure
led_init
AFSK_Init
ax25_init
DA_Init
digi_init
it_handlers_set_priorities
ADCStartConfig
DACStartConfig
srl_receive_data
io_oc_output_low
TimerConfig
srl_switch_timeout
davis_init
davis_wake_up
davis_control_backlight
delay_fixed
davis_trigger_rxcheck_packet
srl_usart1_tx_buffer
srl_usart1_rx_buffer
srl_usart2_tx_buffer
srl_usart2_rx_buffer
rte_wx_davis_station_avaliable
rtu_serial_init
srl_switch_tx_delay
rtu_serial_start
dallas_init
umb_master_init
analog_anemometer_init
ms5611_reset
ms5611_read_calibration
ms5611_trigger_measure
bme280_reset
bme280_setup
bme280_read_calibration
sprintf
ax25_sendVia_toBuffer
srl_start_tx
wx_get_all_measurements
ve_direct_parser_init
beacon_send_own
umb_0x26_status_request
srl_wait_for_tx_completion
SendWXFrameToBuffer
rte_rtu_pool_queue
rte_wx_dallas_average
rte_wx_umb_context
rte_wx_ms5611_qf
SensorCalData
rte_wx_bme280_qf
bme280_calibration_data
rte_pv_average
rte_pv_struct
rte_wx_umb
rte_wx_average_winddirection
rte_wx_max_windspeed
rte_wx_average_windspeed
rte_wx_humidity
rte_wx_pressure_valid
rte_wx_temperature_average_external_valid
digi_process
SendKISSToHost
wx_pool_anemometer
GPIO_ReadInputDataBit
srl_get_rx_buffer
ve_direct_cut_to_checksum
ve_direct_validate_checksum
ve_direct_parse_to_raw_struct
ve_direct_add_to_average
ve_direct_get_averages
ve_direct_set_sys_voltage
ve_direct_store_errors
ax25_new_msg_rx_flag
ax25_rxed_frame
rte_main_trigger_modbus_status
rte_pv_load_current
rte_pv_cell_voltage
rte_pv_battery_voltage
rte_pv_battery_current
rte_pv_sys_voltage
rte_pv_last_error
rte_pv_messages_count
rte_pv_corrupted_messages_count
umb_pooling_handler
srl_get_num_bytes_rxed
ParseReceivedKISS
davis_loop_packet_pooler
davis_rxcheck_packet_pooler
rtu_serial_pool
rtu_serial_get_status_string
ax25_sendVia
afsk_txStart
packet_tx_handler
analog_anemometer_direction_handler
analog_anemometer_direction_reset
wx_check_force_i2c_reset
umb_channel_pool
umb_get_current_qf
davis_trigger_loop_packet
davis_parsers_loop
rte_wx_davis_loop_packet_avaliable
rte_wx_umb_qf
rte_wx_davis_loop_content
